<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: performance/autoscaling/v1alpha1/autoscaling.proto

namespace GPBMetadata\Performance\Autoscaling\V1Alpha1;

class Autoscaling
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        $pool->internalAddGeneratedFile(
            '
Ó
2performance/autoscaling/v1alpha1/autoscaling.proto performance.autoscaling.v1alpha1"æ
Metadata
name (	Rname
	namespace (	R	namespaceN
labels (26.performance.autoscaling.v1alpha1.Metadata.LabelsEntryRlabels]
annotations (2;.performance.autoscaling.v1alpha1.Metadata.AnnotationsEntryRannotations9
LabelsEntry
key (	Rkey
value (	Rvalue:8>
AnnotationsEntry
key (	Rkey
value (	Rvalue:8"~
AutoScalingSpecTarget
api_version (	R
apiVersion
kind (	Rkind
name (	Rname
	container (	R	container"õ
AutoscalingSpecRule
metric (	Rmetric
value (	Rvalue
type (	Rtype_
metadata (2C.performance.autoscaling.v1alpha1.AutoscalingSpecRule.MetadataEntryRmetadata;
MetadataEntry
key (	Rkey
value (	Rvalue:8"®
AutoscalingSpecV

target_ref (27.performance.autoscaling.v1alpha1.AutoScalingSpecTargetR	targetRef
min (Rmin
max (Rmax)
polling_interval (RpollingInterval\'
cooldown_period (RcooldownPeriodK
rules (25.performance.autoscaling.v1alpha1.AutoscalingSpecRuleRrules"œ
AutoscalingF
metadata (2*.performance.autoscaling.v1alpha1.MetadataRmetadataE
spec (21.performance.autoscaling.v1alpha1.AutoscalingSpecRspecBÁ
*io.cuemby.performance.autoscaling.v1alpha1BAutoscalingProtoPZ3github.com/performance-grpc-sdk/autoscalingv1alpha1¢PFXª Performance.Autoscaling.V1Alpha1Ê Performance\\Autoscaling\\V1Alpha1bproto3'
        , true);

        static::$is_initialized = true;
    }
}

