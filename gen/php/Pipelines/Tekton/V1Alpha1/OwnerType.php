<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pipelines/tekton/v1alpha1/tekton.proto

namespace Pipelines\Tekton\V1Alpha1;

use UnexpectedValueException;

/**
 * Protobuf type <code>pipelines.tekton.v1alpha1.OwnerType</code>
 */
class OwnerType
{
    /**
     * Generated from protobuf enum <code>OWNER_TYPE_UNSPECIFIED = 0;</code>
     */
    const OWNER_TYPE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>OWNER_TYPE_CUEMBY = 1;</code>
     */
    const OWNER_TYPE_CUEMBY = 1;
    /**
     * Generated from protobuf enum <code>OWNER_TYPE_ORG = 2;</code>
     */
    const OWNER_TYPE_ORG = 2;
    /**
     * Generated from protobuf enum <code>OWNER_TYPE_PROJECT = 3;</code>
     */
    const OWNER_TYPE_PROJECT = 3;

    private static $valueToName = [
        self::OWNER_TYPE_UNSPECIFIED => 'OWNER_TYPE_UNSPECIFIED',
        self::OWNER_TYPE_CUEMBY => 'OWNER_TYPE_CUEMBY',
        self::OWNER_TYPE_ORG => 'OWNER_TYPE_ORG',
        self::OWNER_TYPE_PROJECT => 'OWNER_TYPE_PROJECT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

