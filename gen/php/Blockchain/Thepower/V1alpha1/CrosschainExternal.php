<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blockchain/thepower/v1alpha1/thepower.proto

namespace Blockchain\Thepower\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>blockchain.thepower.v1alpha1.CrosschainExternal</code>
 */
class CrosschainExternal extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string host = 1 [json_name = "host"];</code>
     */
    protected $host = '';
    /**
     * Generated from protobuf field <code>int64 port = 2 [json_name = "port"];</code>
     */
    protected $port = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $host
     *     @type int|string $port
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Blockchain\Thepower\V1Alpha1\Thepower::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string host = 1 [json_name = "host"];</code>
     * @return string
     */
    public function getHost()
    {
        return $this->host;
    }

    /**
     * Generated from protobuf field <code>string host = 1 [json_name = "host"];</code>
     * @param string $var
     * @return $this
     */
    public function setHost($var)
    {
        GPBUtil::checkString($var, True);
        $this->host = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 port = 2 [json_name = "port"];</code>
     * @return int|string
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     * Generated from protobuf field <code>int64 port = 2 [json_name = "port"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setPort($var)
    {
        GPBUtil::checkInt64($var);
        $this->port = $var;

        return $this;
    }

}

