// source: payment/v1alpha1/payment_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var payment_v1alpha1_payment_pb = require('../../payment/v1alpha1/payment_pb.js');
goog.object.extend(proto, payment_v1alpha1_payment_pb);
goog.exportSymbol('proto.payment.v1alpha1.CreatePaymentRequest', null, global);
goog.exportSymbol('proto.payment.v1alpha1.CreatePaymentResponse', null, global);
goog.exportSymbol('proto.payment.v1alpha1.DeletePaymentRequest', null, global);
goog.exportSymbol('proto.payment.v1alpha1.DeletePaymentResponse', null, global);
goog.exportSymbol('proto.payment.v1alpha1.GetPaymentRequest', null, global);
goog.exportSymbol('proto.payment.v1alpha1.GetPaymentResponse', null, global);
goog.exportSymbol('proto.payment.v1alpha1.ListPaymentRequest', null, global);
goog.exportSymbol('proto.payment.v1alpha1.ListPaymentResponse', null, global);
goog.exportSymbol('proto.payment.v1alpha1.UpdatePaymentRequest', null, global);
goog.exportSymbol('proto.payment.v1alpha1.UpdatePaymentResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.CreatePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.CreatePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.CreatePaymentRequest.displayName = 'proto.payment.v1alpha1.CreatePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.CreatePaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.CreatePaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.CreatePaymentResponse.displayName = 'proto.payment.v1alpha1.CreatePaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.UpdatePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.UpdatePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.UpdatePaymentRequest.displayName = 'proto.payment.v1alpha1.UpdatePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.UpdatePaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.UpdatePaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.UpdatePaymentResponse.displayName = 'proto.payment.v1alpha1.UpdatePaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.DeletePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.DeletePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.DeletePaymentRequest.displayName = 'proto.payment.v1alpha1.DeletePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.DeletePaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.DeletePaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.DeletePaymentResponse.displayName = 'proto.payment.v1alpha1.DeletePaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.GetPaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.GetPaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.GetPaymentRequest.displayName = 'proto.payment.v1alpha1.GetPaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.GetPaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.GetPaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.GetPaymentResponse.displayName = 'proto.payment.v1alpha1.GetPaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.ListPaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.ListPaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.ListPaymentRequest.displayName = 'proto.payment.v1alpha1.ListPaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.ListPaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.ListPaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.ListPaymentResponse.displayName = 'proto.payment.v1alpha1.ListPaymentResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.CreatePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.CreatePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CreatePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && payment_v1alpha1_payment_pb.Payment.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.CreatePaymentRequest}
 */
proto.payment.v1alpha1.CreatePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.CreatePaymentRequest;
  return proto.payment.v1alpha1.CreatePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.CreatePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.CreatePaymentRequest}
 */
proto.payment.v1alpha1.CreatePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.Payment;
      reader.readMessage(value,payment_v1alpha1_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.CreatePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.CreatePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CreatePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.getPayment = function() {
  return /** @type{?proto.payment.v1alpha1.Payment} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.Payment, 1));
};


/**
 * @param {?proto.payment.v1alpha1.Payment|undefined} value
 * @return {!proto.payment.v1alpha1.CreatePaymentRequest} returns this
*/
proto.payment.v1alpha1.CreatePaymentRequest.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.CreatePaymentRequest} returns this
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.CreatePaymentRequest} returns this
 */
proto.payment.v1alpha1.CreatePaymentRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.CreatePaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.CreatePaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CreatePaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && payment_v1alpha1_payment_pb.Payment.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.CreatePaymentResponse}
 */
proto.payment.v1alpha1.CreatePaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.CreatePaymentResponse;
  return proto.payment.v1alpha1.CreatePaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.CreatePaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.CreatePaymentResponse}
 */
proto.payment.v1alpha1.CreatePaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.Payment;
      reader.readMessage(value,payment_v1alpha1_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.CreatePaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.CreatePaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CreatePaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.getPayment = function() {
  return /** @type{?proto.payment.v1alpha1.Payment} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.Payment, 1));
};


/**
 * @param {?proto.payment.v1alpha1.Payment|undefined} value
 * @return {!proto.payment.v1alpha1.CreatePaymentResponse} returns this
*/
proto.payment.v1alpha1.CreatePaymentResponse.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.CreatePaymentResponse} returns this
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.CreatePaymentResponse} returns this
 */
proto.payment.v1alpha1.CreatePaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.UpdatePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.UpdatePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.UpdatePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && payment_v1alpha1_payment_pb.Payment.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.UpdatePaymentRequest}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.UpdatePaymentRequest;
  return proto.payment.v1alpha1.UpdatePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.UpdatePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.UpdatePaymentRequest}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.Payment;
      reader.readMessage(value,payment_v1alpha1_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.UpdatePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.UpdatePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.UpdatePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.getPayment = function() {
  return /** @type{?proto.payment.v1alpha1.Payment} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.Payment, 1));
};


/**
 * @param {?proto.payment.v1alpha1.Payment|undefined} value
 * @return {!proto.payment.v1alpha1.UpdatePaymentRequest} returns this
*/
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.UpdatePaymentRequest} returns this
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.UpdatePaymentRequest} returns this
 */
proto.payment.v1alpha1.UpdatePaymentRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.UpdatePaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.UpdatePaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.UpdatePaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && payment_v1alpha1_payment_pb.Payment.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.UpdatePaymentResponse}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.UpdatePaymentResponse;
  return proto.payment.v1alpha1.UpdatePaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.UpdatePaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.UpdatePaymentResponse}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.Payment;
      reader.readMessage(value,payment_v1alpha1_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.UpdatePaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.UpdatePaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.UpdatePaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.getPayment = function() {
  return /** @type{?proto.payment.v1alpha1.Payment} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.Payment, 1));
};


/**
 * @param {?proto.payment.v1alpha1.Payment|undefined} value
 * @return {!proto.payment.v1alpha1.UpdatePaymentResponse} returns this
*/
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.UpdatePaymentResponse} returns this
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.UpdatePaymentResponse} returns this
 */
proto.payment.v1alpha1.UpdatePaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.DeletePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.DeletePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.DeletePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardHolderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cvvNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expiryDate: jspb.Message.getFieldWithDefault(msg, 6, 0),
    organizationId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    projectId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    applicationId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest}
 */
proto.payment.v1alpha1.DeletePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.DeletePaymentRequest;
  return proto.payment.v1alpha1.DeletePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.DeletePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest}
 */
proto.payment.v1alpha1.DeletePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardHolderName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCvvNumber(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpiryDate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrganizationId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProjectId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.DeletePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.DeletePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.DeletePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCardNumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCvvNumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExpiryDate();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_holder_name = 2;
 * @return {string}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getCardHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setCardHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_type = 3;
 * @return {string}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getCardType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setCardType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 card_number = 4;
 * @return {number}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getCardNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 cvv_number = 5;
 * @return {number}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getCvvNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setCvvNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 expiry_date = 6;
 * @return {number}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getExpiryDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setExpiryDate = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 organization_id = 7;
 * @return {number}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 project_id = 8;
 * @return {number}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string application_id = 9;
 * @return {string}
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.DeletePaymentRequest} returns this
 */
proto.payment.v1alpha1.DeletePaymentRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.DeletePaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.DeletePaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.DeletePaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.DeletePaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.DeletePaymentResponse}
 */
proto.payment.v1alpha1.DeletePaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.DeletePaymentResponse;
  return proto.payment.v1alpha1.DeletePaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.DeletePaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.DeletePaymentResponse}
 */
proto.payment.v1alpha1.DeletePaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.DeletePaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.DeletePaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.DeletePaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.DeletePaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.payment.v1alpha1.DeletePaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.DeletePaymentResponse} returns this
 */
proto.payment.v1alpha1.DeletePaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.GetPaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.GetPaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.GetPaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.GetPaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.GetPaymentRequest}
 */
proto.payment.v1alpha1.GetPaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.GetPaymentRequest;
  return proto.payment.v1alpha1.GetPaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.GetPaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.GetPaymentRequest}
 */
proto.payment.v1alpha1.GetPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.GetPaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.GetPaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.GetPaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.GetPaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.GetPaymentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.GetPaymentRequest} returns this
 */
proto.payment.v1alpha1.GetPaymentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.GetPaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.GetPaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.GetPaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && payment_v1alpha1_payment_pb.Payment.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.GetPaymentResponse}
 */
proto.payment.v1alpha1.GetPaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.GetPaymentResponse;
  return proto.payment.v1alpha1.GetPaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.GetPaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.GetPaymentResponse}
 */
proto.payment.v1alpha1.GetPaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.Payment;
      reader.readMessage(value,payment_v1alpha1_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.GetPaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.GetPaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.GetPaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.getPayment = function() {
  return /** @type{?proto.payment.v1alpha1.Payment} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.Payment, 1));
};


/**
 * @param {?proto.payment.v1alpha1.Payment|undefined} value
 * @return {!proto.payment.v1alpha1.GetPaymentResponse} returns this
*/
proto.payment.v1alpha1.GetPaymentResponse.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.GetPaymentResponse} returns this
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.GetPaymentResponse} returns this
 */
proto.payment.v1alpha1.GetPaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.ListPaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.ListPaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ListPaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cardHolderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.ListPaymentRequest}
 */
proto.payment.v1alpha1.ListPaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.ListPaymentRequest;
  return proto.payment.v1alpha1.ListPaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.ListPaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.ListPaymentRequest}
 */
proto.payment.v1alpha1.ListPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardHolderName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.ListPaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.ListPaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ListPaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCardHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCardNumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.ListPaymentRequest} returns this
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string card_holder_name = 2;
 * @return {string}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.getCardHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.ListPaymentRequest} returns this
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.setCardHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_type = 3;
 * @return {string}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.getCardType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.ListPaymentRequest} returns this
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.setCardType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 card_number = 4;
 * @return {number}
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.getCardNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.ListPaymentRequest} returns this
 */
proto.payment.v1alpha1.ListPaymentRequest.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.ListPaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.ListPaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ListPaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentList: (f = msg.getPaymentList()) && payment_v1alpha1_payment_pb.PaymentList.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.ListPaymentResponse}
 */
proto.payment.v1alpha1.ListPaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.ListPaymentResponse;
  return proto.payment.v1alpha1.ListPaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.ListPaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.ListPaymentResponse}
 */
proto.payment.v1alpha1.ListPaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new payment_v1alpha1_payment_pb.PaymentList;
      reader.readMessage(value,payment_v1alpha1_payment_pb.PaymentList.deserializeBinaryFromReader);
      msg.setPaymentList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.ListPaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.ListPaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ListPaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      payment_v1alpha1_payment_pb.PaymentList.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PaymentList payment_list = 1;
 * @return {?proto.payment.v1alpha1.PaymentList}
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.getPaymentList = function() {
  return /** @type{?proto.payment.v1alpha1.PaymentList} */ (
    jspb.Message.getWrapperField(this, payment_v1alpha1_payment_pb.PaymentList, 1));
};


/**
 * @param {?proto.payment.v1alpha1.PaymentList|undefined} value
 * @return {!proto.payment.v1alpha1.ListPaymentResponse} returns this
*/
proto.payment.v1alpha1.ListPaymentResponse.prototype.setPaymentList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.ListPaymentResponse} returns this
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.clearPaymentList = function() {
  return this.setPaymentList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.hasPaymentList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.ListPaymentResponse} returns this
 */
proto.payment.v1alpha1.ListPaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.payment.v1alpha1);
