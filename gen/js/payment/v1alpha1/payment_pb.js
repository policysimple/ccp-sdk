// source: payment/v1alpha1/payment.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.payment.v1alpha1.Biling', null, global);
goog.exportSymbol('proto.payment.v1alpha1.BilingList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Card', null, global);
goog.exportSymbol('proto.payment.v1alpha1.CardList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Customer', null, global);
goog.exportSymbol('proto.payment.v1alpha1.CustomerList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Invoice', null, global);
goog.exportSymbol('proto.payment.v1alpha1.InvoiceList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Payment', null, global);
goog.exportSymbol('proto.payment.v1alpha1.PaymentList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Project', null, global);
goog.exportSymbol('proto.payment.v1alpha1.ProjectList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.SubscriptionItems', null, global);
goog.exportSymbol('proto.payment.v1alpha1.SubscriptionItemsList', null, global);
goog.exportSymbol('proto.payment.v1alpha1.Suscription', null, global);
goog.exportSymbol('proto.payment.v1alpha1.SuscriptionList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Customer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.Customer.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.Customer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Customer.displayName = 'proto.payment.v1alpha1.Customer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Project = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Project, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Project.displayName = 'proto.payment.v1alpha1.Project';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Suscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Suscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Suscription.displayName = 'proto.payment.v1alpha1.Suscription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Payment.displayName = 'proto.payment.v1alpha1.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Card.displayName = 'proto.payment.v1alpha1.Card';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Invoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Invoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Invoice.displayName = 'proto.payment.v1alpha1.Invoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.Biling = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.Biling, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.Biling.displayName = 'proto.payment.v1alpha1.Biling';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.SubscriptionItems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment.v1alpha1.SubscriptionItems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.SubscriptionItems.displayName = 'proto.payment.v1alpha1.SubscriptionItems';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.SubscriptionItemsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.SubscriptionItemsList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.SubscriptionItemsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.SubscriptionItemsList.displayName = 'proto.payment.v1alpha1.SubscriptionItemsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.InvoiceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.InvoiceList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.InvoiceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.InvoiceList.displayName = 'proto.payment.v1alpha1.InvoiceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.CustomerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.CustomerList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.CustomerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.CustomerList.displayName = 'proto.payment.v1alpha1.CustomerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.BilingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.BilingList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.BilingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.BilingList.displayName = 'proto.payment.v1alpha1.BilingList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.SuscriptionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.SuscriptionList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.SuscriptionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.SuscriptionList.displayName = 'proto.payment.v1alpha1.SuscriptionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.CardList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.CardList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.CardList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.CardList.displayName = 'proto.payment.v1alpha1.CardList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.PaymentList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.PaymentList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.PaymentList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.PaymentList.displayName = 'proto.payment.v1alpha1.PaymentList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment.v1alpha1.ProjectList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment.v1alpha1.ProjectList.repeatedFields_, null);
};
goog.inherits(proto.payment.v1alpha1.ProjectList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment.v1alpha1.ProjectList.displayName = 'proto.payment.v1alpha1.ProjectList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.Customer.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Customer.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Customer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Customer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Customer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    suscription: (f = msg.getSuscription()) && proto.payment.v1alpha1.Suscription.toObject(includeInstance, f),
    payments: (f = msg.getPayments()) && proto.payment.v1alpha1.PaymentList.toObject(includeInstance, f),
    invoice: (f = msg.getInvoice()) && proto.payment.v1alpha1.Invoice.toObject(includeInstance, f),
    biling: (f = msg.getBiling()) && proto.payment.v1alpha1.Biling.toObject(includeInstance, f),
    projectsList: jspb.Message.toObjectList(msg.getProjectsList(),
    proto.payment.v1alpha1.Project.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Customer}
 */
proto.payment.v1alpha1.Customer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Customer;
  return proto.payment.v1alpha1.Customer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Customer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Customer}
 */
proto.payment.v1alpha1.Customer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = new proto.payment.v1alpha1.Suscription;
      reader.readMessage(value,proto.payment.v1alpha1.Suscription.deserializeBinaryFromReader);
      msg.setSuscription(value);
      break;
    case 7:
      var value = new proto.payment.v1alpha1.PaymentList;
      reader.readMessage(value,proto.payment.v1alpha1.PaymentList.deserializeBinaryFromReader);
      msg.setPayments(value);
      break;
    case 8:
      var value = new proto.payment.v1alpha1.Invoice;
      reader.readMessage(value,proto.payment.v1alpha1.Invoice.deserializeBinaryFromReader);
      msg.setInvoice(value);
      break;
    case 9:
      var value = new proto.payment.v1alpha1.Biling;
      reader.readMessage(value,proto.payment.v1alpha1.Biling.deserializeBinaryFromReader);
      msg.setBiling(value);
      break;
    case 10:
      var value = new proto.payment.v1alpha1.Project;
      reader.readMessage(value,proto.payment.v1alpha1.Project.deserializeBinaryFromReader);
      msg.addProjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Customer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Customer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Customer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Customer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSuscription();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.payment.v1alpha1.Suscription.serializeBinaryToWriter
    );
  }
  f = message.getPayments();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.payment.v1alpha1.PaymentList.serializeBinaryToWriter
    );
  }
  f = message.getInvoice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.payment.v1alpha1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getBiling();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.payment.v1alpha1.Biling.serializeBinaryToWriter
    );
  }
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.payment.v1alpha1.Project.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Customer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string customer_id = 2;
 * @return {string}
 */
proto.payment.v1alpha1.Customer.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 organization_id = 3;
 * @return {number}
 */
proto.payment.v1alpha1.Customer.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Customer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.payment.v1alpha1.Customer.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Suscription suscription = 6;
 * @return {?proto.payment.v1alpha1.Suscription}
 */
proto.payment.v1alpha1.Customer.prototype.getSuscription = function() {
  return /** @type{?proto.payment.v1alpha1.Suscription} */ (
    jspb.Message.getWrapperField(this, proto.payment.v1alpha1.Suscription, 6));
};


/**
 * @param {?proto.payment.v1alpha1.Suscription|undefined} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
*/
proto.payment.v1alpha1.Customer.prototype.setSuscription = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.clearSuscription = function() {
  return this.setSuscription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.Customer.prototype.hasSuscription = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PaymentList payments = 7;
 * @return {?proto.payment.v1alpha1.PaymentList}
 */
proto.payment.v1alpha1.Customer.prototype.getPayments = function() {
  return /** @type{?proto.payment.v1alpha1.PaymentList} */ (
    jspb.Message.getWrapperField(this, proto.payment.v1alpha1.PaymentList, 7));
};


/**
 * @param {?proto.payment.v1alpha1.PaymentList|undefined} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
*/
proto.payment.v1alpha1.Customer.prototype.setPayments = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.clearPayments = function() {
  return this.setPayments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.Customer.prototype.hasPayments = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Invoice invoice = 8;
 * @return {?proto.payment.v1alpha1.Invoice}
 */
proto.payment.v1alpha1.Customer.prototype.getInvoice = function() {
  return /** @type{?proto.payment.v1alpha1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.payment.v1alpha1.Invoice, 8));
};


/**
 * @param {?proto.payment.v1alpha1.Invoice|undefined} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
*/
proto.payment.v1alpha1.Customer.prototype.setInvoice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.clearInvoice = function() {
  return this.setInvoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.Customer.prototype.hasInvoice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Biling biling = 9;
 * @return {?proto.payment.v1alpha1.Biling}
 */
proto.payment.v1alpha1.Customer.prototype.getBiling = function() {
  return /** @type{?proto.payment.v1alpha1.Biling} */ (
    jspb.Message.getWrapperField(this, proto.payment.v1alpha1.Biling, 9));
};


/**
 * @param {?proto.payment.v1alpha1.Biling|undefined} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
*/
proto.payment.v1alpha1.Customer.prototype.setBiling = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.clearBiling = function() {
  return this.setBiling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.Customer.prototype.hasBiling = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated Project projects = 10;
 * @return {!Array<!proto.payment.v1alpha1.Project>}
 */
proto.payment.v1alpha1.Customer.prototype.getProjectsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Project>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Project, 10));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Project>} value
 * @return {!proto.payment.v1alpha1.Customer} returns this
*/
proto.payment.v1alpha1.Customer.prototype.setProjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.payment.v1alpha1.Project=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Project}
 */
proto.payment.v1alpha1.Customer.prototype.addProjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.payment.v1alpha1.Project, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.Customer} returns this
 */
proto.payment.v1alpha1.Customer.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Project.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Project.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Project} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Project.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    image: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Project}
 */
proto.payment.v1alpha1.Project.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Project;
  return proto.payment.v1alpha1.Project.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Project} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Project}
 */
proto.payment.v1alpha1.Project.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Project.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Project.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Project} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Project.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.payment.v1alpha1.Project.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Project} returns this
 */
proto.payment.v1alpha1.Project.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Suscription.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Suscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Suscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Suscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    suscriptionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    suscriptionItemId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invoiceId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    price: jspb.Message.getFieldWithDefault(msg, 5, ""),
    priceCpu: jspb.Message.getFieldWithDefault(msg, 6, ""),
    priceBytes: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 8, ""),
    interval: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Suscription}
 */
proto.payment.v1alpha1.Suscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Suscription;
  return proto.payment.v1alpha1.Suscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Suscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Suscription}
 */
proto.payment.v1alpha1.Suscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuscriptionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuscriptionItemId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoiceId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceCpu(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceBytes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Suscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Suscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Suscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Suscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuscriptionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSuscriptionItemId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvoiceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPriceCpu();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPriceBytes();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInterval();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string suscription_id = 2;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getSuscriptionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setSuscriptionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string suscription_item_id = 3;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getSuscriptionItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setSuscriptionItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string invoice_id = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getInvoiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setInvoiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string price = 5;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string price_cpu = 6;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getPriceCpu = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setPriceCpu = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string price_bytes = 7;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getPriceBytes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setPriceBytes = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string currency = 8;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string interval = 9;
 * @return {string}
 */
proto.payment.v1alpha1.Suscription.prototype.getInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Suscription} returns this
 */
proto.payment.v1alpha1.Suscription.prototype.setInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_default: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    alias: jspb.Message.getFieldWithDefault(msg, 4, ""),
    card: (f = msg.getCard()) && proto.payment.v1alpha1.Card.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Payment;
  return proto.payment.v1alpha1.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefault(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 5:
      var value = new proto.payment.v1alpha1.Card;
      reader.readMessage(value,proto.payment.v1alpha1.Card.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDefault();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.payment.v1alpha1.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Payment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Payment} returns this
 */
proto.payment.v1alpha1.Payment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool default = 2;
 * @return {boolean}
 */
proto.payment.v1alpha1.Payment.prototype.getDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.payment.v1alpha1.Payment} returns this
 */
proto.payment.v1alpha1.Payment.prototype.setDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool enabled = 3;
 * @return {boolean}
 */
proto.payment.v1alpha1.Payment.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.payment.v1alpha1.Payment} returns this
 */
proto.payment.v1alpha1.Payment.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string alias = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Payment.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Payment} returns this
 */
proto.payment.v1alpha1.Payment.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Card card = 5;
 * @return {?proto.payment.v1alpha1.Card}
 */
proto.payment.v1alpha1.Payment.prototype.getCard = function() {
  return /** @type{?proto.payment.v1alpha1.Card} */ (
    jspb.Message.getWrapperField(this, proto.payment.v1alpha1.Card, 5));
};


/**
 * @param {?proto.payment.v1alpha1.Card|undefined} value
 * @return {!proto.payment.v1alpha1.Payment} returns this
*/
proto.payment.v1alpha1.Payment.prototype.setCard = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment.v1alpha1.Payment} returns this
 */
proto.payment.v1alpha1.Payment.prototype.clearCard = function() {
  return this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment.v1alpha1.Payment.prototype.hasCard = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    number: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardHolder: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expmonth: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expyear: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cvc: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Card}
 */
proto.payment.v1alpha1.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Card;
  return proto.payment.v1alpha1.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Card}
 */
proto.payment.v1alpha1.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardHolder(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpmonth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpyear(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCvc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardHolder();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpmonth();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpyear();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCvc();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string number = 2;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_holder = 3;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getCardHolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setCardHolder = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string expmonth = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getExpmonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setExpmonth = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string expyear = 5;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getExpyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setExpyear = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cvc = 6;
 * @return {string}
 */
proto.payment.v1alpha1.Card.prototype.getCvc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Card} returns this
 */
proto.payment.v1alpha1.Card.prototype.setCvc = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Invoice.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Invoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Invoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Invoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    period: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statuspay: jspb.Message.getFieldWithDefault(msg, 4, ""),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    product: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Invoice}
 */
proto.payment.v1alpha1.Invoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Invoice;
  return proto.payment.v1alpha1.Invoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Invoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Invoice}
 */
proto.payment.v1alpha1.Invoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatuspay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Invoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Invoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Invoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Invoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPeriod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatuspay();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Invoice.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 amount = 2;
 * @return {number}
 */
proto.payment.v1alpha1.Invoice.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string period = 3;
 * @return {string}
 */
proto.payment.v1alpha1.Invoice.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string statuspay = 4;
 * @return {string}
 */
proto.payment.v1alpha1.Invoice.prototype.getStatuspay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setStatuspay = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date = 5;
 * @return {string}
 */
proto.payment.v1alpha1.Invoice.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string product = 6;
 * @return {string}
 */
proto.payment.v1alpha1.Invoice.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Invoice} returns this
 */
proto.payment.v1alpha1.Invoice.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.Biling.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.Biling.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.Biling} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Biling.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invoiceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalusage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cpu: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ram: jspb.Message.getFieldWithDefault(msg, 6, 0),
    month: jspb.Message.getFieldWithDefault(msg, 7, ""),
    year: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.Biling}
 */
proto.payment.v1alpha1.Biling.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.Biling;
  return proto.payment.v1alpha1.Biling.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.Biling} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.Biling}
 */
proto.payment.v1alpha1.Biling.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoiceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalusage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCpu(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRam(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonth(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.Biling.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.Biling.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.Biling} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.Biling.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvoiceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalusage();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCpu();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRam();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMonth();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.Biling.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string invoice_id = 2;
 * @return {string}
 */
proto.payment.v1alpha1.Biling.prototype.getInvoiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setInvoiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string account_name = 3;
 * @return {string}
 */
proto.payment.v1alpha1.Biling.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 totalusage = 4;
 * @return {number}
 */
proto.payment.v1alpha1.Biling.prototype.getTotalusage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setTotalusage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 cpu = 5;
 * @return {number}
 */
proto.payment.v1alpha1.Biling.prototype.getCpu = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setCpu = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 ram = 6;
 * @return {number}
 */
proto.payment.v1alpha1.Biling.prototype.getRam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setRam = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string month = 7;
 * @return {string}
 */
proto.payment.v1alpha1.Biling.prototype.getMonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setMonth = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string year = 8;
 * @return {string}
 */
proto.payment.v1alpha1.Biling.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.Biling} returns this
 */
proto.payment.v1alpha1.Biling.prototype.setYear = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.SubscriptionItems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.SubscriptionItems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SubscriptionItems.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    suscriptionItemId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    priceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.SubscriptionItems}
 */
proto.payment.v1alpha1.SubscriptionItems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.SubscriptionItems;
  return proto.payment.v1alpha1.SubscriptionItems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.SubscriptionItems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.SubscriptionItems}
 */
proto.payment.v1alpha1.SubscriptionItems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuscriptionItemId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.SubscriptionItems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.SubscriptionItems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SubscriptionItems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuscriptionItemId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPriceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.SubscriptionItems} returns this
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string suscription_item_id = 2;
 * @return {string}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.getSuscriptionItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.SubscriptionItems} returns this
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.setSuscriptionItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string price_id = 3;
 * @return {string}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.getPriceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.SubscriptionItems} returns this
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.setPriceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string product_id = 4;
 * @return {string}
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment.v1alpha1.SubscriptionItems} returns this
 */
proto.payment.v1alpha1.SubscriptionItems.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.SubscriptionItemsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.SubscriptionItemsList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.SubscriptionItemsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.SubscriptionItemsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SubscriptionItemsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.SubscriptionItems.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.SubscriptionItemsList}
 */
proto.payment.v1alpha1.SubscriptionItemsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.SubscriptionItemsList;
  return proto.payment.v1alpha1.SubscriptionItemsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.SubscriptionItemsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.SubscriptionItemsList}
 */
proto.payment.v1alpha1.SubscriptionItemsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.SubscriptionItems;
      reader.readMessage(value,proto.payment.v1alpha1.SubscriptionItems.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.SubscriptionItemsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.SubscriptionItemsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.SubscriptionItemsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SubscriptionItemsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.SubscriptionItems.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SubscriptionItems items = 1;
 * @return {!Array<!proto.payment.v1alpha1.SubscriptionItems>}
 */
proto.payment.v1alpha1.SubscriptionItemsList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.SubscriptionItems>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.SubscriptionItems, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.SubscriptionItems>} value
 * @return {!proto.payment.v1alpha1.SubscriptionItemsList} returns this
*/
proto.payment.v1alpha1.SubscriptionItemsList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.SubscriptionItems=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.SubscriptionItems}
 */
proto.payment.v1alpha1.SubscriptionItemsList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.SubscriptionItems, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.SubscriptionItemsList} returns this
 */
proto.payment.v1alpha1.SubscriptionItemsList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.InvoiceList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.InvoiceList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.InvoiceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.InvoiceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.InvoiceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Invoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.InvoiceList}
 */
proto.payment.v1alpha1.InvoiceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.InvoiceList;
  return proto.payment.v1alpha1.InvoiceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.InvoiceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.InvoiceList}
 */
proto.payment.v1alpha1.InvoiceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Invoice;
      reader.readMessage(value,proto.payment.v1alpha1.Invoice.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.InvoiceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.InvoiceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.InvoiceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.InvoiceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Invoice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Invoice items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Invoice>}
 */
proto.payment.v1alpha1.InvoiceList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Invoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Invoice, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Invoice>} value
 * @return {!proto.payment.v1alpha1.InvoiceList} returns this
*/
proto.payment.v1alpha1.InvoiceList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Invoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Invoice}
 */
proto.payment.v1alpha1.InvoiceList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Invoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.InvoiceList} returns this
 */
proto.payment.v1alpha1.InvoiceList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.CustomerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.CustomerList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.CustomerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.CustomerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CustomerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.CustomerList}
 */
proto.payment.v1alpha1.CustomerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.CustomerList;
  return proto.payment.v1alpha1.CustomerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.CustomerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.CustomerList}
 */
proto.payment.v1alpha1.CustomerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Customer;
      reader.readMessage(value,proto.payment.v1alpha1.Customer.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.CustomerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.CustomerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.CustomerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CustomerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Customer>}
 */
proto.payment.v1alpha1.CustomerList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Customer, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Customer>} value
 * @return {!proto.payment.v1alpha1.CustomerList} returns this
*/
proto.payment.v1alpha1.CustomerList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Customer}
 */
proto.payment.v1alpha1.CustomerList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.CustomerList} returns this
 */
proto.payment.v1alpha1.CustomerList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.BilingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.BilingList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.BilingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.BilingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.BilingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Biling.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.BilingList}
 */
proto.payment.v1alpha1.BilingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.BilingList;
  return proto.payment.v1alpha1.BilingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.BilingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.BilingList}
 */
proto.payment.v1alpha1.BilingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Biling;
      reader.readMessage(value,proto.payment.v1alpha1.Biling.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.BilingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.BilingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.BilingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.BilingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Biling.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Biling items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Biling>}
 */
proto.payment.v1alpha1.BilingList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Biling>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Biling, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Biling>} value
 * @return {!proto.payment.v1alpha1.BilingList} returns this
*/
proto.payment.v1alpha1.BilingList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Biling=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Biling}
 */
proto.payment.v1alpha1.BilingList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Biling, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.BilingList} returns this
 */
proto.payment.v1alpha1.BilingList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.SuscriptionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.SuscriptionList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.SuscriptionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.SuscriptionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SuscriptionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Suscription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.SuscriptionList}
 */
proto.payment.v1alpha1.SuscriptionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.SuscriptionList;
  return proto.payment.v1alpha1.SuscriptionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.SuscriptionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.SuscriptionList}
 */
proto.payment.v1alpha1.SuscriptionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Suscription;
      reader.readMessage(value,proto.payment.v1alpha1.Suscription.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.SuscriptionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.SuscriptionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.SuscriptionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.SuscriptionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Suscription.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Suscription items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Suscription>}
 */
proto.payment.v1alpha1.SuscriptionList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Suscription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Suscription, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Suscription>} value
 * @return {!proto.payment.v1alpha1.SuscriptionList} returns this
*/
proto.payment.v1alpha1.SuscriptionList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Suscription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Suscription}
 */
proto.payment.v1alpha1.SuscriptionList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Suscription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.SuscriptionList} returns this
 */
proto.payment.v1alpha1.SuscriptionList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.CardList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.CardList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.CardList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.CardList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CardList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Card.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.CardList}
 */
proto.payment.v1alpha1.CardList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.CardList;
  return proto.payment.v1alpha1.CardList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.CardList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.CardList}
 */
proto.payment.v1alpha1.CardList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Card;
      reader.readMessage(value,proto.payment.v1alpha1.Card.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.CardList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.CardList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.CardList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.CardList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Card.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Card items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Card>}
 */
proto.payment.v1alpha1.CardList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Card, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Card>} value
 * @return {!proto.payment.v1alpha1.CardList} returns this
*/
proto.payment.v1alpha1.CardList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Card}
 */
proto.payment.v1alpha1.CardList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.CardList} returns this
 */
proto.payment.v1alpha1.CardList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.PaymentList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.PaymentList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.PaymentList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.PaymentList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.PaymentList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Payment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.PaymentList}
 */
proto.payment.v1alpha1.PaymentList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.PaymentList;
  return proto.payment.v1alpha1.PaymentList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.PaymentList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.PaymentList}
 */
proto.payment.v1alpha1.PaymentList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Payment;
      reader.readMessage(value,proto.payment.v1alpha1.Payment.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.PaymentList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.PaymentList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.PaymentList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.PaymentList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Payment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Payment items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Payment>}
 */
proto.payment.v1alpha1.PaymentList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Payment, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Payment>} value
 * @return {!proto.payment.v1alpha1.PaymentList} returns this
*/
proto.payment.v1alpha1.PaymentList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Payment}
 */
proto.payment.v1alpha1.PaymentList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.PaymentList} returns this
 */
proto.payment.v1alpha1.PaymentList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment.v1alpha1.ProjectList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment.v1alpha1.ProjectList.prototype.toObject = function(opt_includeInstance) {
  return proto.payment.v1alpha1.ProjectList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment.v1alpha1.ProjectList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ProjectList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.payment.v1alpha1.Project.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment.v1alpha1.ProjectList}
 */
proto.payment.v1alpha1.ProjectList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment.v1alpha1.ProjectList;
  return proto.payment.v1alpha1.ProjectList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment.v1alpha1.ProjectList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment.v1alpha1.ProjectList}
 */
proto.payment.v1alpha1.ProjectList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.payment.v1alpha1.Project;
      reader.readMessage(value,proto.payment.v1alpha1.Project.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment.v1alpha1.ProjectList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment.v1alpha1.ProjectList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment.v1alpha1.ProjectList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment.v1alpha1.ProjectList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.payment.v1alpha1.Project.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Project items = 1;
 * @return {!Array<!proto.payment.v1alpha1.Project>}
 */
proto.payment.v1alpha1.ProjectList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.payment.v1alpha1.Project>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment.v1alpha1.Project, 1));
};


/**
 * @param {!Array<!proto.payment.v1alpha1.Project>} value
 * @return {!proto.payment.v1alpha1.ProjectList} returns this
*/
proto.payment.v1alpha1.ProjectList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.payment.v1alpha1.Project=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment.v1alpha1.Project}
 */
proto.payment.v1alpha1.ProjectList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.payment.v1alpha1.Project, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment.v1alpha1.ProjectList} returns this
 */
proto.payment.v1alpha1.ProjectList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


goog.object.extend(exports, proto.payment.v1alpha1);
