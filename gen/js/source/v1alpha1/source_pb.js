// source: source/v1alpha1/source.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.source.v1alpha1.AccountIntegration', null, global);
goog.exportSymbol('proto.source.v1alpha1.AccountProvider', null, global);
goog.exportSymbol('proto.source.v1alpha1.AccountsProvidersRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.AccountsProvidersResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.Branch', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateDetailRepository', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateIntegrationRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateIntegrationResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateRepositoryRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.CreateRepositoryResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteIntegrationRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteIntegrationResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteRepositoryRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.DeleteRepositoryResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.DetailRepository', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetIntegrationRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetIntegrationResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetOneProviderByNameRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetOneProviderByNameResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetRepositoryProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetRepositoryProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetRepositoryRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.GetRepositoryResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.Integration', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListIntegrationsRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListIntegrationsResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListProvidersRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListProvidersResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListRepositoriesProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListRepositoriesProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListRepositoriesRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListRepositoriesResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.ListRepository', null, global);
goog.exportSymbol('proto.source.v1alpha1.Provider', null, global);
goog.exportSymbol('proto.source.v1alpha1.Repository', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateIntegrationRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateIntegrationResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateProviderRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateProviderResponse', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateRepositoryRequest', null, global);
goog.exportSymbol('proto.source.v1alpha1.UpdateRepositoryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.displayName = 'proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.displayName = 'proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.AccountProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.AccountProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.AccountProvider.displayName = 'proto.source.v1alpha1.AccountProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.AccountsProvidersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.AccountsProvidersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.AccountsProvidersRequest.displayName = 'proto.source.v1alpha1.AccountsProvidersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.AccountsProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.AccountsProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.AccountsProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.AccountsProvidersResponse.displayName = 'proto.source.v1alpha1.AccountsProvidersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.displayName = 'proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.displayName = 'proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetOneProviderByNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetOneProviderByNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetOneProviderByNameRequest.displayName = 'proto.source.v1alpha1.GetOneProviderByNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetOneProviderByNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetOneProviderByNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetOneProviderByNameResponse.displayName = 'proto.source.v1alpha1.GetOneProviderByNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.Branch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.Branch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.Branch.displayName = 'proto.source.v1alpha1.Branch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.ListRepositoriesProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListRepositoriesProviderRequest.displayName = 'proto.source.v1alpha1.ListRepositoriesProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.ListRepositoriesProviderResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.ListRepositoriesProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListRepositoriesProviderResponse.displayName = 'proto.source.v1alpha1.ListRepositoriesProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetRepositoryProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetRepositoryProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetRepositoryProviderRequest.displayName = 'proto.source.v1alpha1.GetRepositoryProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetRepositoryProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.GetRepositoryProviderResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.GetRepositoryProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetRepositoryProviderResponse.displayName = 'proto.source.v1alpha1.GetRepositoryProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DetailRepository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.DetailRepository.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.DetailRepository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DetailRepository.displayName = 'proto.source.v1alpha1.DetailRepository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListRepository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.ListRepository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListRepository.displayName = 'proto.source.v1alpha1.ListRepository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateDetailRepository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateDetailRepository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateDetailRepository.displayName = 'proto.source.v1alpha1.CreateDetailRepository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateRepositoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateRepositoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateRepositoryRequest.displayName = 'proto.source.v1alpha1.CreateRepositoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateRepositoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateRepositoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateRepositoryResponse.displayName = 'proto.source.v1alpha1.CreateRepositoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListRepositoriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.ListRepositoriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListRepositoriesRequest.displayName = 'proto.source.v1alpha1.ListRepositoriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListRepositoriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.ListRepositoriesResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.ListRepositoriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListRepositoriesResponse.displayName = 'proto.source.v1alpha1.ListRepositoriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetRepositoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetRepositoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetRepositoryRequest.displayName = 'proto.source.v1alpha1.GetRepositoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetRepositoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetRepositoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetRepositoryResponse.displayName = 'proto.source.v1alpha1.GetRepositoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteRepositoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteRepositoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteRepositoryRequest.displayName = 'proto.source.v1alpha1.DeleteRepositoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteRepositoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteRepositoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteRepositoryResponse.displayName = 'proto.source.v1alpha1.DeleteRepositoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateRepositoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateRepositoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateRepositoryRequest.displayName = 'proto.source.v1alpha1.UpdateRepositoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateRepositoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateRepositoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateRepositoryResponse.displayName = 'proto.source.v1alpha1.UpdateRepositoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.Integration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.Integration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.Integration.displayName = 'proto.source.v1alpha1.Integration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.Repository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.Repository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.Repository.displayName = 'proto.source.v1alpha1.Repository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.AccountIntegration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.AccountIntegration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.AccountIntegration.displayName = 'proto.source.v1alpha1.AccountIntegration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateIntegrationRequest.displayName = 'proto.source.v1alpha1.CreateIntegrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateIntegrationResponse.displayName = 'proto.source.v1alpha1.CreateIntegrationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListIntegrationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.ListIntegrationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListIntegrationsRequest.displayName = 'proto.source.v1alpha1.ListIntegrationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListIntegrationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.ListIntegrationsResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.ListIntegrationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListIntegrationsResponse.displayName = 'proto.source.v1alpha1.ListIntegrationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetIntegrationRequest.displayName = 'proto.source.v1alpha1.GetIntegrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetIntegrationResponse.displayName = 'proto.source.v1alpha1.GetIntegrationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateIntegrationRequest.displayName = 'proto.source.v1alpha1.UpdateIntegrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateIntegrationResponse.displayName = 'proto.source.v1alpha1.UpdateIntegrationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteIntegrationRequest.displayName = 'proto.source.v1alpha1.DeleteIntegrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteIntegrationResponse.displayName = 'proto.source.v1alpha1.DeleteIntegrationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.Provider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.Provider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.Provider.displayName = 'proto.source.v1alpha1.Provider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteProviderRequest.displayName = 'proto.source.v1alpha1.DeleteProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.DeleteProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.DeleteProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.DeleteProviderResponse.displayName = 'proto.source.v1alpha1.DeleteProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateProviderRequest.displayName = 'proto.source.v1alpha1.UpdateProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.UpdateProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.UpdateProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.UpdateProviderResponse.displayName = 'proto.source.v1alpha1.UpdateProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetProviderRequest.displayName = 'proto.source.v1alpha1.GetProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.GetProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.GetProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.GetProviderResponse.displayName = 'proto.source.v1alpha1.GetProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateProviderRequest.displayName = 'proto.source.v1alpha1.CreateProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.CreateProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.CreateProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.CreateProviderResponse.displayName = 'proto.source.v1alpha1.CreateProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListProvidersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.source.v1alpha1.ListProvidersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListProvidersRequest.displayName = 'proto.source.v1alpha1.ListProvidersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.source.v1alpha1.ListProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.source.v1alpha1.ListProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.source.v1alpha1.ListProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.source.v1alpha1.ListProvidersResponse.displayName = 'proto.source.v1alpha1.ListProvidersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: (f = msg.getProvider()) && proto.source.v1alpha1.CreateProviderRequest.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    userId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    providerId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    account: (f = msg.getAccount()) && proto.source.v1alpha1.AccountIntegration.toObject(includeInstance, f),
    organizationId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest;
  return proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.CreateProviderRequest;
      reader.readMessage(value,proto.source.v1alpha1.CreateProviderRequest.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 9:
      var value = new proto.source.v1alpha1.AccountIntegration;
      reader.readMessage(value,proto.source.v1alpha1.AccountIntegration.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.CreateProviderRequest.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProviderId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.source.v1alpha1.AccountIntegration.serializeBinaryToWriter
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional CreateProviderRequest provider = 1;
 * @return {?proto.source.v1alpha1.CreateProviderRequest}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getProvider = function() {
  return /** @type{?proto.source.v1alpha1.CreateProviderRequest} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.CreateProviderRequest, 1));
};


/**
 * @param {?proto.source.v1alpha1.CreateProviderRequest|undefined} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
*/
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string provider_id = 8;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setProviderId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional AccountIntegration account = 9;
 * @return {?proto.source.v1alpha1.AccountIntegration}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getAccount = function() {
  return /** @type{?proto.source.v1alpha1.AccountIntegration} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.AccountIntegration, 9));
};


/**
 * @param {?proto.source.v1alpha1.AccountIntegration|undefined} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
*/
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string organization_id = 10;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    integration: (f = msg.getIntegration()) && proto.source.v1alpha1.Integration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse;
  return proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = new proto.source.v1alpha1.Integration;
      reader.readMessage(value,proto.source.v1alpha1.Integration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntegration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.source.v1alpha1.Integration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Integration integration = 2;
 * @return {?proto.source.v1alpha1.Integration}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.getIntegration = function() {
  return /** @type{?proto.source.v1alpha1.Integration} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.Integration, 2));
};


/**
 * @param {?proto.source.v1alpha1.Integration|undefined} value
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} returns this
*/
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.setIntegration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse} returns this
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.clearIntegration = function() {
  return this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.CreateIntegrationWithExternalProviderResponse.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.AccountProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.AccountProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.AccountProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.AccountProvider}
 */
proto.source.v1alpha1.AccountProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.AccountProvider;
  return proto.source.v1alpha1.AccountProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.AccountProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.AccountProvider}
 */
proto.source.v1alpha1.AccountProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.AccountProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.AccountProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.AccountProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.AccountProvider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.AccountProvider} returns this
 */
proto.source.v1alpha1.AccountProvider.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.source.v1alpha1.AccountProvider.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.AccountProvider} returns this
 */
proto.source.v1alpha1.AccountProvider.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.AccountsProvidersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.AccountsProvidersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountsProvidersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integrationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.AccountsProvidersRequest}
 */
proto.source.v1alpha1.AccountsProvidersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.AccountsProvidersRequest;
  return proto.source.v1alpha1.AccountsProvidersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.AccountsProvidersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.AccountsProvidersRequest}
 */
proto.source.v1alpha1.AccountsProvidersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.AccountsProvidersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.AccountsProvidersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountsProvidersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string integration_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.AccountsProvidersRequest} returns this
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 page = 2;
 * @return {number}
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.AccountsProvidersRequest} returns this
 */
proto.source.v1alpha1.AccountsProvidersRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.AccountsProvidersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.AccountsProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.AccountsProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountsProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.source.v1alpha1.AccountProvider.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalPages: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse}
 */
proto.source.v1alpha1.AccountsProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.AccountsProvidersResponse;
  return proto.source.v1alpha1.AccountsProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.AccountsProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse}
 */
proto.source.v1alpha1.AccountsProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.AccountProvider;
      reader.readMessage(value,proto.source.v1alpha1.AccountProvider.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.AccountsProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.AccountsProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountsProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.AccountProvider.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated AccountProvider accounts = 1;
 * @return {!Array<!proto.source.v1alpha1.AccountProvider>}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.AccountProvider>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.AccountProvider, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.AccountProvider>} value
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse} returns this
*/
proto.source.v1alpha1.AccountsProvidersResponse.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.AccountProvider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.AccountProvider}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.AccountProvider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse} returns this
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse} returns this
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 total_pages = 3;
 * @return {number}
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.AccountsProvidersResponse} returns this
 */
proto.source.v1alpha1.AccountsProvidersResponse.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest;
  return proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string organization_uid = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.prototype.getOrganizationUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest} returns this
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationRequest.prototype.setOrganizationUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse;
  return proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse} returns this
 */
proto.source.v1alpha1.DeleteIntegrationsByOrganizationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetOneProviderByNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetOneProviderByNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetOneProviderByNameRequest}
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetOneProviderByNameRequest;
  return proto.source.v1alpha1.GetOneProviderByNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetOneProviderByNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetOneProviderByNameRequest}
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetOneProviderByNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetOneProviderByNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetOneProviderByNameRequest} returns this
 */
proto.source.v1alpha1.GetOneProviderByNameRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetOneProviderByNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetOneProviderByNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: (f = msg.getProvider()) && proto.source.v1alpha1.Provider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetOneProviderByNameResponse}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetOneProviderByNameResponse;
  return proto.source.v1alpha1.GetOneProviderByNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetOneProviderByNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetOneProviderByNameResponse}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Provider;
      reader.readMessage(value,proto.source.v1alpha1.Provider.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetOneProviderByNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetOneProviderByNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * optional Provider provider = 1;
 * @return {?proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.getProvider = function() {
  return /** @type{?proto.source.v1alpha1.Provider} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.Provider, 1));
};


/**
 * @param {?proto.source.v1alpha1.Provider|undefined} value
 * @return {!proto.source.v1alpha1.GetOneProviderByNameResponse} returns this
*/
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.GetOneProviderByNameResponse} returns this
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.GetOneProviderByNameResponse.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.Branch.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.Branch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.Branch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Branch.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sha: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.Branch}
 */
proto.source.v1alpha1.Branch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.Branch;
  return proto.source.v1alpha1.Branch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.Branch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.Branch}
 */
proto.source.v1alpha1.Branch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.Branch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.Branch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.Branch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Branch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSha();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.Branch.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Branch} returns this
 */
proto.source.v1alpha1.Branch.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sha = 2;
 * @return {string}
 */
proto.source.v1alpha1.Branch.prototype.getSha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Branch} returns this
 */
proto.source.v1alpha1.Branch.prototype.setSha = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.source.v1alpha1.Branch.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Branch} returns this
 */
proto.source.v1alpha1.Branch.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListRepositoriesProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integrationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderRequest}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListRepositoriesProviderRequest;
  return proto.source.v1alpha1.ListRepositoriesProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderRequest}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListRepositoriesProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string integration_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderRequest} returns this
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 page = 2;
 * @return {number}
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderRequest} returns this
 */
proto.source.v1alpha1.ListRepositoriesProviderRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListRepositoriesProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoriesList: jspb.Message.toObjectList(msg.getRepositoriesList(),
    proto.source.v1alpha1.Repository.toObject, includeInstance),
    totalPages: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListRepositoriesProviderResponse;
  return proto.source.v1alpha1.ListRepositoriesProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Repository;
      reader.readMessage(value,proto.source.v1alpha1.Repository.deserializeBinaryFromReader);
      msg.addRepositories(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPages(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListRepositoriesProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListRepositoriesProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.Repository.serializeBinaryToWriter
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated Repository repositories = 1;
 * @return {!Array<!proto.source.v1alpha1.Repository>}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.getRepositoriesList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.Repository>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.Repository, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.Repository>} value
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse} returns this
*/
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.setRepositoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.Repository=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.Repository}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.addRepositories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.Repository, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse} returns this
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.clearRepositoriesList = function() {
  return this.setRepositoriesList([]);
};


/**
 * optional uint32 total_pages = 2;
 * @return {number}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse} returns this
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.ListRepositoriesProviderResponse} returns this
 */
proto.source.v1alpha1.ListRepositoriesProviderResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetRepositoryProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetRepositoryProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integrationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetRepositoryProviderRequest}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetRepositoryProviderRequest;
  return proto.source.v1alpha1.GetRepositoryProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetRepositoryProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetRepositoryProviderRequest}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetRepositoryProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetRepositoryProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string integration_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetRepositoryProviderRequest} returns this
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetRepositoryProviderRequest} returns this
 */
proto.source.v1alpha1.GetRepositoryProviderRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetRepositoryProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetRepositoryProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    branchsList: jspb.Message.toObjectList(msg.getBranchsList(),
    proto.source.v1alpha1.Branch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetRepositoryProviderResponse}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetRepositoryProviderResponse;
  return proto.source.v1alpha1.GetRepositoryProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetRepositoryProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetRepositoryProviderResponse}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Branch;
      reader.readMessage(value,proto.source.v1alpha1.Branch.deserializeBinaryFromReader);
      msg.addBranchs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetRepositoryProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetRepositoryProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranchsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.Branch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Branch branchs = 1;
 * @return {!Array<!proto.source.v1alpha1.Branch>}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.getBranchsList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.Branch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.Branch, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.Branch>} value
 * @return {!proto.source.v1alpha1.GetRepositoryProviderResponse} returns this
*/
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.setBranchsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.Branch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.Branch}
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.addBranchs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.Branch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.GetRepositoryProviderResponse} returns this
 */
proto.source.v1alpha1.GetRepositoryProviderResponse.prototype.clearBranchsList = function() {
  return this.setBranchsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.DetailRepository.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DetailRepository.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DetailRepository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DetailRepository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DetailRepository.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    fullname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fork: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    cloneUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    branchsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    integrationId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DetailRepository}
 */
proto.source.v1alpha1.DetailRepository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DetailRepository;
  return proto.source.v1alpha1.DetailRepository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DetailRepository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DetailRepository}
 */
proto.source.v1alpha1.DetailRepository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFork(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addBranchs(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DetailRepository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DetailRepository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DetailRepository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DetailRepository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFork();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getCloneUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBranchsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool private = 3;
 * @return {boolean}
 */
proto.source.v1alpha1.DetailRepository.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string fullname = 4;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool fork = 6;
 * @return {boolean}
 */
proto.source.v1alpha1.DetailRepository.prototype.getFork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setFork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string clone_url = 7;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getCloneUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setCloneUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string project_id = 8;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string organization_id = 9;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string branchs = 10;
 * @return {!Array<string>}
 */
proto.source.v1alpha1.DetailRepository.prototype.getBranchsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setBranchsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.addBranchs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.clearBranchsList = function() {
  return this.setBranchsList([]);
};


/**
 * optional string integration_id = 11;
 * @return {string}
 */
proto.source.v1alpha1.DetailRepository.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DetailRepository} returns this
 */
proto.source.v1alpha1.DetailRepository.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListRepository.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListRepository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListRepository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepository.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    fullname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cloneUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    integrationId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListRepository}
 */
proto.source.v1alpha1.ListRepository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListRepository;
  return proto.source.v1alpha1.ListRepository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListRepository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListRepository}
 */
proto.source.v1alpha1.ListRepository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListRepository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListRepository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListRepository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCloneUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool private = 3;
 * @return {boolean}
 */
proto.source.v1alpha1.ListRepository.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string fullname = 4;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string clone_url = 7;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getCloneUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setCloneUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string project_id = 8;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string organization_id = 9;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string integration_id = 11;
 * @return {string}
 */
proto.source.v1alpha1.ListRepository.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepository} returns this
 */
proto.source.v1alpha1.ListRepository.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateDetailRepository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateDetailRepository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateDetailRepository.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    fullname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fork: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    cloneUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    integrationId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateDetailRepository}
 */
proto.source.v1alpha1.CreateDetailRepository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateDetailRepository;
  return proto.source.v1alpha1.CreateDetailRepository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateDetailRepository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateDetailRepository}
 */
proto.source.v1alpha1.CreateDetailRepository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFork(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateDetailRepository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateDetailRepository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateDetailRepository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFork();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCloneUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool private = 2;
 * @return {boolean}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string fullname = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool fork = 5;
 * @return {boolean}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getFork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setFork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string clone_url = 6;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getCloneUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setCloneUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string project_id = 7;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string organization_id = 8;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string integration_id = 9;
 * @return {string}
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateDetailRepository} returns this
 */
proto.source.v1alpha1.CreateDetailRepository.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateRepositoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateRepositoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateRepositoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    repository: (f = msg.getRepository()) && proto.source.v1alpha1.CreateDetailRepository.toObject(includeInstance, f),
    projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest}
 */
proto.source.v1alpha1.CreateRepositoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateRepositoryRequest;
  return proto.source.v1alpha1.CreateRepositoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateRepositoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest}
 */
proto.source.v1alpha1.CreateRepositoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.CreateDetailRepository;
      reader.readMessage(value,proto.source.v1alpha1.CreateDetailRepository.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateRepositoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateRepositoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateRepositoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.CreateDetailRepository.serializeBinaryToWriter
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional CreateDetailRepository repository = 1;
 * @return {?proto.source.v1alpha1.CreateDetailRepository}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.getRepository = function() {
  return /** @type{?proto.source.v1alpha1.CreateDetailRepository} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.CreateDetailRepository, 1));
};


/**
 * @param {?proto.source.v1alpha1.CreateDetailRepository|undefined} value
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest} returns this
*/
proto.source.v1alpha1.CreateRepositoryRequest.prototype.setRepository = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest} returns this
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.clearRepository = function() {
  return this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest} returns this
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organization_id = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateRepositoryRequest} returns this
 */
proto.source.v1alpha1.CreateRepositoryRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateRepositoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateRepositoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateRepositoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateRepositoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateRepositoryResponse}
 */
proto.source.v1alpha1.CreateRepositoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateRepositoryResponse;
  return proto.source.v1alpha1.CreateRepositoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateRepositoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateRepositoryResponse}
 */
proto.source.v1alpha1.CreateRepositoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateRepositoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateRepositoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateRepositoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateRepositoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateRepositoryResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateRepositoryResponse} returns this
 */
proto.source.v1alpha1.CreateRepositoryResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListRepositoriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListRepositoriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListRepositoriesRequest}
 */
proto.source.v1alpha1.ListRepositoriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListRepositoriesRequest;
  return proto.source.v1alpha1.ListRepositoriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListRepositoriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListRepositoriesRequest}
 */
proto.source.v1alpha1.ListRepositoriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListRepositoriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListRepositoriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepositoriesRequest} returns this
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string organization_id = 2;
 * @return {string}
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListRepositoriesRequest} returns this
 */
proto.source.v1alpha1.ListRepositoriesRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.ListRepositoriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListRepositoriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListRepositoriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListRepositoriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoriesList: jspb.Message.toObjectList(msg.getRepositoriesList(),
    proto.source.v1alpha1.ListRepository.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListRepositoriesResponse}
 */
proto.source.v1alpha1.ListRepositoriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListRepositoriesResponse;
  return proto.source.v1alpha1.ListRepositoriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListRepositoriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListRepositoriesResponse}
 */
proto.source.v1alpha1.ListRepositoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.ListRepository;
      reader.readMessage(value,proto.source.v1alpha1.ListRepository.deserializeBinaryFromReader);
      msg.addRepositories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListRepositoriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListRepositoriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListRepositoriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListRepositoriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.ListRepository.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListRepository repositories = 1;
 * @return {!Array<!proto.source.v1alpha1.ListRepository>}
 */
proto.source.v1alpha1.ListRepositoriesResponse.prototype.getRepositoriesList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.ListRepository>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.ListRepository, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.ListRepository>} value
 * @return {!proto.source.v1alpha1.ListRepositoriesResponse} returns this
*/
proto.source.v1alpha1.ListRepositoriesResponse.prototype.setRepositoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.ListRepository=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.ListRepository}
 */
proto.source.v1alpha1.ListRepositoriesResponse.prototype.addRepositories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.ListRepository, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.ListRepositoriesResponse} returns this
 */
proto.source.v1alpha1.ListRepositoriesResponse.prototype.clearRepositoriesList = function() {
  return this.setRepositoriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetRepositoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetRepositoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetRepositoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoryId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetRepositoryRequest}
 */
proto.source.v1alpha1.GetRepositoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetRepositoryRequest;
  return proto.source.v1alpha1.GetRepositoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetRepositoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetRepositoryRequest}
 */
proto.source.v1alpha1.GetRepositoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetRepositoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetRepositoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetRepositoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string repository_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.GetRepositoryRequest.prototype.getRepositoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetRepositoryRequest} returns this
 */
proto.source.v1alpha1.GetRepositoryRequest.prototype.setRepositoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetRepositoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetRepositoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetRepositoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    repository: (f = msg.getRepository()) && proto.source.v1alpha1.DetailRepository.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetRepositoryResponse}
 */
proto.source.v1alpha1.GetRepositoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetRepositoryResponse;
  return proto.source.v1alpha1.GetRepositoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetRepositoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetRepositoryResponse}
 */
proto.source.v1alpha1.GetRepositoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.DetailRepository;
      reader.readMessage(value,proto.source.v1alpha1.DetailRepository.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetRepositoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetRepositoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetRepositoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetRepositoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.DetailRepository.serializeBinaryToWriter
    );
  }
};


/**
 * optional DetailRepository repository = 1;
 * @return {?proto.source.v1alpha1.DetailRepository}
 */
proto.source.v1alpha1.GetRepositoryResponse.prototype.getRepository = function() {
  return /** @type{?proto.source.v1alpha1.DetailRepository} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.DetailRepository, 1));
};


/**
 * @param {?proto.source.v1alpha1.DetailRepository|undefined} value
 * @return {!proto.source.v1alpha1.GetRepositoryResponse} returns this
*/
proto.source.v1alpha1.GetRepositoryResponse.prototype.setRepository = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.GetRepositoryResponse} returns this
 */
proto.source.v1alpha1.GetRepositoryResponse.prototype.clearRepository = function() {
  return this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.GetRepositoryResponse.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteRepositoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteRepositoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteRepositoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteRepositoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoryId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteRepositoryRequest}
 */
proto.source.v1alpha1.DeleteRepositoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteRepositoryRequest;
  return proto.source.v1alpha1.DeleteRepositoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteRepositoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteRepositoryRequest}
 */
proto.source.v1alpha1.DeleteRepositoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteRepositoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteRepositoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteRepositoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteRepositoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string repository_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteRepositoryRequest.prototype.getRepositoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteRepositoryRequest} returns this
 */
proto.source.v1alpha1.DeleteRepositoryRequest.prototype.setRepositoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteRepositoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteRepositoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteRepositoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteRepositoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteRepositoryResponse}
 */
proto.source.v1alpha1.DeleteRepositoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteRepositoryResponse;
  return proto.source.v1alpha1.DeleteRepositoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteRepositoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteRepositoryResponse}
 */
proto.source.v1alpha1.DeleteRepositoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteRepositoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteRepositoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteRepositoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteRepositoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteRepositoryResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteRepositoryResponse} returns this
 */
proto.source.v1alpha1.DeleteRepositoryResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateRepositoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateRepositoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateRepositoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoryId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repository: (f = msg.getRepository()) && proto.source.v1alpha1.DetailRepository.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateRepositoryRequest}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateRepositoryRequest;
  return proto.source.v1alpha1.UpdateRepositoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateRepositoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateRepositoryRequest}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryId(value);
      break;
    case 2:
      var value = new proto.source.v1alpha1.DetailRepository;
      reader.readMessage(value,proto.source.v1alpha1.DetailRepository.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateRepositoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateRepositoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateRepositoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.source.v1alpha1.DetailRepository.serializeBinaryToWriter
    );
  }
};


/**
 * optional string repository_id = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.getRepositoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateRepositoryRequest} returns this
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.setRepositoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DetailRepository repository = 2;
 * @return {?proto.source.v1alpha1.DetailRepository}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.getRepository = function() {
  return /** @type{?proto.source.v1alpha1.DetailRepository} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.DetailRepository, 2));
};


/**
 * @param {?proto.source.v1alpha1.DetailRepository|undefined} value
 * @return {!proto.source.v1alpha1.UpdateRepositoryRequest} returns this
*/
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.setRepository = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.UpdateRepositoryRequest} returns this
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.clearRepository = function() {
  return this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.UpdateRepositoryRequest.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateRepositoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateRepositoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateRepositoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateRepositoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateRepositoryResponse}
 */
proto.source.v1alpha1.UpdateRepositoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateRepositoryResponse;
  return proto.source.v1alpha1.UpdateRepositoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateRepositoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateRepositoryResponse}
 */
proto.source.v1alpha1.UpdateRepositoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateRepositoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateRepositoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateRepositoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateRepositoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateRepositoryResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateRepositoryResponse} returns this
 */
proto.source.v1alpha1.UpdateRepositoryResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.Integration.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.Integration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.Integration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Integration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    provider: (f = msg.getProvider()) && proto.source.v1alpha1.Provider.toObject(includeInstance, f),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    userId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    account: (f = msg.getAccount()) && proto.source.v1alpha1.AccountIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.Integration}
 */
proto.source.v1alpha1.Integration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.Integration;
  return proto.source.v1alpha1.Integration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.Integration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.Integration}
 */
proto.source.v1alpha1.Integration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.source.v1alpha1.Provider;
      reader.readMessage(value,proto.source.v1alpha1.Provider.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    case 5:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 8:
      var value = new proto.source.v1alpha1.AccountIntegration;
      reader.readMessage(value,proto.source.v1alpha1.AccountIntegration.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.Integration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.Integration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.Integration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Integration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.source.v1alpha1.Provider.serializeBinaryToWriter
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.source.v1alpha1.AccountIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.Integration.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string organization_id = 2;
 * @return {string}
 */
proto.source.v1alpha1.Integration.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.source.v1alpha1.Integration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Provider provider = 4;
 * @return {?proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.Integration.prototype.getProvider = function() {
  return /** @type{?proto.source.v1alpha1.Provider} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.Provider, 4));
};


/**
 * @param {?proto.source.v1alpha1.Provider|undefined} value
 * @return {!proto.source.v1alpha1.Integration} returns this
*/
proto.source.v1alpha1.Integration.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.Integration.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, string> data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.Integration.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.Integration.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.source.v1alpha1.Integration.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional AccountIntegration account = 8;
 * @return {?proto.source.v1alpha1.AccountIntegration}
 */
proto.source.v1alpha1.Integration.prototype.getAccount = function() {
  return /** @type{?proto.source.v1alpha1.AccountIntegration} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.AccountIntegration, 8));
};


/**
 * @param {?proto.source.v1alpha1.AccountIntegration|undefined} value
 * @return {!proto.source.v1alpha1.Integration} returns this
*/
proto.source.v1alpha1.Integration.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.Integration} returns this
 */
proto.source.v1alpha1.Integration.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.Integration.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.Repository.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.Repository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.Repository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Repository.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    fullname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fork: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    cloneUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.Repository}
 */
proto.source.v1alpha1.Repository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.Repository;
  return proto.source.v1alpha1.Repository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.Repository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.Repository}
 */
proto.source.v1alpha1.Repository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFork(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.Repository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.Repository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.Repository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Repository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFork();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCloneUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.Repository.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool private = 2;
 * @return {boolean}
 */
proto.source.v1alpha1.Repository.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string fullname = 3;
 * @return {string}
 */
proto.source.v1alpha1.Repository.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.source.v1alpha1.Repository.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool fork = 5;
 * @return {boolean}
 */
proto.source.v1alpha1.Repository.prototype.getFork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setFork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string clone_url = 6;
 * @return {string}
 */
proto.source.v1alpha1.Repository.prototype.getCloneUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setCloneUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string branch = 7;
 * @return {string}
 */
proto.source.v1alpha1.Repository.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Repository} returns this
 */
proto.source.v1alpha1.Repository.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.AccountIntegration.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.AccountIntegration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.AccountIntegration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountIntegration.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.AccountIntegration}
 */
proto.source.v1alpha1.AccountIntegration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.AccountIntegration;
  return proto.source.v1alpha1.AccountIntegration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.AccountIntegration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.AccountIntegration}
 */
proto.source.v1alpha1.AccountIntegration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.AccountIntegration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.AccountIntegration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.AccountIntegration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.AccountIntegration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.AccountIntegration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.AccountIntegration} returns this
 */
proto.source.v1alpha1.AccountIntegration.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.source.v1alpha1.AccountIntegration.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.AccountIntegration} returns this
 */
proto.source.v1alpha1.AccountIntegration.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    userId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    providerId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    account: (f = msg.getAccount()) && proto.source.v1alpha1.AccountIntegration.toObject(includeInstance, f),
    organizationId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest}
 */
proto.source.v1alpha1.CreateIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateIntegrationRequest;
  return proto.source.v1alpha1.CreateIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest}
 */
proto.source.v1alpha1.CreateIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 9:
      var value = new proto.source.v1alpha1.AccountIntegration;
      reader.readMessage(value,proto.source.v1alpha1.AccountIntegration.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateIntegrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProviderId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.source.v1alpha1.AccountIntegration.serializeBinaryToWriter
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string provider_id = 8;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.setProviderId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional AccountIntegration account = 9;
 * @return {?proto.source.v1alpha1.AccountIntegration}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getAccount = function() {
  return /** @type{?proto.source.v1alpha1.AccountIntegration} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.AccountIntegration, 9));
};


/**
 * @param {?proto.source.v1alpha1.AccountIntegration|undefined} value
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
*/
proto.source.v1alpha1.CreateIntegrationRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string organization_id = 10;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationRequest} returns this
 */
proto.source.v1alpha1.CreateIntegrationRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    integrationId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateIntegrationResponse}
 */
proto.source.v1alpha1.CreateIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateIntegrationResponse;
  return proto.source.v1alpha1.CreateIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateIntegrationResponse}
 */
proto.source.v1alpha1.CreateIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateIntegrationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntegrationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationResponse} returns this
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string integration_id = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.getIntegrationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateIntegrationResponse} returns this
 */
proto.source.v1alpha1.CreateIntegrationResponse.prototype.setIntegrationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListIntegrationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListIntegrationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListIntegrationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationUid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListIntegrationsRequest}
 */
proto.source.v1alpha1.ListIntegrationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListIntegrationsRequest;
  return proto.source.v1alpha1.ListIntegrationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListIntegrationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListIntegrationsRequest}
 */
proto.source.v1alpha1.ListIntegrationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListIntegrationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListIntegrationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListIntegrationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string organization_uid = 3;
 * @return {string}
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.getOrganizationUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListIntegrationsRequest} returns this
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.setOrganizationUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListIntegrationsRequest} returns this
 */
proto.source.v1alpha1.ListIntegrationsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.ListIntegrationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListIntegrationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListIntegrationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListIntegrationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    integrationsList: jspb.Message.toObjectList(msg.getIntegrationsList(),
    proto.source.v1alpha1.Integration.toObject, includeInstance),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListIntegrationsResponse}
 */
proto.source.v1alpha1.ListIntegrationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListIntegrationsResponse;
  return proto.source.v1alpha1.ListIntegrationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListIntegrationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListIntegrationsResponse}
 */
proto.source.v1alpha1.ListIntegrationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Integration;
      reader.readMessage(value,proto.source.v1alpha1.Integration.deserializeBinaryFromReader);
      msg.addIntegrations(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListIntegrationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListIntegrationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListIntegrationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegrationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.Integration.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Integration integrations = 1;
 * @return {!Array<!proto.source.v1alpha1.Integration>}
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.getIntegrationsList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.Integration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.Integration, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.Integration>} value
 * @return {!proto.source.v1alpha1.ListIntegrationsResponse} returns this
*/
proto.source.v1alpha1.ListIntegrationsResponse.prototype.setIntegrationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.Integration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.Integration}
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.addIntegrations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.Integration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.ListIntegrationsResponse} returns this
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.clearIntegrationsList = function() {
  return this.setIntegrationsList([]);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.ListIntegrationsResponse} returns this
 */
proto.source.v1alpha1.ListIntegrationsResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetIntegrationRequest}
 */
proto.source.v1alpha1.GetIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetIntegrationRequest;
  return proto.source.v1alpha1.GetIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetIntegrationRequest}
 */
proto.source.v1alpha1.GetIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetIntegrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.GetIntegrationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetIntegrationRequest} returns this
 */
proto.source.v1alpha1.GetIntegrationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.source.v1alpha1.Integration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetIntegrationResponse}
 */
proto.source.v1alpha1.GetIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetIntegrationResponse;
  return proto.source.v1alpha1.GetIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetIntegrationResponse}
 */
proto.source.v1alpha1.GetIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Integration;
      reader.readMessage(value,proto.source.v1alpha1.Integration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetIntegrationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.Integration.serializeBinaryToWriter
    );
  }
};


/**
 * optional Integration integration = 1;
 * @return {?proto.source.v1alpha1.Integration}
 */
proto.source.v1alpha1.GetIntegrationResponse.prototype.getIntegration = function() {
  return /** @type{?proto.source.v1alpha1.Integration} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.Integration, 1));
};


/**
 * @param {?proto.source.v1alpha1.Integration|undefined} value
 * @return {!proto.source.v1alpha1.GetIntegrationResponse} returns this
*/
proto.source.v1alpha1.GetIntegrationResponse.prototype.setIntegration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.GetIntegrationResponse} returns this
 */
proto.source.v1alpha1.GetIntegrationResponse.prototype.clearIntegration = function() {
  return this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.GetIntegrationResponse.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    integrations: (f = msg.getIntegrations()) && proto.source.v1alpha1.CreateIntegrationRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateIntegrationRequest}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateIntegrationRequest;
  return proto.source.v1alpha1.UpdateIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateIntegrationRequest}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.source.v1alpha1.CreateIntegrationRequest;
      reader.readMessage(value,proto.source.v1alpha1.CreateIntegrationRequest.deserializeBinaryFromReader);
      msg.setIntegrations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateIntegrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntegrations();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.source.v1alpha1.CreateIntegrationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateIntegrationRequest} returns this
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CreateIntegrationRequest integrations = 2;
 * @return {?proto.source.v1alpha1.CreateIntegrationRequest}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.getIntegrations = function() {
  return /** @type{?proto.source.v1alpha1.CreateIntegrationRequest} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.CreateIntegrationRequest, 2));
};


/**
 * @param {?proto.source.v1alpha1.CreateIntegrationRequest|undefined} value
 * @return {!proto.source.v1alpha1.UpdateIntegrationRequest} returns this
*/
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.setIntegrations = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.UpdateIntegrationRequest} returns this
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.clearIntegrations = function() {
  return this.setIntegrations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.UpdateIntegrationRequest.prototype.hasIntegrations = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateIntegrationResponse}
 */
proto.source.v1alpha1.UpdateIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateIntegrationResponse;
  return proto.source.v1alpha1.UpdateIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateIntegrationResponse}
 */
proto.source.v1alpha1.UpdateIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateIntegrationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateIntegrationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateIntegrationResponse} returns this
 */
proto.source.v1alpha1.UpdateIntegrationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteIntegrationRequest}
 */
proto.source.v1alpha1.DeleteIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteIntegrationRequest;
  return proto.source.v1alpha1.DeleteIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteIntegrationRequest}
 */
proto.source.v1alpha1.DeleteIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteIntegrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteIntegrationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteIntegrationRequest} returns this
 */
proto.source.v1alpha1.DeleteIntegrationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteIntegrationResponse}
 */
proto.source.v1alpha1.DeleteIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteIntegrationResponse;
  return proto.source.v1alpha1.DeleteIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteIntegrationResponse}
 */
proto.source.v1alpha1.DeleteIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteIntegrationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteIntegrationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteIntegrationResponse} returns this
 */
proto.source.v1alpha1.DeleteIntegrationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.Provider.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.Provider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.Provider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Provider.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.Provider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.Provider;
  return proto.source.v1alpha1.Provider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.Provider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.Provider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 5:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.Provider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.Provider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.Provider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.Provider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.Provider.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.source.v1alpha1.Provider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.source.v1alpha1.Provider.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logo = 4;
 * @return {string}
 */
proto.source.v1alpha1.Provider.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, string> data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.Provider.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.Provider.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.Provider} returns this
 */
proto.source.v1alpha1.Provider.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteProviderRequest}
 */
proto.source.v1alpha1.DeleteProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteProviderRequest;
  return proto.source.v1alpha1.DeleteProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteProviderRequest}
 */
proto.source.v1alpha1.DeleteProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteProviderRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteProviderRequest} returns this
 */
proto.source.v1alpha1.DeleteProviderRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.DeleteProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.DeleteProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.DeleteProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.DeleteProviderResponse}
 */
proto.source.v1alpha1.DeleteProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.DeleteProviderResponse;
  return proto.source.v1alpha1.DeleteProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.DeleteProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.DeleteProviderResponse}
 */
proto.source.v1alpha1.DeleteProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.DeleteProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.DeleteProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.DeleteProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.DeleteProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.DeleteProviderResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.DeleteProviderResponse} returns this
 */
proto.source.v1alpha1.DeleteProviderResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    provider: (f = msg.getProvider()) && proto.source.v1alpha1.CreateProviderRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateProviderRequest}
 */
proto.source.v1alpha1.UpdateProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateProviderRequest;
  return proto.source.v1alpha1.UpdateProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateProviderRequest}
 */
proto.source.v1alpha1.UpdateProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.source.v1alpha1.CreateProviderRequest;
      reader.readMessage(value,proto.source.v1alpha1.CreateProviderRequest.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.source.v1alpha1.CreateProviderRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateProviderRequest} returns this
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CreateProviderRequest provider = 2;
 * @return {?proto.source.v1alpha1.CreateProviderRequest}
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.getProvider = function() {
  return /** @type{?proto.source.v1alpha1.CreateProviderRequest} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.CreateProviderRequest, 2));
};


/**
 * @param {?proto.source.v1alpha1.CreateProviderRequest|undefined} value
 * @return {!proto.source.v1alpha1.UpdateProviderRequest} returns this
*/
proto.source.v1alpha1.UpdateProviderRequest.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.UpdateProviderRequest} returns this
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.UpdateProviderRequest.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.UpdateProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.UpdateProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.UpdateProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.UpdateProviderResponse}
 */
proto.source.v1alpha1.UpdateProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.UpdateProviderResponse;
  return proto.source.v1alpha1.UpdateProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.UpdateProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.UpdateProviderResponse}
 */
proto.source.v1alpha1.UpdateProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.UpdateProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.UpdateProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.UpdateProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.UpdateProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.UpdateProviderResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.UpdateProviderResponse} returns this
 */
proto.source.v1alpha1.UpdateProviderResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetProviderRequest}
 */
proto.source.v1alpha1.GetProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetProviderRequest;
  return proto.source.v1alpha1.GetProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetProviderRequest}
 */
proto.source.v1alpha1.GetProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.source.v1alpha1.GetProviderRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.GetProviderRequest} returns this
 */
proto.source.v1alpha1.GetProviderRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.GetProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.GetProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.GetProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: (f = msg.getProvider()) && proto.source.v1alpha1.Provider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.GetProviderResponse}
 */
proto.source.v1alpha1.GetProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.GetProviderResponse;
  return proto.source.v1alpha1.GetProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.GetProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.GetProviderResponse}
 */
proto.source.v1alpha1.GetProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Provider;
      reader.readMessage(value,proto.source.v1alpha1.Provider.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.GetProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.GetProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.GetProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.GetProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.source.v1alpha1.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * optional Provider provider = 1;
 * @return {?proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.GetProviderResponse.prototype.getProvider = function() {
  return /** @type{?proto.source.v1alpha1.Provider} */ (
    jspb.Message.getWrapperField(this, proto.source.v1alpha1.Provider, 1));
};


/**
 * @param {?proto.source.v1alpha1.Provider|undefined} value
 * @return {!proto.source.v1alpha1.GetProviderResponse} returns this
*/
proto.source.v1alpha1.GetProviderResponse.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.source.v1alpha1.GetProviderResponse} returns this
 */
proto.source.v1alpha1.GetProviderResponse.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.source.v1alpha1.GetProviderResponse.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    providerDataMap: (f = msg.getProviderDataMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateProviderRequest}
 */
proto.source.v1alpha1.CreateProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateProviderRequest;
  return proto.source.v1alpha1.CreateProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateProviderRequest}
 */
proto.source.v1alpha1.CreateProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 5:
      var value = msg.getProviderDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProviderDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateProviderRequest} returns this
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateProviderRequest} returns this
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logo = 3;
 * @return {string}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateProviderRequest} returns this
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> provider_data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.getProviderDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateProviderRequest} returns this
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.clearProviderDataMap = function() {
  this.getProviderDataMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.source.v1alpha1.CreateProviderRequest} returns this
 */
proto.source.v1alpha1.CreateProviderRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.CreateProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.CreateProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.CreateProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.CreateProviderResponse}
 */
proto.source.v1alpha1.CreateProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.CreateProviderResponse;
  return proto.source.v1alpha1.CreateProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.CreateProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.CreateProviderResponse}
 */
proto.source.v1alpha1.CreateProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.CreateProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.CreateProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.CreateProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.CreateProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.source.v1alpha1.CreateProviderResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.source.v1alpha1.CreateProviderResponse} returns this
 */
proto.source.v1alpha1.CreateProviderResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListProvidersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListProvidersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListProvidersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListProvidersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListProvidersRequest}
 */
proto.source.v1alpha1.ListProvidersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListProvidersRequest;
  return proto.source.v1alpha1.ListProvidersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListProvidersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListProvidersRequest}
 */
proto.source.v1alpha1.ListProvidersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListProvidersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListProvidersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListProvidersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListProvidersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.source.v1alpha1.ListProvidersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.source.v1alpha1.ListProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.source.v1alpha1.ListProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    providersList: jspb.Message.toObjectList(msg.getProvidersList(),
    proto.source.v1alpha1.Provider.toObject, includeInstance),
    totalPages: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.source.v1alpha1.ListProvidersResponse}
 */
proto.source.v1alpha1.ListProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.source.v1alpha1.ListProvidersResponse;
  return proto.source.v1alpha1.ListProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.source.v1alpha1.ListProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.source.v1alpha1.ListProvidersResponse}
 */
proto.source.v1alpha1.ListProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.source.v1alpha1.Provider;
      reader.readMessage(value,proto.source.v1alpha1.Provider.deserializeBinaryFromReader);
      msg.addProviders(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPages(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.source.v1alpha1.ListProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.source.v1alpha1.ListProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.source.v1alpha1.ListProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.source.v1alpha1.Provider.serializeBinaryToWriter
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated Provider providers = 1;
 * @return {!Array<!proto.source.v1alpha1.Provider>}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.getProvidersList = function() {
  return /** @type{!Array<!proto.source.v1alpha1.Provider>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.source.v1alpha1.Provider, 1));
};


/**
 * @param {!Array<!proto.source.v1alpha1.Provider>} value
 * @return {!proto.source.v1alpha1.ListProvidersResponse} returns this
*/
proto.source.v1alpha1.ListProvidersResponse.prototype.setProvidersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.source.v1alpha1.Provider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.source.v1alpha1.Provider}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.addProviders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.source.v1alpha1.Provider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.source.v1alpha1.ListProvidersResponse} returns this
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.clearProvidersList = function() {
  return this.setProvidersList([]);
};


/**
 * optional uint32 total_pages = 2;
 * @return {number}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.ListProvidersResponse} returns this
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.source.v1alpha1.ListProvidersResponse} returns this
 */
proto.source.v1alpha1.ListProvidersResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.source.v1alpha1);
