// source: accounts/v1alpha1/invitations/invitations.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var accounts_v1alpha1_accounts_pb = require('../../../accounts/v1alpha1/accounts_pb.js');
goog.object.extend(proto, accounts_v1alpha1_accounts_pb);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.InvitationResponse', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest', null, global);
goog.exportSymbol('proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.repeatedFields_, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.displayName = 'proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.repeatedFields_, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.displayName = 'proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.displayName = 'proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.repeatedFields_, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.displayName = 'proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.repeatedFields_, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.displayName = 'proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.displayName = 'proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.displayName = 'proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.displayName = 'proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.repeatedFields_, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.displayName = 'proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.displayName = 'proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.displayName = 'proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userIdAdmin: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rolesIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    permissionsIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    organizationId: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest;
  return proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserIdAdmin(value);
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRolesIds(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPermissionsIds(values[i]);
      }
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserIdAdmin();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRolesIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      5,
      f
    );
  }
  f = message.getPermissionsIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id_admin = 4;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getUserIdAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setUserIdAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated uint32 roles_ids = 5;
 * @return {!Array<number>}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getRolesIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setRolesIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.addRolesIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.clearRolesIdsList = function() {
  return this.setRolesIdsList([]);
};


/**
 * repeated uint32 permissions_ids = 6;
 * @return {!Array<number>}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getPermissionsIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setPermissionsIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.addPermissionsIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.clearPermissionsIdsList = function() {
  return this.setPermissionsIdsList([]);
};


/**
 * optional uint32 organization_id = 7;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.repeatedFields_ = [2,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && accounts_v1alpha1_accounts_pb.Organization.toObject(includeInstance, f),
    projectsList: jspb.Message.toObjectList(msg.getProjectsList(),
    accounts_v1alpha1_accounts_pb.Project.toObject, includeInstance),
    invitationCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    result: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    accounts_v1alpha1_accounts_pb.Role.toObject, includeInstance),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    accounts_v1alpha1_accounts_pb.Permission.toObject, includeInstance),
    error: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse;
  return proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new accounts_v1alpha1_accounts_pb.Organization;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = new accounts_v1alpha1_accounts_pb.Project;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Project.deserializeBinaryFromReader);
      msg.addProjects(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 5:
      var value = new accounts_v1alpha1_accounts_pb.Role;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    case 6:
      var value = new accounts_v1alpha1_accounts_pb.Permission;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      accounts_v1alpha1_accounts_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      accounts_v1alpha1_accounts_pb.Project.serializeBinaryToWriter
    );
  }
  f = message.getInvitationCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      accounts_v1alpha1_accounts_pb.Role.serializeBinaryToWriter
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      accounts_v1alpha1_accounts_pb.Permission.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional accounts.v1alpha1.Organization organization = 1;
 * @return {?proto.accounts.v1alpha1.Organization}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getOrganization = function() {
  return /** @type{?proto.accounts.v1alpha1.Organization} */ (
    jspb.Message.getWrapperField(this, accounts_v1alpha1_accounts_pb.Organization, 1));
};


/**
 * @param {?proto.accounts.v1alpha1.Organization|undefined} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated accounts.v1alpha1.Project projects = 2;
 * @return {!Array<!proto.accounts.v1alpha1.Project>}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getProjectsList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Project>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Project, 2));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Project>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setProjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Project=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Project}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.addProjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.accounts.v1alpha1.Project, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};


/**
 * optional string invitation_code = 3;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getInvitationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setInvitationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string result = 4;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated accounts.v1alpha1.Role roles = 5;
 * @return {!Array<!proto.accounts.v1alpha1.Role>}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Role, 5));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Role>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setRolesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Role}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.accounts.v1alpha1.Role, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * repeated accounts.v1alpha1.Permission permissions = 6;
 * @return {!Array<!proto.accounts.v1alpha1.Permission>}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Permission, 6));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Permission>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Permission}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.accounts.v1alpha1.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};


/**
 * optional string error = 7;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitationCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest;
  return proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitationCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string invitation_code = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.getInvitationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.setInvitationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    image: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    projectsList: jspb.Message.toObjectList(msg.getProjectsList(),
    accounts_v1alpha1_accounts_pb.Project.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation;
  return proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new accounts_v1alpha1_accounts_pb.Project;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Project.deserializeBinaryFromReader);
      msg.addProjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      accounts_v1alpha1_accounts_pb.Project.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated accounts.v1alpha1.Project projects = 5;
 * @return {!Array<!proto.accounts.v1alpha1.Project>}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.getProjectsList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Project>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Project, 5));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Project>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
*/
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.setProjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Project=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Project}
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.addProjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.accounts.v1alpha1.Project, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} returns this
 */
proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    invitationCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    accounts_v1alpha1_accounts_pb.Role.toObject, includeInstance),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    accounts_v1alpha1_accounts_pb.Permission.toObject, includeInstance),
    organization: (f = msg.getOrganization()) && proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.toObject(includeInstance, f),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    error: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse;
  return proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationCode(value);
      break;
    case 4:
      var value = new accounts_v1alpha1_accounts_pb.Role;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    case 5:
      var value = new accounts_v1alpha1_accounts_pb.Permission;
      reader.readMessage(value,accounts_v1alpha1_accounts_pb.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    case 6:
      var value = new proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation;
      reader.readMessage(value,proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getInvitationCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      accounts_v1alpha1_accounts_pb.Role.serializeBinaryToWriter
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      accounts_v1alpha1_accounts_pb.Permission.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string invitation_code = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getInvitationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setInvitationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated accounts.v1alpha1.Role roles = 4;
 * @return {!Array<!proto.accounts.v1alpha1.Role>}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Role, 4));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Role>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setRolesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Role}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.accounts.v1alpha1.Role, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * repeated accounts.v1alpha1.Permission permissions = 5;
 * @return {!Array<!proto.accounts.v1alpha1.Permission>}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, accounts_v1alpha1_accounts_pb.Permission, 5));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.Permission>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.accounts.v1alpha1.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.Permission}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.accounts.v1alpha1.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};


/**
 * optional OrganizationInvitation organization = 6;
 * @return {?proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getOrganization = function() {
  return /** @type{?proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation} */ (
    jspb.Message.getWrapperField(this, proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation, 6));
};


/**
 * @param {?proto.accounts.v1alpha1.invitations.v1.OrganizationInvitation|undefined} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool success = 8;
 * @return {boolean}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string error = 9;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitationCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    guestUserId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invitationResponse: jspb.Message.getFieldWithDefault(msg, 4, 0),
    projectsMap: (f = msg.getProjectsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest;
  return proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitationCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuestUserId(value);
      break;
    case 4:
      var value = /** @type {!proto.accounts.v1alpha1.invitations.v1.InvitationResponse} */ (reader.readEnum());
      msg.setInvitationResponse(value);
      break;
    case 5:
      var value = msg.getProjectsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitationCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGuestUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvitationResponse();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getProjectsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * optional string invitation_code = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.getInvitationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.setInvitationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string guest_user_id = 3;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.getGuestUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.setGuestUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional InvitationResponse invitation_response = 4;
 * @return {!proto.accounts.v1alpha1.invitations.v1.InvitationResponse}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.getInvitationResponse = function() {
  return /** @type {!proto.accounts.v1alpha1.invitations.v1.InvitationResponse} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.accounts.v1alpha1.invitations.v1.InvitationResponse} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.setInvitationResponse = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<uint32, uint32> projects = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.getProjectsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.prototype.clearProjectsMap = function() {
  this.getProjectsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse;
  return proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    organizationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    email: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest;
  return proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string owner_id = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 project_id = 2;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 organization_id = 3;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitationUserList: jspb.Message.toObjectList(msg.getInvitationUserList(),
    proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse;
  return proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse;
      reader.readMessage(value,proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.deserializeBinaryFromReader);
      msg.addInvitationUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitationUserList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetInvitationUserResponse invitation_user = 1;
 * @return {!Array<!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse>}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.getInvitationUserList = function() {
  return /** @type{!Array<!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse, 1));
};


/**
 * @param {!Array<!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse>} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse} returns this
*/
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.setInvitationUserList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse}
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.addInvitationUser = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.accounts.v1alpha1.invitations.v1.GetInvitationUserResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.ListInvitationSendResponse.prototype.clearInvitationUserList = function() {
  return this.setInvitationUserList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    invitationId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest;
  return proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrganizationId(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvitationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getInvitationId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 organization_id = 2;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 invitation_id = 1;
 * @return {number}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.getInvitationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest} returns this
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.prototype.setInvitationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse;
  return proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse} returns this
 */
proto.accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.accounts.v1alpha1.invitations.v1.InvitationResponse = {
  INVITATION_RESPONSE_ACCEPTED_UNSPECIFIED: 0,
  INVITATION_RESPONSE_REJECTED: 1
};

goog.object.extend(exports, proto.accounts.v1alpha1.invitations.v1);
