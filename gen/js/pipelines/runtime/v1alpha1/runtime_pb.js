// source: pipelines/runtime/v1alpha1/runtime.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pipelines.runtime.v1alpha1.Commands', null, global);
goog.exportSymbol('proto.pipelines.runtime.v1alpha1.Integration', null, global);
goog.exportSymbol('proto.pipelines.runtime.v1alpha1.Runtime', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.runtime.v1alpha1.Integration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.runtime.v1alpha1.Integration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.runtime.v1alpha1.Integration.displayName = 'proto.pipelines.runtime.v1alpha1.Integration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.runtime.v1alpha1.Commands = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.runtime.v1alpha1.Commands, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.runtime.v1alpha1.Commands.displayName = 'proto.pipelines.runtime.v1alpha1.Commands';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.runtime.v1alpha1.Runtime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.runtime.v1alpha1.Runtime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.runtime.v1alpha1.Runtime.displayName = 'proto.pipelines.runtime.v1alpha1.Runtime';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.runtime.v1alpha1.Integration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.runtime.v1alpha1.Integration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Integration.toObject = function(includeInstance, msg) {
  var f, obj = {
    integrationName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repositoryUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.runtime.v1alpha1.Integration}
 */
proto.pipelines.runtime.v1alpha1.Integration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.runtime.v1alpha1.Integration;
  return proto.pipelines.runtime.v1alpha1.Integration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.runtime.v1alpha1.Integration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.runtime.v1alpha1.Integration}
 */
proto.pipelines.runtime.v1alpha1.Integration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegrationName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.runtime.v1alpha1.Integration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.runtime.v1alpha1.Integration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Integration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntegrationName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepositoryUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string integration_name = 1;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.getIntegrationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Integration} returns this
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.setIntegrationName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repository_url = 2;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.getRepositoryUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Integration} returns this
 */
proto.pipelines.runtime.v1alpha1.Integration.prototype.setRepositoryUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.runtime.v1alpha1.Commands.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.runtime.v1alpha1.Commands} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Commands.toObject = function(includeInstance, msg) {
  var f, obj = {
    buildCommand: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runCommand: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.runtime.v1alpha1.Commands}
 */
proto.pipelines.runtime.v1alpha1.Commands.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.runtime.v1alpha1.Commands;
  return proto.pipelines.runtime.v1alpha1.Commands.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.runtime.v1alpha1.Commands} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.runtime.v1alpha1.Commands}
 */
proto.pipelines.runtime.v1alpha1.Commands.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildCommand(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunCommand(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.runtime.v1alpha1.Commands.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.runtime.v1alpha1.Commands} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Commands.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuildCommand();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunCommand();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string build_command = 1;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.getBuildCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Commands} returns this
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.setBuildCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string run_command = 2;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.getRunCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Commands} returns this
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.setRunCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string port = 3;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Commands} returns this
 */
proto.pipelines.runtime.v1alpha1.Commands.prototype.setPort = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.runtime.v1alpha1.Runtime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.runtime.v1alpha1.Runtime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Runtime.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    applicationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    workspaceId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    integration: (f = msg.getIntegration()) && proto.pipelines.runtime.v1alpha1.Integration.toObject(includeInstance, f),
    envVariablesMap: (f = msg.getEnvVariablesMap()) ? f.toObject(includeInstance, undefined) : [],
    commands: (f = msg.getCommands()) && proto.pipelines.runtime.v1alpha1.Commands.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime}
 */
proto.pipelines.runtime.v1alpha1.Runtime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.runtime.v1alpha1.Runtime;
  return proto.pipelines.runtime.v1alpha1.Runtime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.runtime.v1alpha1.Runtime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime}
 */
proto.pipelines.runtime.v1alpha1.Runtime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProjectId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    case 7:
      var value = new proto.pipelines.runtime.v1alpha1.Integration;
      reader.readMessage(value,proto.pipelines.runtime.v1alpha1.Integration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    case 8:
      var value = msg.getEnvVariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = new proto.pipelines.runtime.v1alpha1.Commands;
      reader.readMessage(value,proto.pipelines.runtime.v1alpha1.Commands.deserializeBinaryFromReader);
      msg.setCommands(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.runtime.v1alpha1.Runtime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.runtime.v1alpha1.Runtime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.runtime.v1alpha1.Runtime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProjectId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIntegration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.pipelines.runtime.v1alpha1.Integration.serializeBinaryToWriter
    );
  }
  f = message.getEnvVariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCommands();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.pipelines.runtime.v1alpha1.Commands.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 project_id = 4;
 * @return {number}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getProjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string application_id = 5;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string workspace_id = 6;
 * @return {string}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setWorkspaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Integration integration = 7;
 * @return {?proto.pipelines.runtime.v1alpha1.Integration}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getIntegration = function() {
  return /** @type{?proto.pipelines.runtime.v1alpha1.Integration} */ (
    jspb.Message.getWrapperField(this, proto.pipelines.runtime.v1alpha1.Integration, 7));
};


/**
 * @param {?proto.pipelines.runtime.v1alpha1.Integration|undefined} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
*/
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setIntegration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.clearIntegration = function() {
  return this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, string> env_variables = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getEnvVariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.clearEnvVariablesMap = function() {
  this.getEnvVariablesMap().clear();
  return this;};


/**
 * optional Commands commands = 9;
 * @return {?proto.pipelines.runtime.v1alpha1.Commands}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.getCommands = function() {
  return /** @type{?proto.pipelines.runtime.v1alpha1.Commands} */ (
    jspb.Message.getWrapperField(this, proto.pipelines.runtime.v1alpha1.Commands, 9));
};


/**
 * @param {?proto.pipelines.runtime.v1alpha1.Commands|undefined} value
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
*/
proto.pipelines.runtime.v1alpha1.Runtime.prototype.setCommands = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.runtime.v1alpha1.Runtime} returns this
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.clearCommands = function() {
  return this.setCommands(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.runtime.v1alpha1.Runtime.prototype.hasCommands = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.pipelines.runtime.v1alpha1);
