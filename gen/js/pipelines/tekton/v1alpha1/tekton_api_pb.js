// source: pipelines/tekton/v1alpha1/tekton_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var pipelines_tekton_v1alpha1_tekton_pb = require('../../../pipelines/tekton/v1alpha1/tekton_pb.js');
goog.object.extend(proto, pipelines_tekton_v1alpha1_tekton_pb);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest', null, global);
goog.exportSymbol('proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.displayName = 'proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.displayName = 'proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.displayName = 'proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.displayName = 'proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.displayName = 'proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.displayName = 'proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.displayName = 'proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.displayName = 'proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.displayName = 'proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.displayName = 'proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.displayName = 'proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.displayName = 'proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.displayName = 'proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.displayName = 'proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.displayName = 'proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.displayName = 'proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tektonPipeline: (f = msg.getTektonPipeline()) && pipelines_tekton_v1alpha1_tekton_pb.Pipeline.toObject(includeInstance, f),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest;
  return proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.Pipeline;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.Pipeline.deserializeBinaryFromReader);
      msg.setTektonPipeline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTektonPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.Pipeline.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Pipeline tekton_pipeline = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.Pipeline}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.getTektonPipeline = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.Pipeline} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.Pipeline, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.Pipeline|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} returns this
*/
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.setTektonPipeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.clearTektonPipeline = function() {
  return this.setTektonPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.hasTektonPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tektonPipeline: (f = msg.getTektonPipeline()) && pipelines_tekton_v1alpha1_tekton_pb.Pipeline.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse;
  return proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.Pipeline;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.Pipeline.deserializeBinaryFromReader);
      msg.setTektonPipeline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTektonPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.Pipeline.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Pipeline tekton_pipeline = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.Pipeline}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.getTektonPipeline = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.Pipeline} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.Pipeline, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.Pipeline|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.setTektonPipeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.clearTektonPipeline = function() {
  return this.setTektonPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.hasTektonPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.CreateTektonPipelineResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    environmentId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest;
  return proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironmentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuntimeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnvironmentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string runtime_name = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.getRuntimeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.setRuntimeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string application_id = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string environment_id = 3;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.getEnvironmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineRequest.prototype.setEnvironmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse;
  return proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.DeleteTektonPipelineResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest;
  return proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskList: (f = msg.getTaskList()) && pipelines_tekton_v1alpha1_tekton_pb.TektonTaskList.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse;
  return proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.TektonTaskList;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.TektonTaskList.deserializeBinaryFromReader);
      msg.setTaskList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.TektonTaskList.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional TektonTaskList task_list = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.TektonTaskList}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.getTaskList = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.TektonTaskList} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.TektonTaskList, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.TektonTaskList|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.setTaskList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.clearTaskList = function() {
  return this.setTaskList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.hasTaskList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ListTektonTaskPipelineResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest;
  return proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuntimeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string runtime_id = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.prototype.getRuntimeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunRequest.prototype.setRuntimeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelineRun: (f = msg.getPipelineRun()) && pipelines_tekton_v1alpha1_tekton_pb.PipelineRun.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse;
  return proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.PipelineRun;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.PipelineRun.deserializeBinaryFromReader);
      msg.setPipelineRun(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelineRun();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.PipelineRun.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PipelineRun pipeline_run = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.PipelineRun}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.getPipelineRun = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.PipelineRun} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.PipelineRun, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.PipelineRun|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.setPipelineRun = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.clearPipelineRun = function() {
  return this.setPipelineRun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.hasPipelineRun = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.GetPipelineRunResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest;
  return proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuntimeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string runtime_id = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.prototype.getRuntimeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunRequest.prototype.setRuntimeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipelineRunList: (f = msg.getPipelineRunList()) && pipelines_tekton_v1alpha1_tekton_pb.PipelineRunList.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse;
  return proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.PipelineRunList;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.PipelineRunList.deserializeBinaryFromReader);
      msg.setPipelineRunList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipelineRunList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.PipelineRunList.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PipelineRunList pipeline_run_list = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.PipelineRunList}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.getPipelineRunList = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.PipelineRunList} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.PipelineRunList, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.PipelineRunList|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.setPipelineRunList = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.clearPipelineRunList = function() {
  return this.setPipelineRunList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.hasPipelineRunList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ListPipelineRunResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest;
  return proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuntimeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string runtime_id = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.prototype.getRuntimeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeRequest.prototype.setRuntimeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && pipelines_tekton_v1alpha1_tekton_pb.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse;
  return proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.Event;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional Event event = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.Event}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.getEvent = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.Event} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.Event, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.Event|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.GetStatusRuntimeResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    runtimeName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 5, ""),
    runtimeId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest;
  return proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRuntimeName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRuntimeId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string application_id = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organization_id = 3;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string runtime_name = 4;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getRuntimeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setRuntimeName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string namespace = 5;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string runtime_id = 6;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getRuntimeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setRuntimeId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse;
  return proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.ChangeStatusRuntimeAndApplicationResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tektonPipeline: (f = msg.getTektonPipeline()) && pipelines_tekton_v1alpha1_tekton_pb.Pipeline.toObject(includeInstance, f),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest;
  return proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.Pipeline;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.Pipeline.deserializeBinaryFromReader);
      msg.setTektonPipeline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTektonPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.Pipeline.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Pipeline tekton_pipeline = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.Pipeline}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.getTektonPipeline = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.Pipeline} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.Pipeline, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.Pipeline|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} returns this
*/
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.setTektonPipeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.clearTektonPipeline = function() {
  return this.setTektonPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.hasTektonPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest} returns this
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tektonPipeline: (f = msg.getTektonPipeline()) && pipelines_tekton_v1alpha1_tekton_pb.Pipeline.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse;
  return proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pipelines_tekton_v1alpha1_tekton_pb.Pipeline;
      reader.readMessage(value,pipelines_tekton_v1alpha1_tekton_pb.Pipeline.deserializeBinaryFromReader);
      msg.setTektonPipeline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTektonPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pipelines_tekton_v1alpha1_tekton_pb.Pipeline.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Pipeline tekton_pipeline = 1;
 * @return {?proto.pipelines.tekton.v1alpha1.Pipeline}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.getTektonPipeline = function() {
  return /** @type{?proto.pipelines.tekton.v1alpha1.Pipeline} */ (
    jspb.Message.getWrapperField(this, pipelines_tekton_v1alpha1_tekton_pb.Pipeline, 1));
};


/**
 * @param {?proto.pipelines.tekton.v1alpha1.Pipeline|undefined} value
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} returns this
*/
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.setTektonPipeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.clearTektonPipeline = function() {
  return this.setTektonPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.hasTektonPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse} returns this
 */
proto.pipelines.tekton.v1alpha1.RebuildTektonPipelineResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.pipelines.tekton.v1alpha1);
