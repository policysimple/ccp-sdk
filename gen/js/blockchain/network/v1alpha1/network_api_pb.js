// source: blockchain/network/v1alpha1/network_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var blockchain_network_v1alpha1_network_pb = require('../../../blockchain/network/v1alpha1/network_pb.js');
goog.object.extend(proto, blockchain_network_v1alpha1_network_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateCorporationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateCorporationResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.SendInvitationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.SendInvitationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.displayName = 'proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateCorporationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateCorporationRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateCorporationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.SendInvitationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.SendInvitationRequest.displayName = 'proto.blockchain.network.v1alpha1.SendInvitationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.displayName = 'proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetBlockchainsResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateCorporationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateCorporationResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateCorporationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.SendInvitationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.SendInvitationResponse.displayName = 'proto.blockchain.network.v1alpha1.SendInvitationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f),
    corporation: (f = msg.getCorporation()) && blockchain_network_v1alpha1_network_pb.Corporation.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkRequest;
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 2:
      var value = new blockchain_network_v1alpha1_network_pb.Corporation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Corporation.deserializeBinaryFromReader);
      msg.setCorporation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getCorporation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      blockchain_network_v1alpha1_network_pb.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Corporation corporation = 2;
 * @return {?proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getCorporation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Corporation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Corporation, 2));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Corporation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setCorporation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.clearCorporation = function() {
  return this.setCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.hasCorporation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ccp_organization_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ccp_project_id = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    corporationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userEmail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest;
  return proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCorporationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string ccp_organization_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ccp_project_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string corporation_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getCorporationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setCorporationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_email = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getUserEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setUserEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string user_name = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationRequest.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderer: (f = msg.getOrderer()) && blockchain_network_v1alpha1_network_pb.Orderer.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest;
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.setOrderer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Orderer orderer = 1;
 * @return {?proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getOrderer = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Orderer} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Orderer|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
*/
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setOrderer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.clearOrderer = function() {
  return this.setOrderer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.hasOrderer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ccp_organization_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ccp_project_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = msg.getChannel()) && blockchain_network_v1alpha1_network_pb.Channel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelRequest;
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Channel;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Channel.serializeBinaryToWriter
    );
  }
};


/**
 * optional Channel channel = 1;
 * @return {?proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getChannel = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Channel} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Channel, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Channel|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    queryParams: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getQueryParams();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 offset = 1;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string query_params = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.getQueryParams = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.setQueryParams = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    corporationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest;
  return proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorporationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string corporation_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.getCorporationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.setCorporationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest;
  return proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string network_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.getNetworkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.setNetworkId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockchainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest;
  return proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string blockchain_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateCorporationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    corporation: (f = msg.getCorporation()) && blockchain_network_v1alpha1_network_pb.Corporation.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateCorporationRequest;
  return proto.blockchain.network.v1alpha1.CreateCorporationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Corporation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Corporation.deserializeBinaryFromReader);
      msg.setCorporation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateCorporationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorporation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Corporation corporation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.getCorporation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Corporation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Corporation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Corporation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.setCorporation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.clearCorporation = function() {
  return this.setCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.hasCorporation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ccp_organization_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ccp_project_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateCorporationRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.SendInvitationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitation: (f = msg.getInvitation()) && blockchain_network_v1alpha1_network_pb.Invitation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.SendInvitationRequest;
  return proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Invitation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Invitation.deserializeBinaryFromReader);
      msg.setInvitation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.SendInvitationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Invitation.serializeBinaryToWriter
    );
  }
};


/**
 * optional Invitation invitation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.getInvitation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Invitation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Invitation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Invitation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest} returns this
*/
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.setInvitation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.clearInvitation = function() {
  return this.setInvitation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.hasInvitation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkResponse;
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    corporation: (f = msg.getCorporation()) && blockchain_network_v1alpha1_network_pb.Corporation.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse;
  return proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Corporation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Corporation.deserializeBinaryFromReader);
      msg.setCorporation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorporation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Corporation corporation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.getCorporation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Corporation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Corporation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Corporation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} returns this
*/
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.setCorporation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.clearCorporation = function() {
  return this.setCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.hasCorporation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToCorporationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderer: (f = msg.getOrderer()) && blockchain_network_v1alpha1_network_pb.Orderer.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse;
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.setOrderer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Orderer orderer = 1;
 * @return {?proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.getOrderer = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Orderer} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Orderer|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.setOrderer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.clearOrderer = function() {
  return this.setOrderer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.hasOrderer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = msg.getChannel()) && blockchain_network_v1alpha1_network_pb.Channel.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelResponse;
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Channel;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Channel.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Channel channel = 1;
 * @return {?proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getChannel = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Channel} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Channel, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Channel|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networksList: jspb.Message.toObjectList(msg.getNetworksList(),
    blockchain_network_v1alpha1_network_pb.Network.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.addNetworks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Network networks = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Network>}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getNetworksList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Network>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Network>} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setNetworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Network=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.addNetworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Network, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.clearNetworksList = function() {
  return this.setNetworksList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networksList: jspb.Message.toObjectList(msg.getNetworksList(),
    blockchain_network_v1alpha1_network_pb.Network.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.addNetworks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Network networks = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Network>}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getNetworksList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Network>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Network>} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setNetworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Network=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.addNetworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Network, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.clearNetworksList = function() {
  return this.setNetworksList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderersList: jspb.Message.toObjectList(msg.getOrderersList(),
    blockchain_network_v1alpha1_network_pb.Orderer.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse;
  return proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.addOrderers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Orderer orderers = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Orderer>}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.getOrderersList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Orderer>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Orderer>} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.setOrderersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Orderer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.addOrderers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Orderer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.clearOrderersList = function() {
  return this.setOrderersList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrderersByNetworkIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerList: jspb.Message.toObjectList(msg.getPeerList(),
    blockchain_network_v1alpha1_network_pb.Peer.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse;
  return proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Peer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Peer.deserializeBinaryFromReader);
      msg.addPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Peer.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Peer peer = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Peer>}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.getPeerList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Peer, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Peer>} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.setPeerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Peer}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.addPeer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.clearPeerList = function() {
  return this.setPeerList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByCorporationIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    corporationsList: jspb.Message.toObjectList(msg.getCorporationsList(),
    blockchain_network_v1alpha1_network_pb.Corporation.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse;
  return proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Corporation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Corporation.deserializeBinaryFromReader);
      msg.addCorporations(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorporationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Corporation corporations = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Corporation>}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.getCorporationsList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Corporation>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Corporation, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Corporation>} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.setCorporationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Corporation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.addCorporations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Corporation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.clearCorporationsList = function() {
  return this.setCorporationsList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetCorporationsByBlockchainIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateCorporationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    corporation: (f = msg.getCorporation()) && blockchain_network_v1alpha1_network_pb.Corporation.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationResponse}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateCorporationResponse;
  return proto.blockchain.network.v1alpha1.CreateCorporationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationResponse}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Corporation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Corporation.deserializeBinaryFromReader);
      msg.setCorporation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateCorporationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorporation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Corporation corporation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.getCorporation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Corporation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Corporation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Corporation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.setCorporation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.clearCorporation = function() {
  return this.setCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.hasCorporation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateCorporationResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateCorporationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.SendInvitationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitation: (f = msg.getInvitation()) && blockchain_network_v1alpha1_network_pb.Invitation.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.SendInvitationResponse;
  return proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Invitation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Invitation.deserializeBinaryFromReader);
      msg.setInvitation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.SendInvitationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Invitation.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Invitation invitation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.getInvitation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Invitation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Invitation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Invitation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
*/
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.setInvitation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.clearInvitation = function() {
  return this.setInvitation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.hasInvitation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.blockchain.network.v1alpha1);
