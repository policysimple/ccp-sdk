// source: blockchain/network/v1alpha1/network_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var blockchain_network_v1alpha1_network_pb = require('../../../blockchain/network/v1alpha1/network_pb.js');
goog.object.extend(proto, blockchain_network_v1alpha1_network_pb);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.CreateChannelRequest.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkRequest;
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgDomain: jspb.Message.getFieldWithDefault(msg, 1, ""),
    adminPassword: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    networkId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest;
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgDomain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgDomain();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdminPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNetworkId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string org_domain = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getOrgDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setOrgDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string admin_password = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getAdminPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setAdminPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string admin_user = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getAdminUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setAdminUser = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string network_name = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setNetworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string network_id = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getNetworkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setNetworkId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    creatorOrgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockchainId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelOrgIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelRequest;
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addChannelOrgIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatorOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelOrgIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string creator_org_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getCreatorOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setCreatorOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string blockchain_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string channel_name = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setChannelName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string channel_org_ids = 4;
 * @return {!Array<string>}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getChannelOrgIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setChannelOrgIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.addChannelOrgIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.clearChannelOrgIdsList = function() {
  return this.setChannelOrgIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkResponse;
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse;
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelResponse;
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.blockchain.network.v1alpha1);
