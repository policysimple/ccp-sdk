// source: blockchain/network/v1alpha1/network_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var blockchain_network_v1alpha1_network_pb = require('../../../blockchain/network/v1alpha1/network_pb.js');
goog.object.extend(proto, blockchain_network_v1alpha1_network_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateChannelResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateNetworkResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateOrganizationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.CreateOrganizationResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetBlockchainsResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.SendInvitationRequest', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.SendInvitationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.displayName = 'proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.displayName = 'proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateOrganizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateOrganizationRequest.displayName = 'proto.blockchain.network.v1alpha1.CreateOrganizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.SendInvitationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.SendInvitationRequest.displayName = 'proto.blockchain.network.v1alpha1.SendInvitationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateNetworkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateNetworkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.displayName = 'proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.displayName = 'proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateChannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateChannelResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateChannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetBlockchainsResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.displayName = 'proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.CreateOrganizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.CreateOrganizationResponse.displayName = 'proto.blockchain.network.v1alpha1.CreateOrganizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.SendInvitationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.SendInvitationResponse.displayName = 'proto.blockchain.network.v1alpha1.SendInvitationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f),
    organization: (f = msg.getOrganization()) && blockchain_network_v1alpha1_network_pb.Organization.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkRequest;
  return proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 2:
      var value = new blockchain_network_v1alpha1_network_pb.Organization;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      blockchain_network_v1alpha1_network_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Organization organization = 2;
 * @return {?proto.blockchain.network.v1alpha1.Organization}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getOrganization = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Organization} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Organization, 2));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Organization|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ccp_organization_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ccp_project_id = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest;
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ccp_organization_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ccp_project_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organization_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderer: (f = msg.getOrderer()) && blockchain_network_v1alpha1_network_pb.Orderer.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest;
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.setOrderer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Orderer orderer = 1;
 * @return {?proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getOrderer = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Orderer} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Orderer|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
*/
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setOrderer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.clearOrderer = function() {
  return this.setOrderer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.hasOrderer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ccp_organization_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ccp_project_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = msg.getChannel()) && blockchain_network_v1alpha1_network_pb.Channel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelRequest;
  return proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Channel;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Channel.serializeBinaryToWriter
    );
  }
};


/**
 * optional Channel channel = 1;
 * @return {?proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.getChannel = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Channel} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Channel, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Channel|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateChannelRequest.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 offset = 1;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest;
  return proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string organization_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest;
  return proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string network_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.getNetworkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.setNetworkId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest;
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockchainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest;
  return proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string blockchain_id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 limit = 3;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateOrganizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && blockchain_network_v1alpha1_network_pb.Organization.toObject(includeInstance, f),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ccpProjectId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateOrganizationRequest;
  return proto.blockchain.network.v1alpha1.CreateOrganizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Organization;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateOrganizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCcpProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.blockchain.network.v1alpha1.Organization}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.getOrganization = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Organization} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Organization, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Organization|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} returns this
*/
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ccp_organization_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ccp_project_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.getCcpProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationRequest} returns this
 */
proto.blockchain.network.v1alpha1.CreateOrganizationRequest.prototype.setCcpProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.SendInvitationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitation: (f = msg.getInvitation()) && blockchain_network_v1alpha1_network_pb.Invitation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.SendInvitationRequest;
  return proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Invitation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Invitation.deserializeBinaryFromReader);
      msg.setInvitation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.SendInvitationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Invitation.serializeBinaryToWriter
    );
  }
};


/**
 * optional Invitation invitation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.getInvitation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Invitation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Invitation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Invitation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest} returns this
*/
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.setInvitation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationRequest} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.clearInvitation = function() {
  return this.setInvitation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.SendInvitationRequest.prototype.hasInvitation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateNetworkResponse;
  return proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateNetworkResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateNetworkResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && blockchain_network_v1alpha1_network_pb.Organization.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse;
  return proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Organization;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.blockchain.network.v1alpha1.Organization}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.getOrganization = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Organization} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Organization, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Organization|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} returns this
*/
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddPeerToOrganizationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderer: (f = msg.getOrderer()) && blockchain_network_v1alpha1_network_pb.Orderer.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse;
  return proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.setOrderer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Orderer orderer = 1;
 * @return {?proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.getOrderer = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Orderer} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Orderer|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.setOrderer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.clearOrderer = function() {
  return this.setOrderer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.hasOrderer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.AddOrdererByNetworkIdResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = msg.getChannel()) && blockchain_network_v1alpha1_network_pb.Channel.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateChannelResponse;
  return proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Channel;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateChannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Channel.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Channel channel = 1;
 * @return {?proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getChannel = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Channel} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Channel, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Channel|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateChannelResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateChannelResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networksList: jspb.Message.toObjectList(msg.getNetworksList(),
    blockchain_network_v1alpha1_network_pb.Network.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.addNetworks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Network networks = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Network>}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getNetworksList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Network>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Network>} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setNetworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Network=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.addNetworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Network, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.clearNetworksList = function() {
  return this.setNetworksList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networksList: jspb.Message.toObjectList(msg.getNetworksList(),
    blockchain_network_v1alpha1_network_pb.Network.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.addNetworks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Network networks = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Network>}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getNetworksList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Network>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Network>} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setNetworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Network=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.addNetworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Network, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.clearNetworksList = function() {
  return this.setNetworksList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainsByUserIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordererList: jspb.Message.toObjectList(msg.getOrdererList(),
    blockchain_network_v1alpha1_network_pb.Orderer.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse;
  return proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Orderer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Orderer.deserializeBinaryFromReader);
      msg.addOrderer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdererList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Orderer.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Orderer orderer = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Orderer>}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.getOrdererList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Orderer>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Orderer, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Orderer>} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.setOrdererList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Orderer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.addOrderer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Orderer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.clearOrdererList = function() {
  return this.setOrdererList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrdererByNetworkIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerList: jspb.Message.toObjectList(msg.getPeerList(),
    blockchain_network_v1alpha1_network_pb.Peer.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse;
  return proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Peer;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Peer.deserializeBinaryFromReader);
      msg.addPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Peer.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Peer peer = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Peer>}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.getPeerList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Peer, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Peer>} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.setPeerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Peer}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.addPeer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.clearPeerList = function() {
  return this.setPeerList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetPeersByOrganizationIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    network: (f = msg.getNetwork()) && blockchain_network_v1alpha1_network_pb.Network.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse;
  return proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Network;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Network.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Network.serializeBinaryToWriter
    );
  }
};


/**
 * optional Network network = 1;
 * @return {?proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.getNetwork = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Network} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Network, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Network|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.GetBlockchainByIdResponse.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationsList: jspb.Message.toObjectList(msg.getOrganizationsList(),
    blockchain_network_v1alpha1_network_pb.Organization.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    previousUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse;
  return proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Organization;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Organization.deserializeBinaryFromReader);
      msg.addOrganizations(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNextUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreviousUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Organization organizations = 1;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Organization>}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.getOrganizationsList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Organization>} */ (
    jspb.Message.getRepeatedWrapperField(this, blockchain_network_v1alpha1_network_pb.Organization, 1));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Organization>} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} returns this
*/
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.setOrganizationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Organization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Organization}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.addOrganizations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blockchain.network.v1alpha1.Organization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.clearOrganizationsList = function() {
  return this.setOrganizationsList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_url = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.getNextUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.setNextUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string previous_url = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.getPreviousUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse} returns this
 */
proto.blockchain.network.v1alpha1.GetOrganizationsByBlockchainIdResponse.prototype.setPreviousUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.CreateOrganizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && blockchain_network_v1alpha1_network_pb.Organization.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.CreateOrganizationResponse;
  return proto.blockchain.network.v1alpha1.CreateOrganizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Organization;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.CreateOrganizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.blockchain.network.v1alpha1.Organization}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.getOrganization = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Organization} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Organization, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Organization|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} returns this
*/
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.CreateOrganizationResponse} returns this
 */
proto.blockchain.network.v1alpha1.CreateOrganizationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.SendInvitationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitation: (f = msg.getInvitation()) && blockchain_network_v1alpha1_network_pb.Invitation.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.SendInvitationResponse;
  return proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new blockchain_network_v1alpha1_network_pb.Invitation;
      reader.readMessage(value,blockchain_network_v1alpha1_network_pb.Invitation.deserializeBinaryFromReader);
      msg.setInvitation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.SendInvitationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.SendInvitationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      blockchain_network_v1alpha1_network_pb.Invitation.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Invitation invitation = 1;
 * @return {?proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.getInvitation = function() {
  return /** @type{?proto.blockchain.network.v1alpha1.Invitation} */ (
    jspb.Message.getWrapperField(this, blockchain_network_v1alpha1_network_pb.Invitation, 1));
};


/**
 * @param {?proto.blockchain.network.v1alpha1.Invitation|undefined} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
*/
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.setInvitation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.clearInvitation = function() {
  return this.setInvitation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.hasInvitation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.SendInvitationResponse} returns this
 */
proto.blockchain.network.v1alpha1.SendInvitationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.blockchain.network.v1alpha1);
