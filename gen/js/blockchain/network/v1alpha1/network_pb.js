// source: blockchain/network/v1alpha1/network.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.blockchain.network.v1alpha1.Channel', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.Corporation', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.Invitation', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.Network', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.Orderer', null, global);
goog.exportSymbol('proto.blockchain.network.v1alpha1.Peer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Network = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.Network.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Network, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Network.displayName = 'proto.blockchain.network.v1alpha1.Network';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Corporation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.Corporation.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Corporation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Corporation.displayName = 'proto.blockchain.network.v1alpha1.Corporation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Peer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Peer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Peer.displayName = 'proto.blockchain.network.v1alpha1.Peer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Orderer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Orderer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Orderer.displayName = 'proto.blockchain.network.v1alpha1.Orderer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Channel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blockchain.network.v1alpha1.Channel.repeatedFields_, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Channel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Channel.displayName = 'proto.blockchain.network.v1alpha1.Channel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blockchain.network.v1alpha1.Invitation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blockchain.network.v1alpha1.Invitation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blockchain.network.v1alpha1.Invitation.displayName = 'proto.blockchain.network.v1alpha1.Invitation';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.Network.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Network.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Network.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Network} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Network.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    networkName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    framework: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    errorDetails: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 8, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 9, ""),
    corporationsList: jspb.Message.toObjectList(msg.getCorporationsList(),
    proto.blockchain.network.v1alpha1.Corporation.toObject, includeInstance),
    ccpOrganizationId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.Network.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Network;
  return proto.blockchain.network.v1alpha1.Network.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Network} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Network}
 */
proto.blockchain.network.v1alpha1.Network.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFramework(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDetails(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 10:
      var value = new proto.blockchain.network.v1alpha1.Corporation;
      reader.readMessage(value,proto.blockchain.network.v1alpha1.Corporation.deserializeBinaryFromReader);
      msg.addCorporations(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCcpOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Network.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Network.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Network} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Network.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNetworkName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFramework();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getErrorDetails();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCorporationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.blockchain.network.v1alpha1.Corporation.serializeBinaryToWriter
    );
  }
  f = message.getCcpOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setNetworkName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string framework = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getFramework = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setFramework = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string error_details = 7;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getErrorDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setErrorDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string created_at = 8;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string updated_at = 9;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Corporation corporations = 10;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Corporation>}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getCorporationsList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Corporation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blockchain.network.v1alpha1.Corporation, 10));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Corporation>} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
*/
proto.blockchain.network.v1alpha1.Network.prototype.setCorporationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Corporation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.Network.prototype.addCorporations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.blockchain.network.v1alpha1.Corporation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.clearCorporationsList = function() {
  return this.setCorporationsList([]);
};


/**
 * optional string ccp_organization_id = 11;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Network.prototype.getCcpOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Network} returns this
 */
proto.blockchain.network.v1alpha1.Network.prototype.setCcpOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.Corporation.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Corporation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Corporation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Corporation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 3, ""),
    adminPassword: jspb.Message.getFieldWithDefault(msg, 4, ""),
    adminUser: jspb.Message.getFieldWithDefault(msg, 5, ""),
    blockchainId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    peersList: jspb.Message.toObjectList(msg.getPeersList(),
    proto.blockchain.network.v1alpha1.Peer.toObject, includeInstance),
    status: jspb.Message.getFieldWithDefault(msg, 8, ""),
    errorDetails: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 10, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 11, ""),
    nameCa: jspb.Message.getFieldWithDefault(msg, 12, ""),
    nameMsp: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.Corporation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Corporation;
  return proto.blockchain.network.v1alpha1.Corporation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Corporation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Corporation}
 */
proto.blockchain.network.v1alpha1.Corporation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminUser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 7:
      var value = new proto.blockchain.network.v1alpha1.Peer;
      reader.readMessage(value,proto.blockchain.network.v1alpha1.Peer.deserializeBinaryFromReader);
      msg.addPeers(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDetails(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameCa(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameMsp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Corporation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Corporation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Corporation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAdminPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAdminUser();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.blockchain.network.v1alpha1.Peer.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getErrorDetails();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getNameCa();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getNameMsp();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string domain = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string admin_password = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getAdminPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setAdminPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string admin_user = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getAdminUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setAdminUser = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string blockchain_id = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Peer peers = 7;
 * @return {!Array<!proto.blockchain.network.v1alpha1.Peer>}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getPeersList = function() {
  return /** @type{!Array<!proto.blockchain.network.v1alpha1.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blockchain.network.v1alpha1.Peer, 7));
};


/**
 * @param {!Array<!proto.blockchain.network.v1alpha1.Peer>} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
*/
proto.blockchain.network.v1alpha1.Corporation.prototype.setPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.blockchain.network.v1alpha1.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Peer}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.addPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.blockchain.network.v1alpha1.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.clearPeersList = function() {
  return this.setPeersList([]);
};


/**
 * optional string status = 8;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string error_details = 9;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getErrorDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setErrorDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string created_at = 10;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string updated_at = 11;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string name_ca = 12;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getNameCa = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setNameCa = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string name_msp = 13;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.getNameMsp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Corporation} returns this
 */
proto.blockchain.network.v1alpha1.Corporation.prototype.setNameMsp = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Peer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Peer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Peer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Peer}
 */
proto.blockchain.network.v1alpha1.Peer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Peer;
  return proto.blockchain.network.v1alpha1.Peer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Peer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Peer}
 */
proto.blockchain.network.v1alpha1.Peer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Peer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Peer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Peer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string created_at = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_at = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Peer.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Peer} returns this
 */
proto.blockchain.network.v1alpha1.Peer.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Orderer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Orderer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Orderer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blockchainId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.Orderer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Orderer;
  return proto.blockchain.network.v1alpha1.Orderer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Orderer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Orderer}
 */
proto.blockchain.network.v1alpha1.Orderer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Orderer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Orderer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Orderer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string blockchain_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Orderer} returns this
 */
proto.blockchain.network.v1alpha1.Orderer.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blockchain.network.v1alpha1.Channel.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Channel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Channel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Channel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    corporationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blockchainId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    corporationIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.Channel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Channel;
  return proto.blockchain.network.v1alpha1.Channel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Channel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Channel}
 */
proto.blockchain.network.v1alpha1.Channel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCorporationIds(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Channel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Channel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Channel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCorporationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCorporationIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string corporation_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getCorporationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setCorporationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string blockchain_id = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string corporation_ids = 5;
 * @return {!Array<string>}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getCorporationIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setCorporationIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.addCorporationIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.clearCorporationIdsList = function() {
  return this.setCorporationIdsList([]);
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string created_at = 7;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string updated_at = 8;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Channel.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Channel} returns this
 */
proto.blockchain.network.v1alpha1.Channel.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.toObject = function(opt_includeInstance) {
  return proto.blockchain.network.v1alpha1.Invitation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blockchain.network.v1alpha1.Invitation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Invitation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    blockchainId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.Invitation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blockchain.network.v1alpha1.Invitation;
  return proto.blockchain.network.v1alpha1.Invitation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blockchain.network.v1alpha1.Invitation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blockchain.network.v1alpha1.Invitation}
 */
proto.blockchain.network.v1alpha1.Invitation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blockchain.network.v1alpha1.Invitation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blockchain.network.v1alpha1.Invitation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blockchain.network.v1alpha1.Invitation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBlockchainId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from_user_id = 2;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getFromUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setFromUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string blockchain_id = 5;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getBlockchainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setBlockchainId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.blockchain.network.v1alpha1.Invitation} returns this
 */
proto.blockchain.network.v1alpha1.Invitation.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.blockchain.network.v1alpha1);
