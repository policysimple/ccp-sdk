// source: application/v1alpha1/application.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.application.v1alpha1.Application', null, global);
goog.exportSymbol('proto.application.v1alpha1.Branch', null, global);
goog.exportSymbol('proto.application.v1alpha1.Command', null, global);
goog.exportSymbol('proto.application.v1alpha1.Configuration', null, global);
goog.exportSymbol('proto.application.v1alpha1.DockerImageBuildpack', null, global);
goog.exportSymbol('proto.application.v1alpha1.Env', null, global);
goog.exportSymbol('proto.application.v1alpha1.ListApplication', null, global);
goog.exportSymbol('proto.application.v1alpha1.Repository', null, global);
goog.exportSymbol('proto.application.v1alpha1.Scaling', null, global);
goog.exportSymbol('proto.application.v1alpha1.TrafficType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Branch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Branch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Branch.displayName = 'proto.application.v1alpha1.Branch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Repository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Repository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Repository.displayName = 'proto.application.v1alpha1.Repository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Command.displayName = 'proto.application.v1alpha1.Command';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Env = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Env, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Env.displayName = 'proto.application.v1alpha1.Env';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Configuration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.v1alpha1.Configuration.repeatedFields_, null);
};
goog.inherits(proto.application.v1alpha1.Configuration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Configuration.displayName = 'proto.application.v1alpha1.Configuration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Scaling = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Scaling, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Scaling.displayName = 'proto.application.v1alpha1.Scaling';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.Application = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.Application, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.Application.displayName = 'proto.application.v1alpha1.Application';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.v1alpha1.ListApplication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.v1alpha1.ListApplication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.v1alpha1.ListApplication.displayName = 'proto.application.v1alpha1.ListApplication';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Branch.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Branch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Branch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Branch.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sha: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Branch}
 */
proto.application.v1alpha1.Branch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Branch;
  return proto.application.v1alpha1.Branch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Branch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Branch}
 */
proto.application.v1alpha1.Branch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Branch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Branch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Branch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Branch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSha();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.application.v1alpha1.Branch.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Branch} returns this
 */
proto.application.v1alpha1.Branch.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sha = 2;
 * @return {string}
 */
proto.application.v1alpha1.Branch.prototype.getSha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Branch} returns this
 */
proto.application.v1alpha1.Branch.prototype.setSha = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.application.v1alpha1.Branch.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Branch} returns this
 */
proto.application.v1alpha1.Branch.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Repository.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Repository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Repository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Repository.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fork: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    cloneUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    branch: (f = msg.getBranch()) && proto.application.v1alpha1.Branch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Repository}
 */
proto.application.v1alpha1.Repository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Repository;
  return proto.application.v1alpha1.Repository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Repository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Repository}
 */
proto.application.v1alpha1.Repository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFork(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneUrl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 7:
      var value = new proto.application.v1alpha1.Branch;
      reader.readMessage(value,proto.application.v1alpha1.Branch.deserializeBinaryFromReader);
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Repository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Repository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Repository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Repository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFork();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCloneUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBranch();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.application.v1alpha1.Branch.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.application.v1alpha1.Repository.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_name = 2;
 * @return {string}
 */
proto.application.v1alpha1.Repository.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.application.v1alpha1.Repository.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool fork = 4;
 * @return {boolean}
 */
proto.application.v1alpha1.Repository.prototype.getFork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setFork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string clone_url = 5;
 * @return {string}
 */
proto.application.v1alpha1.Repository.prototype.getCloneUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setCloneUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool private = 6;
 * @return {boolean}
 */
proto.application.v1alpha1.Repository.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional Branch branch = 7;
 * @return {?proto.application.v1alpha1.Branch}
 */
proto.application.v1alpha1.Repository.prototype.getBranch = function() {
  return /** @type{?proto.application.v1alpha1.Branch} */ (
    jspb.Message.getWrapperField(this, proto.application.v1alpha1.Branch, 7));
};


/**
 * @param {?proto.application.v1alpha1.Branch|undefined} value
 * @return {!proto.application.v1alpha1.Repository} returns this
*/
proto.application.v1alpha1.Repository.prototype.setBranch = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.v1alpha1.Repository} returns this
 */
proto.application.v1alpha1.Repository.prototype.clearBranch = function() {
  return this.setBranch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.v1alpha1.Repository.prototype.hasBranch = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    build: jspb.Message.getFieldWithDefault(msg, 1, ""),
    run: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Command}
 */
proto.application.v1alpha1.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Command;
  return proto.application.v1alpha1.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Command}
 */
proto.application.v1alpha1.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuild(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuild();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRun();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string build = 1;
 * @return {string}
 */
proto.application.v1alpha1.Command.prototype.getBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Command} returns this
 */
proto.application.v1alpha1.Command.prototype.setBuild = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string run = 2;
 * @return {string}
 */
proto.application.v1alpha1.Command.prototype.getRun = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Command} returns this
 */
proto.application.v1alpha1.Command.prototype.setRun = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Env.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Env.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Env} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Env.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    key: jspb.Message.getFieldWithDefault(msg, 2, ""),
    encrypted: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Env}
 */
proto.application.v1alpha1.Env.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Env;
  return proto.application.v1alpha1.Env.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Env} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Env}
 */
proto.application.v1alpha1.Env.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncrypted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Env.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Env.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Env} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Env.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncrypted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.application.v1alpha1.Env.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Env} returns this
 */
proto.application.v1alpha1.Env.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.application.v1alpha1.Env.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Env} returns this
 */
proto.application.v1alpha1.Env.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool encrypted = 3;
 * @return {boolean}
 */
proto.application.v1alpha1.Env.prototype.getEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.Env} returns this
 */
proto.application.v1alpha1.Env.prototype.setEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.v1alpha1.Configuration.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Configuration.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Configuration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Configuration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Configuration.toObject = function(includeInstance, msg) {
  var f, obj = {
    envsList: jspb.Message.toObjectList(msg.getEnvsList(),
    proto.application.v1alpha1.Env.toObject, includeInstance),
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    proto.application.v1alpha1.Command.toObject, includeInstance),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    runtimeType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Configuration}
 */
proto.application.v1alpha1.Configuration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Configuration;
  return proto.application.v1alpha1.Configuration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Configuration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Configuration}
 */
proto.application.v1alpha1.Configuration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.application.v1alpha1.Env;
      reader.readMessage(value,proto.application.v1alpha1.Env.deserializeBinaryFromReader);
      msg.addEnvs(value);
      break;
    case 2:
      var value = new proto.application.v1alpha1.Command;
      reader.readMessage(value,proto.application.v1alpha1.Command.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuntimeType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Configuration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Configuration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Configuration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Configuration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.application.v1alpha1.Env.serializeBinaryToWriter
    );
  }
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.application.v1alpha1.Command.serializeBinaryToWriter
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRuntimeType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Env envs = 1;
 * @return {!Array<!proto.application.v1alpha1.Env>}
 */
proto.application.v1alpha1.Configuration.prototype.getEnvsList = function() {
  return /** @type{!Array<!proto.application.v1alpha1.Env>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.v1alpha1.Env, 1));
};


/**
 * @param {!Array<!proto.application.v1alpha1.Env>} value
 * @return {!proto.application.v1alpha1.Configuration} returns this
*/
proto.application.v1alpha1.Configuration.prototype.setEnvsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.application.v1alpha1.Env=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.v1alpha1.Env}
 */
proto.application.v1alpha1.Configuration.prototype.addEnvs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.application.v1alpha1.Env, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.v1alpha1.Configuration} returns this
 */
proto.application.v1alpha1.Configuration.prototype.clearEnvsList = function() {
  return this.setEnvsList([]);
};


/**
 * repeated Command commands = 2;
 * @return {!Array<!proto.application.v1alpha1.Command>}
 */
proto.application.v1alpha1.Configuration.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.application.v1alpha1.Command>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.v1alpha1.Command, 2));
};


/**
 * @param {!Array<!proto.application.v1alpha1.Command>} value
 * @return {!proto.application.v1alpha1.Configuration} returns this
*/
proto.application.v1alpha1.Configuration.prototype.setCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.application.v1alpha1.Command=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.v1alpha1.Command}
 */
proto.application.v1alpha1.Configuration.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.application.v1alpha1.Command, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.v1alpha1.Configuration} returns this
 */
proto.application.v1alpha1.Configuration.prototype.clearCommandsList = function() {
  return this.setCommandsList([]);
};


/**
 * optional int32 port = 3;
 * @return {number}
 */
proto.application.v1alpha1.Configuration.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.application.v1alpha1.Configuration} returns this
 */
proto.application.v1alpha1.Configuration.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string runtime_type = 4;
 * @return {string}
 */
proto.application.v1alpha1.Configuration.prototype.getRuntimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Configuration} returns this
 */
proto.application.v1alpha1.Configuration.prototype.setRuntimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Scaling.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Scaling.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Scaling} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Scaling.toObject = function(includeInstance, msg) {
  var f, obj = {
    cpuRule: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coolDownPeriod: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pollingInterval: jspb.Message.getFieldWithDefault(msg, 3, ""),
    minReplica: jspb.Message.getFieldWithDefault(msg, 4, ""),
    maxReplica: jspb.Message.getFieldWithDefault(msg, 5, ""),
    memoryRule: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Scaling}
 */
proto.application.v1alpha1.Scaling.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Scaling;
  return proto.application.v1alpha1.Scaling.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Scaling} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Scaling}
 */
proto.application.v1alpha1.Scaling.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCpuRule(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoolDownPeriod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPollingInterval(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinReplica(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxReplica(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemoryRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Scaling.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Scaling.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Scaling} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Scaling.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCpuRule();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoolDownPeriod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPollingInterval();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMinReplica();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaxReplica();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMemoryRule();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string cpu_rule = 1;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getCpuRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setCpuRule = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cool_down_period = 2;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getCoolDownPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setCoolDownPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string polling_interval = 3;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getPollingInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setPollingInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string min_replica = 4;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getMinReplica = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setMinReplica = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string max_replica = 5;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getMaxReplica = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setMaxReplica = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string memory_rule = 6;
 * @return {string}
 */
proto.application.v1alpha1.Scaling.prototype.getMemoryRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Scaling} returns this
 */
proto.application.v1alpha1.Scaling.prototype.setMemoryRule = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.Application.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.Application.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.Application} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Application.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    integration: jspb.Message.getFieldWithDefault(msg, 3, ""),
    repository: (f = msg.getRepository()) && proto.application.v1alpha1.Repository.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.application.v1alpha1.Configuration.toObject(includeInstance, f),
    projectId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    nameProject: jspb.Message.getFieldWithDefault(msg, 7, ""),
    projectImage: jspb.Message.getFieldWithDefault(msg, 8, ""),
    projectDescription: jspb.Message.getFieldWithDefault(msg, 9, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    scaling: (f = msg.getScaling()) && proto.application.v1alpha1.Scaling.toObject(includeInstance, f),
    trafficType: jspb.Message.getFieldWithDefault(msg, 12, 0),
    integrationStatus: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    dockerImageBuildpack: jspb.Message.getFieldWithDefault(msg, 14, 0),
    noDockerExists: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.Application}
 */
proto.application.v1alpha1.Application.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.Application;
  return proto.application.v1alpha1.Application.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.Application} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.Application}
 */
proto.application.v1alpha1.Application.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegration(value);
      break;
    case 4:
      var value = new proto.application.v1alpha1.Repository;
      reader.readMessage(value,proto.application.v1alpha1.Repository.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    case 5:
      var value = new proto.application.v1alpha1.Configuration;
      reader.readMessage(value,proto.application.v1alpha1.Configuration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameProject(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectImage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 11:
      var value = new proto.application.v1alpha1.Scaling;
      reader.readMessage(value,proto.application.v1alpha1.Scaling.deserializeBinaryFromReader);
      msg.setScaling(value);
      break;
    case 12:
      var value = /** @type {!proto.application.v1alpha1.TrafficType} */ (reader.readEnum());
      msg.setTrafficType(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntegrationStatus(value);
      break;
    case 14:
      var value = /** @type {!proto.application.v1alpha1.DockerImageBuildpack} */ (reader.readEnum());
      msg.setDockerImageBuildpack(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoDockerExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.Application.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.Application.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.Application} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.Application.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIntegration();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.application.v1alpha1.Repository.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.application.v1alpha1.Configuration.serializeBinaryToWriter
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNameProject();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProjectImage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProjectDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getScaling();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.application.v1alpha1.Scaling.serializeBinaryToWriter
    );
  }
  f = message.getTrafficType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getIntegrationStatus();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getDockerImageBuildpack();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getNoDockerExists();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string integration = 3;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getIntegration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setIntegration = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Repository repository = 4;
 * @return {?proto.application.v1alpha1.Repository}
 */
proto.application.v1alpha1.Application.prototype.getRepository = function() {
  return /** @type{?proto.application.v1alpha1.Repository} */ (
    jspb.Message.getWrapperField(this, proto.application.v1alpha1.Repository, 4));
};


/**
 * @param {?proto.application.v1alpha1.Repository|undefined} value
 * @return {!proto.application.v1alpha1.Application} returns this
*/
proto.application.v1alpha1.Application.prototype.setRepository = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.clearRepository = function() {
  return this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.v1alpha1.Application.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Configuration configuration = 5;
 * @return {?proto.application.v1alpha1.Configuration}
 */
proto.application.v1alpha1.Application.prototype.getConfiguration = function() {
  return /** @type{?proto.application.v1alpha1.Configuration} */ (
    jspb.Message.getWrapperField(this, proto.application.v1alpha1.Configuration, 5));
};


/**
 * @param {?proto.application.v1alpha1.Configuration|undefined} value
 * @return {!proto.application.v1alpha1.Application} returns this
*/
proto.application.v1alpha1.Application.prototype.setConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.clearConfiguration = function() {
  return this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.v1alpha1.Application.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string project_id = 6;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name_project = 7;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getNameProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setNameProject = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string project_image = 8;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getProjectImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setProjectImage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string project_description = 9;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getProjectDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setProjectDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string organization_id = 10;
 * @return {string}
 */
proto.application.v1alpha1.Application.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Scaling scaling = 11;
 * @return {?proto.application.v1alpha1.Scaling}
 */
proto.application.v1alpha1.Application.prototype.getScaling = function() {
  return /** @type{?proto.application.v1alpha1.Scaling} */ (
    jspb.Message.getWrapperField(this, proto.application.v1alpha1.Scaling, 11));
};


/**
 * @param {?proto.application.v1alpha1.Scaling|undefined} value
 * @return {!proto.application.v1alpha1.Application} returns this
*/
proto.application.v1alpha1.Application.prototype.setScaling = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.clearScaling = function() {
  return this.setScaling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.v1alpha1.Application.prototype.hasScaling = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional TrafficType traffic_type = 12;
 * @return {!proto.application.v1alpha1.TrafficType}
 */
proto.application.v1alpha1.Application.prototype.getTrafficType = function() {
  return /** @type {!proto.application.v1alpha1.TrafficType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.application.v1alpha1.TrafficType} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setTrafficType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional bool integration_status = 13;
 * @return {boolean}
 */
proto.application.v1alpha1.Application.prototype.getIntegrationStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setIntegrationStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional DockerImageBuildpack docker_image_buildpack = 14;
 * @return {!proto.application.v1alpha1.DockerImageBuildpack}
 */
proto.application.v1alpha1.Application.prototype.getDockerImageBuildpack = function() {
  return /** @type {!proto.application.v1alpha1.DockerImageBuildpack} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.application.v1alpha1.DockerImageBuildpack} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setDockerImageBuildpack = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional bool no_docker_exists = 15;
 * @return {boolean}
 */
proto.application.v1alpha1.Application.prototype.getNoDockerExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.Application} returns this
 */
proto.application.v1alpha1.Application.prototype.setNoDockerExists = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.v1alpha1.ListApplication.prototype.toObject = function(opt_includeInstance) {
  return proto.application.v1alpha1.ListApplication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.v1alpha1.ListApplication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.ListApplication.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    repository: (f = msg.getRepository()) && proto.application.v1alpha1.Repository.toObject(includeInstance, f),
    projectId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    integrationStatus: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.v1alpha1.ListApplication}
 */
proto.application.v1alpha1.ListApplication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.v1alpha1.ListApplication;
  return proto.application.v1alpha1.ListApplication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.v1alpha1.ListApplication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.v1alpha1.ListApplication}
 */
proto.application.v1alpha1.ListApplication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.application.v1alpha1.Repository;
      reader.readMessage(value,proto.application.v1alpha1.Repository.deserializeBinaryFromReader);
      msg.setRepository(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntegrationStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.v1alpha1.ListApplication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.v1alpha1.ListApplication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.v1alpha1.ListApplication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.v1alpha1.ListApplication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRepository();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.application.v1alpha1.Repository.serializeBinaryToWriter
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIntegrationStatus();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.application.v1alpha1.ListApplication.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.application.v1alpha1.ListApplication.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Repository repository = 3;
 * @return {?proto.application.v1alpha1.Repository}
 */
proto.application.v1alpha1.ListApplication.prototype.getRepository = function() {
  return /** @type{?proto.application.v1alpha1.Repository} */ (
    jspb.Message.getWrapperField(this, proto.application.v1alpha1.Repository, 3));
};


/**
 * @param {?proto.application.v1alpha1.Repository|undefined} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
*/
proto.application.v1alpha1.ListApplication.prototype.setRepository = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.clearRepository = function() {
  return this.setRepository(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.v1alpha1.ListApplication.prototype.hasRepository = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string project_id = 6;
 * @return {string}
 */
proto.application.v1alpha1.ListApplication.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string organization_id = 7;
 * @return {string}
 */
proto.application.v1alpha1.ListApplication.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool integration_status = 8;
 * @return {boolean}
 */
proto.application.v1alpha1.ListApplication.prototype.getIntegrationStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.v1alpha1.ListApplication} returns this
 */
proto.application.v1alpha1.ListApplication.prototype.setIntegrationStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.application.v1alpha1.TrafficType = {
  TRAFFIC_TYPE_UNSPECIFIED: 0,
  TRAFFIC_TYPE_EXTERNAL: 1,
  TRAFFIC_TYPE_INTERNAL: 2
};

/**
 * @enum {number}
 */
proto.application.v1alpha1.DockerImageBuildpack = {
  DOCKER_IMAGE_BUILDPACK_UNSPECIFIED: 0,
  DOCKER_IMAGE_BUILDPACK_GOLANG: 1,
  DOCKER_IMAGE_BUILDPACK_JAVA: 2,
  DOCKER_IMAGE_BUILDPACK_JAVASCRIPT: 3,
  DOCKER_IMAGE_BUILDPACK_PYTHON: 4
};

goog.object.extend(exports, proto.application.v1alpha1);
