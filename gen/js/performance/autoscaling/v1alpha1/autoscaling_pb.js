// source: performance/autoscaling/v1alpha1/autoscaling.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget', null, global);
goog.exportSymbol('proto.performance.autoscaling.v1alpha1.Autoscaling', null, global);
goog.exportSymbol('proto.performance.autoscaling.v1alpha1.AutoscalingSpec', null, global);
goog.exportSymbol('proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule', null, global);
goog.exportSymbol('proto.performance.autoscaling.v1alpha1.Metadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.autoscaling.v1alpha1.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.autoscaling.v1alpha1.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.autoscaling.v1alpha1.Metadata.displayName = 'proto.performance.autoscaling.v1alpha1.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.displayName = 'proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.displayName = 'proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.performance.autoscaling.v1alpha1.AutoscalingSpec.repeatedFields_, null);
};
goog.inherits(proto.performance.autoscaling.v1alpha1.AutoscalingSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.autoscaling.v1alpha1.AutoscalingSpec.displayName = 'proto.performance.autoscaling.v1alpha1.AutoscalingSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.autoscaling.v1alpha1.Autoscaling = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.autoscaling.v1alpha1.Autoscaling, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.autoscaling.v1alpha1.Autoscaling.displayName = 'proto.performance.autoscaling.v1alpha1.Autoscaling';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.autoscaling.v1alpha1.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.autoscaling.v1alpha1.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata}
 */
proto.performance.autoscaling.v1alpha1.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.autoscaling.v1alpha1.Metadata;
  return proto.performance.autoscaling.v1alpha1.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.autoscaling.v1alpha1.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata}
 */
proto.performance.autoscaling.v1alpha1.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.autoscaling.v1alpha1.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.autoscaling.v1alpha1.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata} returns this
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata} returns this
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata} returns this
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * map<string, string> annotations = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.autoscaling.v1alpha1.Metadata} returns this
 */
proto.performance.autoscaling.v1alpha1.Metadata.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    container: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget;
  return proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContainer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string api_version = 1;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.getApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.setApiVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kind = 2;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string container = 4;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.getContainer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.prototype.setContainer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    metric: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule;
  return proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetric(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetric();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string metric = 1;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.getMetric = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.setMetric = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.autoscaling.v1alpha1.AutoscalingSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetRef: (f = msg.getTargetRef()) && proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.toObject(includeInstance, f),
    min: jspb.Message.getFieldWithDefault(msg, 2, 0),
    max: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pollingInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cooldownPeriod: jspb.Message.getFieldWithDefault(msg, 5, 0),
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.autoscaling.v1alpha1.AutoscalingSpec;
  return proto.performance.autoscaling.v1alpha1.AutoscalingSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget;
      reader.readMessage(value,proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.deserializeBinaryFromReader);
      msg.setTargetRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPollingInterval(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCooldownPeriod(value);
      break;
    case 6:
      var value = new proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule;
      reader.readMessage(value,proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.autoscaling.v1alpha1.AutoscalingSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget.serializeBinaryToWriter
    );
  }
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPollingInterval();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCooldownPeriod();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional AutoScalingSpecTarget target_ref = 1;
 * @return {?proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getTargetRef = function() {
  return /** @type{?proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget} */ (
    jspb.Message.getWrapperField(this, proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget, 1));
};


/**
 * @param {?proto.performance.autoscaling.v1alpha1.AutoScalingSpecTarget|undefined} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
*/
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setTargetRef = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.clearTargetRef = function() {
  return this.setTargetRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.hasTargetRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 min = 2;
 * @return {number}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setMin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 max = 3;
 * @return {number}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 polling_interval = 4;
 * @return {number}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getPollingInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setPollingInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 cooldown_period = 5;
 * @return {number}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getCooldownPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setCooldownPeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated AutoscalingSpecRule rules = 6;
 * @return {!Array<!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule>}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule, 6));
};


/**
 * @param {!Array<!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule>} value
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
*/
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule}
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.performance.autoscaling.v1alpha1.AutoscalingSpecRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.performance.autoscaling.v1alpha1.AutoscalingSpec} returns this
 */
proto.performance.autoscaling.v1alpha1.AutoscalingSpec.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.autoscaling.v1alpha1.Autoscaling.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.autoscaling.v1alpha1.Autoscaling} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.performance.autoscaling.v1alpha1.Metadata.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.performance.autoscaling.v1alpha1.AutoscalingSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.autoscaling.v1alpha1.Autoscaling;
  return proto.performance.autoscaling.v1alpha1.Autoscaling.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.autoscaling.v1alpha1.Autoscaling} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.performance.autoscaling.v1alpha1.Metadata;
      reader.readMessage(value,proto.performance.autoscaling.v1alpha1.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.performance.autoscaling.v1alpha1.AutoscalingSpec;
      reader.readMessage(value,proto.performance.autoscaling.v1alpha1.AutoscalingSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.autoscaling.v1alpha1.Autoscaling.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.autoscaling.v1alpha1.Autoscaling} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.performance.autoscaling.v1alpha1.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.performance.autoscaling.v1alpha1.AutoscalingSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional Metadata metadata = 1;
 * @return {?proto.performance.autoscaling.v1alpha1.Metadata}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.getMetadata = function() {
  return /** @type{?proto.performance.autoscaling.v1alpha1.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.performance.autoscaling.v1alpha1.Metadata, 1));
};


/**
 * @param {?proto.performance.autoscaling.v1alpha1.Metadata|undefined} value
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling} returns this
*/
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling} returns this
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AutoscalingSpec spec = 2;
 * @return {?proto.performance.autoscaling.v1alpha1.AutoscalingSpec}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.getSpec = function() {
  return /** @type{?proto.performance.autoscaling.v1alpha1.AutoscalingSpec} */ (
    jspb.Message.getWrapperField(this, proto.performance.autoscaling.v1alpha1.AutoscalingSpec, 2));
};


/**
 * @param {?proto.performance.autoscaling.v1alpha1.AutoscalingSpec|undefined} value
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling} returns this
*/
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.performance.autoscaling.v1alpha1.Autoscaling} returns this
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.performance.autoscaling.v1alpha1.Autoscaling.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.performance.autoscaling.v1alpha1);
