// source: performance/logs/v1alpha1/logs_agent_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var performance_logs_v1alpha1_logs_pb = require('../../../performance/logs/v1alpha1/logs_pb.js');
goog.object.extend(proto, performance_logs_v1alpha1_logs_pb);
goog.exportSymbol('proto.performance.logs.v1alpha1.Log', null, global);
goog.exportSymbol('proto.performance.logs.v1alpha1.LogKuebrnetesInfo', null, global);
goog.exportSymbol('proto.performance.logs.v1alpha1.SaveLogsRequest', null, global);
goog.exportSymbol('proto.performance.logs.v1alpha1.SaveLogsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.logs.v1alpha1.SaveLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.performance.logs.v1alpha1.SaveLogsRequest.repeatedFields_, null);
};
goog.inherits(proto.performance.logs.v1alpha1.SaveLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.logs.v1alpha1.SaveLogsRequest.displayName = 'proto.performance.logs.v1alpha1.SaveLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.logs.v1alpha1.SaveLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.logs.v1alpha1.SaveLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.logs.v1alpha1.SaveLogsResponse.displayName = 'proto.performance.logs.v1alpha1.SaveLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.logs.v1alpha1.Log = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.logs.v1alpha1.Log, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.logs.v1alpha1.Log.displayName = 'proto.performance.logs.v1alpha1.Log';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.performance.logs.v1alpha1.LogKuebrnetesInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.performance.logs.v1alpha1.LogKuebrnetesInfo.displayName = 'proto.performance.logs.v1alpha1.LogKuebrnetesInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.logs.v1alpha1.SaveLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.logs.v1alpha1.SaveLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metaMap: (f = msg.getMetaMap()) ? f.toObject(includeInstance, undefined) : [],
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.performance.logs.v1alpha1.Log.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.logs.v1alpha1.SaveLogsRequest;
  return proto.performance.logs.v1alpha1.SaveLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.logs.v1alpha1.SaveLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = msg.getMetaMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = new proto.performance.logs.v1alpha1.Log;
      reader.readMessage(value,proto.performance.logs.v1alpha1.Log.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.logs.v1alpha1.SaveLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.logs.v1alpha1.SaveLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetaMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.performance.logs.v1alpha1.Log.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest} returns this
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> meta = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.getMetaMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest} returns this
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.clearMetaMap = function() {
  this.getMetaMap().clear();
  return this;};


/**
 * repeated Log logs = 3;
 * @return {!Array<!proto.performance.logs.v1alpha1.Log>}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.performance.logs.v1alpha1.Log>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.performance.logs.v1alpha1.Log, 3));
};


/**
 * @param {!Array<!proto.performance.logs.v1alpha1.Log>} value
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest} returns this
*/
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.setLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.performance.logs.v1alpha1.Log=} opt_value
 * @param {number=} opt_index
 * @return {!proto.performance.logs.v1alpha1.Log}
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.performance.logs.v1alpha1.Log, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsRequest} returns this
 */
proto.performance.logs.v1alpha1.SaveLogsRequest.prototype.clearLogsList = function() {
  return this.setLogsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.logs.v1alpha1.SaveLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.logs.v1alpha1.SaveLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsResponse}
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.logs.v1alpha1.SaveLogsResponse;
  return proto.performance.logs.v1alpha1.SaveLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.logs.v1alpha1.SaveLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.logs.v1alpha1.SaveLogsResponse}
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.logs.v1alpha1.SaveLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.logs.v1alpha1.SaveLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.performance.logs.v1alpha1.SaveLogsResponse} returns this
 */
proto.performance.logs.v1alpha1.SaveLogsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.logs.v1alpha1.Log.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.logs.v1alpha1.Log.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.logs.v1alpha1.Log} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.Log.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    log: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kubernetes: (f = msg.getKubernetes()) && proto.performance.logs.v1alpha1.LogKuebrnetesInfo.toObject(includeInstance, f),
    logId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.logs.v1alpha1.Log}
 */
proto.performance.logs.v1alpha1.Log.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.logs.v1alpha1.Log;
  return proto.performance.logs.v1alpha1.Log.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.logs.v1alpha1.Log} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.logs.v1alpha1.Log}
 */
proto.performance.logs.v1alpha1.Log.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 3:
      var value = new proto.performance.logs.v1alpha1.LogKuebrnetesInfo;
      reader.readMessage(value,proto.performance.logs.v1alpha1.LogKuebrnetesInfo.deserializeBinaryFromReader);
      msg.setKubernetes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.logs.v1alpha1.Log.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.logs.v1alpha1.Log.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.logs.v1alpha1.Log} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.Log.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLog();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKubernetes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.performance.logs.v1alpha1.LogKuebrnetesInfo.serializeBinaryToWriter
    );
  }
  f = message.getLogId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional double date = 1;
 * @return {number}
 */
proto.performance.logs.v1alpha1.Log.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.performance.logs.v1alpha1.Log} returns this
 */
proto.performance.logs.v1alpha1.Log.prototype.setDate = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string log = 2;
 * @return {string}
 */
proto.performance.logs.v1alpha1.Log.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.Log} returns this
 */
proto.performance.logs.v1alpha1.Log.prototype.setLog = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional LogKuebrnetesInfo kubernetes = 3;
 * @return {?proto.performance.logs.v1alpha1.LogKuebrnetesInfo}
 */
proto.performance.logs.v1alpha1.Log.prototype.getKubernetes = function() {
  return /** @type{?proto.performance.logs.v1alpha1.LogKuebrnetesInfo} */ (
    jspb.Message.getWrapperField(this, proto.performance.logs.v1alpha1.LogKuebrnetesInfo, 3));
};


/**
 * @param {?proto.performance.logs.v1alpha1.LogKuebrnetesInfo|undefined} value
 * @return {!proto.performance.logs.v1alpha1.Log} returns this
*/
proto.performance.logs.v1alpha1.Log.prototype.setKubernetes = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.performance.logs.v1alpha1.Log} returns this
 */
proto.performance.logs.v1alpha1.Log.prototype.clearKubernetes = function() {
  return this.setKubernetes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.performance.logs.v1alpha1.Log.prototype.hasKubernetes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string log_id = 4;
 * @return {string}
 */
proto.performance.logs.v1alpha1.Log.prototype.getLogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.Log} returns this
 */
proto.performance.logs.v1alpha1.Log.prototype.setLogId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.performance.logs.v1alpha1.LogKuebrnetesInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    podName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespaceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    podId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    host: jspb.Message.getFieldWithDefault(msg, 6, ""),
    containerName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    dockerId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    containerHash: jspb.Message.getFieldWithDefault(msg, 10, ""),
    containerImage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    ownerName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    ownerKubernetesUid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    ownerKind: jspb.Message.getFieldWithDefault(msg, 14, ""),
    ownerApiVersion: jspb.Message.getFieldWithDefault(msg, 15, ""),
    status: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.performance.logs.v1alpha1.LogKuebrnetesInfo;
  return proto.performance.logs.v1alpha1.LogKuebrnetesInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPodName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespaceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPodId(value);
      break;
    case 4:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerHash(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerImage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerKubernetesUid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerKind(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerApiVersion(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.performance.logs.v1alpha1.LogKuebrnetesInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPodName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespaceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPodId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getContainerName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDockerId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContainerHash();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getContainerImage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOwnerName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOwnerKubernetesUid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getOwnerKind();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getOwnerApiVersion();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string pod_name = 1;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getPodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setPodName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace_name = 2;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getNamespaceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setNamespaceName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pod_id = 3;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getPodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setPodId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> labels = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * map<string, string> annotations = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;};


/**
 * optional string host = 6;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string container_name = 7;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getContainerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setContainerName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string docker_id = 8;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getDockerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setDockerId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string container_hash = 10;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getContainerHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setContainerHash = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string container_image = 11;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getContainerImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setContainerImage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string owner_name = 12;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getOwnerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setOwnerName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string owner_kubernetes_uid = 13;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getOwnerKubernetesUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setOwnerKubernetesUid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string owner_kind = 14;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getOwnerKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setOwnerKind = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string owner_api_version = 15;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getOwnerApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setOwnerApiVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string status = 16;
 * @return {string}
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.performance.logs.v1alpha1.LogKuebrnetesInfo} returns this
 */
proto.performance.logs.v1alpha1.LogKuebrnetesInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


goog.object.extend(exports, proto.performance.logs.v1alpha1);
