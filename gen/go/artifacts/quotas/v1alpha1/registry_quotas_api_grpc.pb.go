// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: artifacts/quotas/v1alpha1/registry_quotas_api.proto

package v1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// RegistryQuotasAPIServiceClient is the client API for RegistryQuotasAPIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RegistryQuotasAPIServiceClient interface {
	ListQuotasRegistry(ctx context.Context, in *ListQuotasRegistryRequest, opts ...grpc.CallOption) (*ListQuotasRegistryResponse, error)
	UpdateQuotaRegistry(ctx context.Context, in *UpdateQuotaRegistryRequest, opts ...grpc.CallOption) (*UpdateQuotaRegistryResponse, error)
	ListQuotaArtifactRegistry(ctx context.Context, in *ListQuotaArtifactRegistryRequest, opts ...grpc.CallOption) (*ListQuotaArtifactRegistryResponse, error)
}

type registryQuotasAPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRegistryQuotasAPIServiceClient(cc grpc.ClientConnInterface) RegistryQuotasAPIServiceClient {
	return &registryQuotasAPIServiceClient{cc}
}

func (c *registryQuotasAPIServiceClient) ListQuotasRegistry(ctx context.Context, in *ListQuotasRegistryRequest, opts ...grpc.CallOption) (*ListQuotasRegistryResponse, error) {
	out := new(ListQuotasRegistryResponse)
	err := c.cc.Invoke(ctx, "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/ListQuotasRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryQuotasAPIServiceClient) UpdateQuotaRegistry(ctx context.Context, in *UpdateQuotaRegistryRequest, opts ...grpc.CallOption) (*UpdateQuotaRegistryResponse, error) {
	out := new(UpdateQuotaRegistryResponse)
	err := c.cc.Invoke(ctx, "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/UpdateQuotaRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryQuotasAPIServiceClient) ListQuotaArtifactRegistry(ctx context.Context, in *ListQuotaArtifactRegistryRequest, opts ...grpc.CallOption) (*ListQuotaArtifactRegistryResponse, error) {
	out := new(ListQuotaArtifactRegistryResponse)
	err := c.cc.Invoke(ctx, "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/ListQuotaArtifactRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistryQuotasAPIServiceServer is the server API for RegistryQuotasAPIService service.
// All implementations should embed UnimplementedRegistryQuotasAPIServiceServer
// for forward compatibility
type RegistryQuotasAPIServiceServer interface {
	ListQuotasRegistry(context.Context, *ListQuotasRegistryRequest) (*ListQuotasRegistryResponse, error)
	UpdateQuotaRegistry(context.Context, *UpdateQuotaRegistryRequest) (*UpdateQuotaRegistryResponse, error)
	ListQuotaArtifactRegistry(context.Context, *ListQuotaArtifactRegistryRequest) (*ListQuotaArtifactRegistryResponse, error)
}

// UnimplementedRegistryQuotasAPIServiceServer should be embedded to have forward compatible implementations.
type UnimplementedRegistryQuotasAPIServiceServer struct {
}

func (UnimplementedRegistryQuotasAPIServiceServer) ListQuotasRegistry(context.Context, *ListQuotasRegistryRequest) (*ListQuotasRegistryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQuotasRegistry not implemented")
}
func (UnimplementedRegistryQuotasAPIServiceServer) UpdateQuotaRegistry(context.Context, *UpdateQuotaRegistryRequest) (*UpdateQuotaRegistryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQuotaRegistry not implemented")
}
func (UnimplementedRegistryQuotasAPIServiceServer) ListQuotaArtifactRegistry(context.Context, *ListQuotaArtifactRegistryRequest) (*ListQuotaArtifactRegistryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQuotaArtifactRegistry not implemented")
}

// UnsafeRegistryQuotasAPIServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RegistryQuotasAPIServiceServer will
// result in compilation errors.
type UnsafeRegistryQuotasAPIServiceServer interface {
	mustEmbedUnimplementedRegistryQuotasAPIServiceServer()
}

func RegisterRegistryQuotasAPIServiceServer(s grpc.ServiceRegistrar, srv RegistryQuotasAPIServiceServer) {
	s.RegisterService(&RegistryQuotasAPIService_ServiceDesc, srv)
}

func _RegistryQuotasAPIService_ListQuotasRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQuotasRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryQuotasAPIServiceServer).ListQuotasRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/ListQuotasRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryQuotasAPIServiceServer).ListQuotasRegistry(ctx, req.(*ListQuotasRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryQuotasAPIService_UpdateQuotaRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQuotaRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryQuotasAPIServiceServer).UpdateQuotaRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/UpdateQuotaRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryQuotasAPIServiceServer).UpdateQuotaRegistry(ctx, req.(*UpdateQuotaRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryQuotasAPIService_ListQuotaArtifactRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQuotaArtifactRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryQuotasAPIServiceServer).ListQuotaArtifactRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/artifacts.quotas.v1alpha1.RegistryQuotasAPIService/ListQuotaArtifactRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryQuotasAPIServiceServer).ListQuotaArtifactRegistry(ctx, req.(*ListQuotaArtifactRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RegistryQuotasAPIService_ServiceDesc is the grpc.ServiceDesc for RegistryQuotasAPIService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RegistryQuotasAPIService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "artifacts.quotas.v1alpha1.RegistryQuotasAPIService",
	HandlerType: (*RegistryQuotasAPIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListQuotasRegistry",
			Handler:    _RegistryQuotasAPIService_ListQuotasRegistry_Handler,
		},
		{
			MethodName: "UpdateQuotaRegistry",
			Handler:    _RegistryQuotasAPIService_UpdateQuotaRegistry_Handler,
		},
		{
			MethodName: "ListQuotaArtifactRegistry",
			Handler:    _RegistryQuotasAPIService_ListQuotaArtifactRegistry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "artifacts/quotas/v1alpha1/registry_quotas_api.proto",
}
