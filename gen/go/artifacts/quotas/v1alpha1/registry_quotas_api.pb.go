// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: artifacts/quotas/v1alpha1/registry_quotas_api.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListQuotaArtifactRegistryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotasRegistry []*QuotasRegistry `protobuf:"bytes,1,rep,name=quotas_registry,json=quotasRegistry,proto3" json:"quotas_registry,omitempty"`
	Status         string            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListQuotaArtifactRegistryResponse) Reset() {
	*x = ListQuotaArtifactRegistryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaArtifactRegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaArtifactRegistryResponse) ProtoMessage() {}

func (x *ListQuotaArtifactRegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaArtifactRegistryResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaArtifactRegistryResponse) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{0}
}

func (x *ListQuotaArtifactRegistryResponse) GetQuotasRegistry() []*QuotasRegistry {
	if x != nil {
		return x.QuotasRegistry
	}
	return nil
}

func (x *ListQuotaArtifactRegistryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateQuotaRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotaRegistry *QuotasRegistry `protobuf:"bytes,1,opt,name=quota_registry,json=quotaRegistry,proto3" json:"quota_registry,omitempty"`
}

func (x *UpdateQuotaRegistryRequest) Reset() {
	*x = UpdateQuotaRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuotaRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuotaRegistryRequest) ProtoMessage() {}

func (x *UpdateQuotaRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuotaRegistryRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuotaRegistryRequest) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateQuotaRegistryRequest) GetQuotaRegistry() *QuotasRegistry {
	if x != nil {
		return x.QuotaRegistry
	}
	return nil
}

type UpdateQuotaRegistryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotaRegistry *QuotasRegistry `protobuf:"bytes,1,opt,name=quota_registry,json=quotaRegistry,proto3" json:"quota_registry,omitempty"`
	Status        string          `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateQuotaRegistryResponse) Reset() {
	*x = UpdateQuotaRegistryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuotaRegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuotaRegistryResponse) ProtoMessage() {}

func (x *UpdateQuotaRegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuotaRegistryResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuotaRegistryResponse) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateQuotaRegistryResponse) GetQuotaRegistry() *QuotasRegistry {
	if x != nil {
		return x.QuotaRegistry
	}
	return nil
}

func (x *UpdateQuotaRegistryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListQuotasRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId uint32 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ProjectId      uint32 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RepositoryName string `protobuf:"bytes,3,opt,name=repository_name,json=repositoryName,proto3" json:"repository_name,omitempty"`
	Query          string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Page           uint32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       uint32 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sort           string `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
	ReferenceId    string `protobuf:"bytes,8,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *ListQuotasRegistryRequest) Reset() {
	*x = ListQuotasRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotasRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotasRegistryRequest) ProtoMessage() {}

func (x *ListQuotasRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotasRegistryRequest.ProtoReflect.Descriptor instead.
func (*ListQuotasRegistryRequest) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListQuotasRegistryRequest) GetOrganizationId() uint32 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *ListQuotasRegistryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListQuotasRegistryRequest) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

func (x *ListQuotasRegistryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListQuotasRegistryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotasRegistryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQuotasRegistryRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListQuotasRegistryRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

type ListQuotaArtifactRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId      uint32 `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ProjectId           uint32 `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RepositoryName      string `protobuf:"bytes,4,opt,name=repository_name,json=repositoryName,proto3" json:"repository_name,omitempty"`
	Query               string `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Page                uint32 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize            uint32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sort                string `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
	ReferenceId         string `protobuf:"bytes,9,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	ProjectName         string `protobuf:"bytes,10,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	WithTag             bool   `protobuf:"varint,11,opt,name=with_tag,json=withTag,proto3" json:"with_tag,omitempty"`
	WithLabel           bool   `protobuf:"varint,12,opt,name=with_label,json=withLabel,proto3" json:"with_label,omitempty"`
	WithScanOverview    bool   `protobuf:"varint,13,opt,name=with_scan_overview,json=withScanOverview,proto3" json:"with_scan_overview,omitempty"`
	WithSignature       bool   `protobuf:"varint,14,opt,name=with_signature,json=withSignature,proto3" json:"with_signature,omitempty"`
	WithImmutableStatus bool   `protobuf:"varint,15,opt,name=with_immutable_status,json=withImmutableStatus,proto3" json:"with_immutable_status,omitempty"`
	WithAccessory       bool   `protobuf:"varint,16,opt,name=with_accessory,json=withAccessory,proto3" json:"with_accessory,omitempty"`
}

func (x *ListQuotaArtifactRegistryRequest) Reset() {
	*x = ListQuotaArtifactRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaArtifactRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaArtifactRegistryRequest) ProtoMessage() {}

func (x *ListQuotaArtifactRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaArtifactRegistryRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaArtifactRegistryRequest) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListQuotaArtifactRegistryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetOrganizationId() uint32 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *ListQuotaArtifactRegistryRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListQuotaArtifactRegistryRequest) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaArtifactRegistryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQuotaArtifactRegistryRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ListQuotaArtifactRegistryRequest) GetWithTag() bool {
	if x != nil {
		return x.WithTag
	}
	return false
}

func (x *ListQuotaArtifactRegistryRequest) GetWithLabel() bool {
	if x != nil {
		return x.WithLabel
	}
	return false
}

func (x *ListQuotaArtifactRegistryRequest) GetWithScanOverview() bool {
	if x != nil {
		return x.WithScanOverview
	}
	return false
}

func (x *ListQuotaArtifactRegistryRequest) GetWithSignature() bool {
	if x != nil {
		return x.WithSignature
	}
	return false
}

func (x *ListQuotaArtifactRegistryRequest) GetWithImmutableStatus() bool {
	if x != nil {
		return x.WithImmutableStatus
	}
	return false
}

func (x *ListQuotaArtifactRegistryRequest) GetWithAccessory() bool {
	if x != nil {
		return x.WithAccessory
	}
	return false
}

type ListQuotasRegistryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotasRegistry []*QuotasRegistry `protobuf:"bytes,1,rep,name=quotas_registry,json=quotasRegistry,proto3" json:"quotas_registry,omitempty"`
	Status         string            `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListQuotasRegistryResponse) Reset() {
	*x = ListQuotasRegistryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotasRegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotasRegistryResponse) ProtoMessage() {}

func (x *ListQuotasRegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotasRegistryResponse.ProtoReflect.Descriptor instead.
func (*ListQuotasRegistryResponse) Descriptor() ([]byte, []int) {
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListQuotasRegistryResponse) GetQuotasRegistry() []*QuotasRegistry {
	if x != nil {
		return x.QuotasRegistry
	}
	return nil
}

func (x *ListQuotasRegistryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_artifacts_quotas_v1alpha1_registry_quotas_api_proto protoreflect.FileDescriptor

var file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDesc = []byte{
	0x0a, 0x33, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x1a, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x02,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xae, 0x04, 0x0a, 0x20, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x69, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x53, 0x63, 0x61,
	0x6e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69,
	0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x0e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xbe, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x34, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x35, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb9, 0x01, 0x0a, 0x23, 0x69, 0x6f, 0x2e, 0x63,
	0x75, 0x65, 0x6d, 0x62, 0x79, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42,
	0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x50, 0x49, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x75, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x63, 0x63, 0x70,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x50, 0x58, 0xaa, 0x02, 0x19, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x56,
	0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x19, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x5c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x41, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescOnce sync.Once
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescData = file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDesc
)

func file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescGZIP() []byte {
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescOnce.Do(func() {
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescData)
	})
	return file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDescData
}

var file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_goTypes = []interface{}{
	(*ListQuotaArtifactRegistryResponse)(nil), // 0: artifacts.quotas.v1alpha1.ListQuotaArtifactRegistryResponse
	(*UpdateQuotaRegistryRequest)(nil),        // 1: artifacts.quotas.v1alpha1.UpdateQuotaRegistryRequest
	(*UpdateQuotaRegistryResponse)(nil),       // 2: artifacts.quotas.v1alpha1.UpdateQuotaRegistryResponse
	(*ListQuotasRegistryRequest)(nil),         // 3: artifacts.quotas.v1alpha1.ListQuotasRegistryRequest
	(*ListQuotaArtifactRegistryRequest)(nil),  // 4: artifacts.quotas.v1alpha1.ListQuotaArtifactRegistryRequest
	(*ListQuotasRegistryResponse)(nil),        // 5: artifacts.quotas.v1alpha1.ListQuotasRegistryResponse
	(*QuotasRegistry)(nil),                    // 6: artifacts.quotas.v1alpha1.QuotasRegistry
}
var file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_depIdxs = []int32{
	6, // 0: artifacts.quotas.v1alpha1.ListQuotaArtifactRegistryResponse.quotas_registry:type_name -> artifacts.quotas.v1alpha1.QuotasRegistry
	6, // 1: artifacts.quotas.v1alpha1.UpdateQuotaRegistryRequest.quota_registry:type_name -> artifacts.quotas.v1alpha1.QuotasRegistry
	6, // 2: artifacts.quotas.v1alpha1.UpdateQuotaRegistryResponse.quota_registry:type_name -> artifacts.quotas.v1alpha1.QuotasRegistry
	6, // 3: artifacts.quotas.v1alpha1.ListQuotasRegistryResponse.quotas_registry:type_name -> artifacts.quotas.v1alpha1.QuotasRegistry
	3, // 4: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.ListQuotasRegistry:input_type -> artifacts.quotas.v1alpha1.ListQuotasRegistryRequest
	1, // 5: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.UpdateQuotaRegistry:input_type -> artifacts.quotas.v1alpha1.UpdateQuotaRegistryRequest
	4, // 6: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.ListQuotaArtifactRegistry:input_type -> artifacts.quotas.v1alpha1.ListQuotaArtifactRegistryRequest
	5, // 7: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.ListQuotasRegistry:output_type -> artifacts.quotas.v1alpha1.ListQuotasRegistryResponse
	2, // 8: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.UpdateQuotaRegistry:output_type -> artifacts.quotas.v1alpha1.UpdateQuotaRegistryResponse
	0, // 9: artifacts.quotas.v1alpha1.RegistryQuotasAPIService.ListQuotaArtifactRegistry:output_type -> artifacts.quotas.v1alpha1.ListQuotaArtifactRegistryResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_init() }
func file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_init() {
	if File_artifacts_quotas_v1alpha1_registry_quotas_api_proto != nil {
		return
	}
	file_artifacts_quotas_v1alpha1_registry_quotas_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotaArtifactRegistryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuotaRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuotaRegistryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotasRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotaArtifactRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotasRegistryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_goTypes,
		DependencyIndexes: file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_depIdxs,
		MessageInfos:      file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_msgTypes,
	}.Build()
	File_artifacts_quotas_v1alpha1_registry_quotas_api_proto = out.File
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_rawDesc = nil
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_goTypes = nil
	file_artifacts_quotas_v1alpha1_registry_quotas_api_proto_depIdxs = nil
}
