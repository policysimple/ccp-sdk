// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: blockchain/thepower/v1alpha1/thepower_api.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request messages
type CreateTpChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpChain *TpChain `protobuf:"bytes,1,opt,name=tp_chain,json=tpChain,proto3" json:"tp_chain,omitempty"`
}

func (x *CreateTpChainRequest) Reset() {
	*x = CreateTpChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTpChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTpChainRequest) ProtoMessage() {}

func (x *CreateTpChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTpChainRequest.ProtoReflect.Descriptor instead.
func (*CreateTpChainRequest) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTpChainRequest) GetTpChain() *TpChain {
	if x != nil {
		return x.TpChain
	}
	return nil
}

type GetTpChainsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetTpChainsByUserIdRequest) Reset() {
	*x = GetTpChainsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainsByUserIdRequest) ProtoMessage() {}

func (x *GetTpChainsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetTpChainsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetTpChainsByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetTpChainByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTpChainByIdRequest) Reset() {
	*x = GetTpChainByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainByIdRequest) ProtoMessage() {}

func (x *GetTpChainByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTpChainByIdRequest) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetTpChainByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTpChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emtpy *emptypb.Empty `protobuf:"bytes,1,opt,name=emtpy,proto3" json:"emtpy,omitempty"`
}

func (x *GetTpChainsRequest) Reset() {
	*x = GetTpChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainsRequest) ProtoMessage() {}

func (x *GetTpChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainsRequest.ProtoReflect.Descriptor instead.
func (*GetTpChainsRequest) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetTpChainsRequest) GetEmtpy() *emptypb.Empty {
	if x != nil {
		return x.Emtpy
	}
	return nil
}

// Response messages
type CreateTpChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpChain *TpChain `protobuf:"bytes,1,opt,name=tp_chain,json=tpChain,proto3" json:"tp_chain,omitempty"`
}

func (x *CreateTpChainResponse) Reset() {
	*x = CreateTpChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTpChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTpChainResponse) ProtoMessage() {}

func (x *CreateTpChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTpChainResponse.ProtoReflect.Descriptor instead.
func (*CreateTpChainResponse) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTpChainResponse) GetTpChain() *TpChain {
	if x != nil {
		return x.TpChain
	}
	return nil
}

type GetTpChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpChains []*TpChain `protobuf:"bytes,1,rep,name=tp_chains,json=tpChains,proto3" json:"tp_chains,omitempty"`
}

func (x *GetTpChainsResponse) Reset() {
	*x = GetTpChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainsResponse) ProtoMessage() {}

func (x *GetTpChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainsResponse.ProtoReflect.Descriptor instead.
func (*GetTpChainsResponse) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetTpChainsResponse) GetTpChains() []*TpChain {
	if x != nil {
		return x.TpChains
	}
	return nil
}

type GetTpChainsByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpChains []*TpChain `protobuf:"bytes,1,rep,name=tp_chains,json=tpChains,proto3" json:"tp_chains,omitempty"`
}

func (x *GetTpChainsByUserIdResponse) Reset() {
	*x = GetTpChainsByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainsByUserIdResponse) ProtoMessage() {}

func (x *GetTpChainsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetTpChainsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetTpChainsByUserIdResponse) GetTpChains() []*TpChain {
	if x != nil {
		return x.TpChains
	}
	return nil
}

type GetTpChainByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TpChain *TpChain `protobuf:"bytes,1,opt,name=tp_chain,json=tpChain,proto3" json:"tp_chain,omitempty"`
}

func (x *GetTpChainByIdResponse) Reset() {
	*x = GetTpChainByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTpChainByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTpChainByIdResponse) ProtoMessage() {}

func (x *GetTpChainByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTpChainByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTpChainByIdResponse) Descriptor() ([]byte, []int) {
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetTpChainByIdResponse) GetTpChain() *TpChain {
	if x != nil {
		return x.TpChain
	}
	return nil
}

var File_blockchain_thepower_v1alpha1_thepower_api_proto protoreflect.FileDescriptor

var file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x65,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74,
	0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68,
	0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x2b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x68, 0x65, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x68,
	0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x74, 0x70, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6d, 0x74,
	0x70, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x05, 0x65, 0x6d, 0x74, 0x70, 0x79, 0x22, 0x59, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x74, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x74, 0x70, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x70, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x08, 0x74, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x61, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09,
	0x74, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x08, 0x74, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x70,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x70, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x07, 0x74, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x32, 0x93, 0x04, 0x0a,
	0x19, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x38, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68,
	0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x33, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x70, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x75, 0x65, 0x6d, 0x62, 0x79, 0x2f, 0x63, 0x63, 0x70, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x74, 0x68, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescOnce sync.Once
	file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescData = file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDesc
)

func file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescGZIP() []byte {
	file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescOnce.Do(func() {
		file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescData)
	})
	return file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDescData
}

var file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_blockchain_thepower_v1alpha1_thepower_api_proto_goTypes = []interface{}{
	(*CreateTpChainRequest)(nil),        // 0: blockchain.thepower.v1alpha1.CreateTpChainRequest
	(*GetTpChainsByUserIdRequest)(nil),  // 1: blockchain.thepower.v1alpha1.GetTpChainsByUserIdRequest
	(*GetTpChainByIdRequest)(nil),       // 2: blockchain.thepower.v1alpha1.GetTpChainByIdRequest
	(*GetTpChainsRequest)(nil),          // 3: blockchain.thepower.v1alpha1.GetTpChainsRequest
	(*CreateTpChainResponse)(nil),       // 4: blockchain.thepower.v1alpha1.CreateTpChainResponse
	(*GetTpChainsResponse)(nil),         // 5: blockchain.thepower.v1alpha1.GetTpChainsResponse
	(*GetTpChainsByUserIdResponse)(nil), // 6: blockchain.thepower.v1alpha1.GetTpChainsByUserIdResponse
	(*GetTpChainByIdResponse)(nil),      // 7: blockchain.thepower.v1alpha1.GetTpChainByIdResponse
	(*TpChain)(nil),                     // 8: blockchain.thepower.v1alpha1.TpChain
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_blockchain_thepower_v1alpha1_thepower_api_proto_depIdxs = []int32{
	8,  // 0: blockchain.thepower.v1alpha1.CreateTpChainRequest.tp_chain:type_name -> blockchain.thepower.v1alpha1.TpChain
	9,  // 1: blockchain.thepower.v1alpha1.GetTpChainsRequest.emtpy:type_name -> google.protobuf.Empty
	8,  // 2: blockchain.thepower.v1alpha1.CreateTpChainResponse.tp_chain:type_name -> blockchain.thepower.v1alpha1.TpChain
	8,  // 3: blockchain.thepower.v1alpha1.GetTpChainsResponse.tp_chains:type_name -> blockchain.thepower.v1alpha1.TpChain
	8,  // 4: blockchain.thepower.v1alpha1.GetTpChainsByUserIdResponse.tp_chains:type_name -> blockchain.thepower.v1alpha1.TpChain
	8,  // 5: blockchain.thepower.v1alpha1.GetTpChainByIdResponse.tp_chain:type_name -> blockchain.thepower.v1alpha1.TpChain
	0,  // 6: blockchain.thepower.v1alpha1.BlockchainThePowerService.CreateTpChain:input_type -> blockchain.thepower.v1alpha1.CreateTpChainRequest
	3,  // 7: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChains:input_type -> blockchain.thepower.v1alpha1.GetTpChainsRequest
	1,  // 8: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChainsByUserId:input_type -> blockchain.thepower.v1alpha1.GetTpChainsByUserIdRequest
	2,  // 9: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChainById:input_type -> blockchain.thepower.v1alpha1.GetTpChainByIdRequest
	4,  // 10: blockchain.thepower.v1alpha1.BlockchainThePowerService.CreateTpChain:output_type -> blockchain.thepower.v1alpha1.CreateTpChainResponse
	5,  // 11: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChains:output_type -> blockchain.thepower.v1alpha1.GetTpChainsResponse
	6,  // 12: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChainsByUserId:output_type -> blockchain.thepower.v1alpha1.GetTpChainsByUserIdResponse
	7,  // 13: blockchain.thepower.v1alpha1.BlockchainThePowerService.GetTpChainById:output_type -> blockchain.thepower.v1alpha1.GetTpChainByIdResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_blockchain_thepower_v1alpha1_thepower_api_proto_init() }
func file_blockchain_thepower_v1alpha1_thepower_api_proto_init() {
	if File_blockchain_thepower_v1alpha1_thepower_api_proto != nil {
		return
	}
	file_blockchain_thepower_v1alpha1_thepower_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTpChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTpChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainsByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTpChainByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockchain_thepower_v1alpha1_thepower_api_proto_goTypes,
		DependencyIndexes: file_blockchain_thepower_v1alpha1_thepower_api_proto_depIdxs,
		MessageInfos:      file_blockchain_thepower_v1alpha1_thepower_api_proto_msgTypes,
	}.Build()
	File_blockchain_thepower_v1alpha1_thepower_api_proto = out.File
	file_blockchain_thepower_v1alpha1_thepower_api_proto_rawDesc = nil
	file_blockchain_thepower_v1alpha1_thepower_api_proto_goTypes = nil
	file_blockchain_thepower_v1alpha1_thepower_api_proto_depIdxs = nil
}
