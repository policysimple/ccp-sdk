// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package logsv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// LogsAgentAPIServiceClient is the client API for LogsAgentAPIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LogsAgentAPIServiceClient interface {
	SaveLogs(ctx context.Context, opts ...grpc.CallOption) (LogsAgentAPIService_SaveLogsClient, error)
}

type logsAgentAPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLogsAgentAPIServiceClient(cc grpc.ClientConnInterface) LogsAgentAPIServiceClient {
	return &logsAgentAPIServiceClient{cc}
}

func (c *logsAgentAPIServiceClient) SaveLogs(ctx context.Context, opts ...grpc.CallOption) (LogsAgentAPIService_SaveLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &LogsAgentAPIService_ServiceDesc.Streams[0], "/performance.logs.v1alpha1.LogsAgentAPIService/SaveLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &logsAgentAPIServiceSaveLogsClient{stream}
	return x, nil
}

type LogsAgentAPIService_SaveLogsClient interface {
	Send(*SaveLogsRequest) error
	Recv() (*SaveLogsResponse, error)
	grpc.ClientStream
}

type logsAgentAPIServiceSaveLogsClient struct {
	grpc.ClientStream
}

func (x *logsAgentAPIServiceSaveLogsClient) Send(m *SaveLogsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *logsAgentAPIServiceSaveLogsClient) Recv() (*SaveLogsResponse, error) {
	m := new(SaveLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogsAgentAPIServiceServer is the server API for LogsAgentAPIService service.
// All implementations should embed UnimplementedLogsAgentAPIServiceServer
// for forward compatibility
type LogsAgentAPIServiceServer interface {
	SaveLogs(LogsAgentAPIService_SaveLogsServer) error
}

// UnimplementedLogsAgentAPIServiceServer should be embedded to have forward compatible implementations.
type UnimplementedLogsAgentAPIServiceServer struct {
}

func (UnimplementedLogsAgentAPIServiceServer) SaveLogs(LogsAgentAPIService_SaveLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveLogs not implemented")
}

// UnsafeLogsAgentAPIServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LogsAgentAPIServiceServer will
// result in compilation errors.
type UnsafeLogsAgentAPIServiceServer interface {
	mustEmbedUnimplementedLogsAgentAPIServiceServer()
}

func RegisterLogsAgentAPIServiceServer(s grpc.ServiceRegistrar, srv LogsAgentAPIServiceServer) {
	s.RegisterService(&LogsAgentAPIService_ServiceDesc, srv)
}

func _LogsAgentAPIService_SaveLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LogsAgentAPIServiceServer).SaveLogs(&logsAgentAPIServiceSaveLogsServer{stream})
}

type LogsAgentAPIService_SaveLogsServer interface {
	Send(*SaveLogsResponse) error
	Recv() (*SaveLogsRequest, error)
	grpc.ServerStream
}

type logsAgentAPIServiceSaveLogsServer struct {
	grpc.ServerStream
}

func (x *logsAgentAPIServiceSaveLogsServer) Send(m *SaveLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *logsAgentAPIServiceSaveLogsServer) Recv() (*SaveLogsRequest, error) {
	m := new(SaveLogsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogsAgentAPIService_ServiceDesc is the grpc.ServiceDesc for LogsAgentAPIService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LogsAgentAPIService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "performance.logs.v1alpha1.LogsAgentAPIService",
	HandlerType: (*LogsAgentAPIServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveLogs",
			Handler:       _LogsAgentAPIService_SaveLogs_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "performance/logs/v1alpha1/logs_agent_api.proto",
}
