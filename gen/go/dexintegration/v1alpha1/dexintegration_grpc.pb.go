// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: dexintegration/v1alpha1/dexintegration.proto

package v1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DexIntegrationServiceClient is the client API for DexIntegrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DexIntegrationServiceClient interface {
	// Get Users Dex
	GetListUserDex(ctx context.Context, in *GetListUserDexRequest, opts ...grpc.CallOption) (*GetListUserDexResponse, error)
}

type dexIntegrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDexIntegrationServiceClient(cc grpc.ClientConnInterface) DexIntegrationServiceClient {
	return &dexIntegrationServiceClient{cc}
}

func (c *dexIntegrationServiceClient) GetListUserDex(ctx context.Context, in *GetListUserDexRequest, opts ...grpc.CallOption) (*GetListUserDexResponse, error) {
	out := new(GetListUserDexResponse)
	err := c.cc.Invoke(ctx, "/dexintegration.v1alpha1.DexIntegrationService/GetListUserDex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DexIntegrationServiceServer is the server API for DexIntegrationService service.
// All implementations should embed UnimplementedDexIntegrationServiceServer
// for forward compatibility
type DexIntegrationServiceServer interface {
	// Get Users Dex
	GetListUserDex(context.Context, *GetListUserDexRequest) (*GetListUserDexResponse, error)
}

// UnimplementedDexIntegrationServiceServer should be embedded to have forward compatible implementations.
type UnimplementedDexIntegrationServiceServer struct {
}

func (UnimplementedDexIntegrationServiceServer) GetListUserDex(context.Context, *GetListUserDexRequest) (*GetListUserDexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListUserDex not implemented")
}

// UnsafeDexIntegrationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DexIntegrationServiceServer will
// result in compilation errors.
type UnsafeDexIntegrationServiceServer interface {
	mustEmbedUnimplementedDexIntegrationServiceServer()
}

func RegisterDexIntegrationServiceServer(s grpc.ServiceRegistrar, srv DexIntegrationServiceServer) {
	s.RegisterService(&DexIntegrationService_ServiceDesc, srv)
}

func _DexIntegrationService_GetListUserDex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListUserDexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DexIntegrationServiceServer).GetListUserDex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dexintegration.v1alpha1.DexIntegrationService/GetListUserDex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DexIntegrationServiceServer).GetListUserDex(ctx, req.(*GetListUserDexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DexIntegrationService_ServiceDesc is the grpc.ServiceDesc for DexIntegrationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DexIntegrationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "dexintegration.v1alpha1.DexIntegrationService",
	HandlerType: (*DexIntegrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListUserDex",
			Handler:    _DexIntegrationService_GetListUserDex_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dexintegration/v1alpha1/dexintegration.proto",
}
