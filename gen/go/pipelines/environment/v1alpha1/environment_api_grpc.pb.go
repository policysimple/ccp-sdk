// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: pipelines/environment/v1alpha1/environment_api.proto

package environmentv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EnvinromentAPIServiceClient is the client API for EnvinromentAPIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EnvinromentAPIServiceClient interface {
	CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*CreateEnvironmentResponse, error)
}

type envinromentAPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEnvinromentAPIServiceClient(cc grpc.ClientConnInterface) EnvinromentAPIServiceClient {
	return &envinromentAPIServiceClient{cc}
}

func (c *envinromentAPIServiceClient) CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*CreateEnvironmentResponse, error) {
	out := new(CreateEnvironmentResponse)
	err := c.cc.Invoke(ctx, "/pipelines.environment.v1alpha1.EnvinromentAPIService/CreateEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvinromentAPIServiceServer is the server API for EnvinromentAPIService service.
// All implementations should embed UnimplementedEnvinromentAPIServiceServer
// for forward compatibility
type EnvinromentAPIServiceServer interface {
	CreateEnvironment(context.Context, *CreateEnvironmentRequest) (*CreateEnvironmentResponse, error)
}

// UnimplementedEnvinromentAPIServiceServer should be embedded to have forward compatible implementations.
type UnimplementedEnvinromentAPIServiceServer struct {
}

func (UnimplementedEnvinromentAPIServiceServer) CreateEnvironment(context.Context, *CreateEnvironmentRequest) (*CreateEnvironmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEnvironment not implemented")
}

// UnsafeEnvinromentAPIServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EnvinromentAPIServiceServer will
// result in compilation errors.
type UnsafeEnvinromentAPIServiceServer interface {
	mustEmbedUnimplementedEnvinromentAPIServiceServer()
}

func RegisterEnvinromentAPIServiceServer(s grpc.ServiceRegistrar, srv EnvinromentAPIServiceServer) {
	s.RegisterService(&EnvinromentAPIService_ServiceDesc, srv)
}

func _EnvinromentAPIService_CreateEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvinromentAPIServiceServer).CreateEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pipelines.environment.v1alpha1.EnvinromentAPIService/CreateEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvinromentAPIServiceServer).CreateEnvironment(ctx, req.(*CreateEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EnvinromentAPIService_ServiceDesc is the grpc.ServiceDesc for EnvinromentAPIService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EnvinromentAPIService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pipelines.environment.v1alpha1.EnvinromentAPIService",
	HandlerType: (*EnvinromentAPIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEnvironment",
			Handler:    _EnvinromentAPIService_CreateEnvironment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipelines/environment/v1alpha1/environment_api.proto",
}
