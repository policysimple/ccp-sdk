# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from performance.metrics.v1alpha1 import metrics_api_pb2 as performance_dot_metrics_dot_v1alpha1_dot_metrics__api__pb2


class MetricsAPIServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetMetrics = channel.unary_unary(
        '/performance.metrics.v1alpha1.MetricsAPIService/GetMetrics',
        request_serializer=performance_dot_metrics_dot_v1alpha1_dot_metrics__api__pb2.GetMetricsRequest.SerializeToString,
        response_deserializer=performance_dot_metrics_dot_v1alpha1_dot_metrics__api__pb2.GetMetricsResponse.FromString,
        )


class MetricsAPIServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetMetrics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetricsAPIServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetMetrics': grpc.unary_unary_rpc_method_handler(
          servicer.GetMetrics,
          request_deserializer=performance_dot_metrics_dot_v1alpha1_dot_metrics__api__pb2.GetMetricsRequest.FromString,
          response_serializer=performance_dot_metrics_dot_v1alpha1_dot_metrics__api__pb2.GetMetricsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'performance.metrics.v1alpha1.MetricsAPIService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
