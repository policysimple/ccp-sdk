# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from performance.logs.v1alpha1 import logs_agent_api_pb2 as performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2


class LogsAgentAPIServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SaveLogs = channel.stream_stream(
                '/performance.logs.v1alpha1.LogsAgentAPIService/SaveLogs',
                request_serializer=performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsRequest.SerializeToString,
                response_deserializer=performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsResponse.FromString,
                )


class LogsAgentAPIServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SaveLogs(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LogsAgentAPIServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SaveLogs': grpc.stream_stream_rpc_method_handler(
                    servicer.SaveLogs,
                    request_deserializer=performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsRequest.FromString,
                    response_serializer=performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'performance.logs.v1alpha1.LogsAgentAPIService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LogsAgentAPIService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SaveLogs(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/performance.logs.v1alpha1.LogsAgentAPIService/SaveLogs',
            performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsRequest.SerializeToString,
            performance_dot_logs_dot_v1alpha1_dot_logs__agent__api__pb2.SaveLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
