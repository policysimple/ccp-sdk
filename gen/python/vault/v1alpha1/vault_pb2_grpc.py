# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from vault.v1alpha1 import vault_pb2 as vault_dot_v1alpha1_dot_vault__pb2


class VaultServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.WriteSecret = channel.unary_unary(
        '/vault.v1alpha1.VaultService/WriteSecret',
        request_serializer=vault_dot_v1alpha1_dot_vault__pb2.WriteSecretRequest.SerializeToString,
        response_deserializer=vault_dot_v1alpha1_dot_vault__pb2.WriteSecretResponse.FromString,
        )
    self.ReadSecret = channel.unary_unary(
        '/vault.v1alpha1.VaultService/ReadSecret',
        request_serializer=vault_dot_v1alpha1_dot_vault__pb2.ReadSecretRequest.SerializeToString,
        response_deserializer=vault_dot_v1alpha1_dot_vault__pb2.ReadSecretResponse.FromString,
        )
    self.DeleteSecret = channel.unary_unary(
        '/vault.v1alpha1.VaultService/DeleteSecret',
        request_serializer=vault_dot_v1alpha1_dot_vault__pb2.DeleteSecretRequest.SerializeToString,
        response_deserializer=vault_dot_v1alpha1_dot_vault__pb2.DeleteSecretResponse.FromString,
        )
    self.ListSecrets = channel.unary_unary(
        '/vault.v1alpha1.VaultService/ListSecrets',
        request_serializer=vault_dot_v1alpha1_dot_vault__pb2.ListSecretsRequest.SerializeToString,
        response_deserializer=vault_dot_v1alpha1_dot_vault__pb2.ListSecretsResponse.FromString,
        )


class VaultServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def WriteSecret(self, request, context):
    """/CRUD
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReadSecret(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSecret(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListSecrets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VaultServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'WriteSecret': grpc.unary_unary_rpc_method_handler(
          servicer.WriteSecret,
          request_deserializer=vault_dot_v1alpha1_dot_vault__pb2.WriteSecretRequest.FromString,
          response_serializer=vault_dot_v1alpha1_dot_vault__pb2.WriteSecretResponse.SerializeToString,
      ),
      'ReadSecret': grpc.unary_unary_rpc_method_handler(
          servicer.ReadSecret,
          request_deserializer=vault_dot_v1alpha1_dot_vault__pb2.ReadSecretRequest.FromString,
          response_serializer=vault_dot_v1alpha1_dot_vault__pb2.ReadSecretResponse.SerializeToString,
      ),
      'DeleteSecret': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSecret,
          request_deserializer=vault_dot_v1alpha1_dot_vault__pb2.DeleteSecretRequest.FromString,
          response_serializer=vault_dot_v1alpha1_dot_vault__pb2.DeleteSecretResponse.SerializeToString,
      ),
      'ListSecrets': grpc.unary_unary_rpc_method_handler(
          servicer.ListSecrets,
          request_deserializer=vault_dot_v1alpha1_dot_vault__pb2.ListSecretsRequest.FromString,
          response_serializer=vault_dot_v1alpha1_dot_vault__pb2.ListSecretsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vault.v1alpha1.VaultService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
