# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from billing.v1alpha1 import billing_api_pb2 as billing_dot_v1alpha1_dot_billing__api__pb2


class BillingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ReadBilling = channel.unary_unary(
        '/billing.v1alpha1.BillingService/ReadBilling',
        request_serializer=billing_dot_v1alpha1_dot_billing__api__pb2.ReadBillingRequest.SerializeToString,
        response_deserializer=billing_dot_v1alpha1_dot_billing__api__pb2.ReadBillingResponse.FromString,
        )


class BillingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ReadBilling(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BillingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ReadBilling': grpc.unary_unary_rpc_method_handler(
          servicer.ReadBilling,
          request_deserializer=billing_dot_v1alpha1_dot_billing__api__pb2.ReadBillingRequest.FromString,
          response_serializer=billing_dot_v1alpha1_dot_billing__api__pb2.ReadBillingResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'billing.v1alpha1.BillingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
