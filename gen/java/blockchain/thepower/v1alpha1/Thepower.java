// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blockchain/thepower/v1alpha1/thepower.proto

package blockchain.thepower.v1alpha1;

public final class Thepower {
  private Thepower() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TpChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blockchain.thepower.v1alpha1.TpChain)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 chain_number = 1 [json_name = "chainNumber"];</code>
     * @return The chainNumber.
     */
    int getChainNumber();

    /**
     * <code>string user_id = 2 [json_name = "userId"];</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <code>string user_id = 2 [json_name = "userId"];</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode> 
        getChainNodesList();
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    blockchain.thepower.v1alpha1.Thepower.TpNode getChainNodes(int index);
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    int getChainNodesCount();
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    java.util.List<? extends blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder> 
        getChainNodesOrBuilderList();
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder getChainNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code blockchain.thepower.v1alpha1.TpChain}
   */
  public static final class TpChain extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:blockchain.thepower.v1alpha1.TpChain)
      TpChainOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TpChain.newBuilder() to construct.
    private TpChain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TpChain() {
      userId_ = "";
      chainNodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TpChain();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TpChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              chainNumber_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                chainNodes_ = new java.util.ArrayList<blockchain.thepower.v1alpha1.Thepower.TpNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              chainNodes_.add(
                  input.readMessage(blockchain.thepower.v1alpha1.Thepower.TpNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          chainNodes_ = java.util.Collections.unmodifiableList(chainNodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blockchain.thepower.v1alpha1.Thepower.TpChain.class, blockchain.thepower.v1alpha1.Thepower.TpChain.Builder.class);
    }

    public static final int CHAIN_NUMBER_FIELD_NUMBER = 1;
    private int chainNumber_;
    /**
     * <code>int32 chain_number = 1 [json_name = "chainNumber"];</code>
     * @return The chainNumber.
     */
    @java.lang.Override
    public int getChainNumber() {
      return chainNumber_;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object userId_;
    /**
     * <code>string user_id = 2 [json_name = "userId"];</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <code>string user_id = 2 [json_name = "userId"];</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHAIN_NODES_FIELD_NUMBER = 3;
    private java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode> chainNodes_;
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    @java.lang.Override
    public java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode> getChainNodesList() {
      return chainNodes_;
    }
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder> 
        getChainNodesOrBuilderList() {
      return chainNodes_;
    }
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    @java.lang.Override
    public int getChainNodesCount() {
      return chainNodes_.size();
    }
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    @java.lang.Override
    public blockchain.thepower.v1alpha1.Thepower.TpNode getChainNodes(int index) {
      return chainNodes_.get(index);
    }
    /**
     * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
     */
    @java.lang.Override
    public blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder getChainNodesOrBuilder(
        int index) {
      return chainNodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chainNumber_ != 0) {
        output.writeInt32(1, chainNumber_);
      }
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);
      }
      for (int i = 0; i < chainNodes_.size(); i++) {
        output.writeMessage(3, chainNodes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chainNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chainNumber_);
      }
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);
      }
      for (int i = 0; i < chainNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chainNodes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof blockchain.thepower.v1alpha1.Thepower.TpChain)) {
        return super.equals(obj);
      }
      blockchain.thepower.v1alpha1.Thepower.TpChain other = (blockchain.thepower.v1alpha1.Thepower.TpChain) obj;

      if (getChainNumber()
          != other.getChainNumber()) return false;
      if (!getUserId()
          .equals(other.getUserId())) return false;
      if (!getChainNodesList()
          .equals(other.getChainNodesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHAIN_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getChainNumber();
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      if (getChainNodesCount() > 0) {
        hash = (37 * hash) + CHAIN_NODES_FIELD_NUMBER;
        hash = (53 * hash) + getChainNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(blockchain.thepower.v1alpha1.Thepower.TpChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blockchain.thepower.v1alpha1.TpChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blockchain.thepower.v1alpha1.TpChain)
        blockchain.thepower.v1alpha1.Thepower.TpChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                blockchain.thepower.v1alpha1.Thepower.TpChain.class, blockchain.thepower.v1alpha1.Thepower.TpChain.Builder.class);
      }

      // Construct using blockchain.thepower.v1alpha1.Thepower.TpChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChainNodesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        chainNumber_ = 0;

        userId_ = "";

        if (chainNodesBuilder_ == null) {
          chainNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          chainNodesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor;
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpChain getDefaultInstanceForType() {
        return blockchain.thepower.v1alpha1.Thepower.TpChain.getDefaultInstance();
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpChain build() {
        blockchain.thepower.v1alpha1.Thepower.TpChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpChain buildPartial() {
        blockchain.thepower.v1alpha1.Thepower.TpChain result = new blockchain.thepower.v1alpha1.Thepower.TpChain(this);
        int from_bitField0_ = bitField0_;
        result.chainNumber_ = chainNumber_;
        result.userId_ = userId_;
        if (chainNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            chainNodes_ = java.util.Collections.unmodifiableList(chainNodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.chainNodes_ = chainNodes_;
        } else {
          result.chainNodes_ = chainNodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof blockchain.thepower.v1alpha1.Thepower.TpChain) {
          return mergeFrom((blockchain.thepower.v1alpha1.Thepower.TpChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(blockchain.thepower.v1alpha1.Thepower.TpChain other) {
        if (other == blockchain.thepower.v1alpha1.Thepower.TpChain.getDefaultInstance()) return this;
        if (other.getChainNumber() != 0) {
          setChainNumber(other.getChainNumber());
        }
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (chainNodesBuilder_ == null) {
          if (!other.chainNodes_.isEmpty()) {
            if (chainNodes_.isEmpty()) {
              chainNodes_ = other.chainNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChainNodesIsMutable();
              chainNodes_.addAll(other.chainNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.chainNodes_.isEmpty()) {
            if (chainNodesBuilder_.isEmpty()) {
              chainNodesBuilder_.dispose();
              chainNodesBuilder_ = null;
              chainNodes_ = other.chainNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              chainNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChainNodesFieldBuilder() : null;
            } else {
              chainNodesBuilder_.addAllMessages(other.chainNodes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        blockchain.thepower.v1alpha1.Thepower.TpChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (blockchain.thepower.v1alpha1.Thepower.TpChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chainNumber_ ;
      /**
       * <code>int32 chain_number = 1 [json_name = "chainNumber"];</code>
       * @return The chainNumber.
       */
      @java.lang.Override
      public int getChainNumber() {
        return chainNumber_;
      }
      /**
       * <code>int32 chain_number = 1 [json_name = "chainNumber"];</code>
       * @param value The chainNumber to set.
       * @return This builder for chaining.
       */
      public Builder setChainNumber(int value) {
        
        chainNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 chain_number = 1 [json_name = "chainNumber"];</code>
       * @return This builder for chaining.
       */
      public Builder clearChainNumber() {
        
        chainNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object userId_ = "";
      /**
       * <code>string user_id = 2 [json_name = "userId"];</code>
       * @return The userId.
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string user_id = 2 [json_name = "userId"];</code>
       * @return The bytes for userId.
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string user_id = 2 [json_name = "userId"];</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 2 [json_name = "userId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 2 [json_name = "userId"];</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode> chainNodes_ =
        java.util.Collections.emptyList();
      private void ensureChainNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          chainNodes_ = new java.util.ArrayList<blockchain.thepower.v1alpha1.Thepower.TpNode>(chainNodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          blockchain.thepower.v1alpha1.Thepower.TpNode, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder, blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder> chainNodesBuilder_;

      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode> getChainNodesList() {
        if (chainNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chainNodes_);
        } else {
          return chainNodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public int getChainNodesCount() {
        if (chainNodesBuilder_ == null) {
          return chainNodes_.size();
        } else {
          return chainNodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public blockchain.thepower.v1alpha1.Thepower.TpNode getChainNodes(int index) {
        if (chainNodesBuilder_ == null) {
          return chainNodes_.get(index);
        } else {
          return chainNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder setChainNodes(
          int index, blockchain.thepower.v1alpha1.Thepower.TpNode value) {
        if (chainNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChainNodesIsMutable();
          chainNodes_.set(index, value);
          onChanged();
        } else {
          chainNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder setChainNodes(
          int index, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder builderForValue) {
        if (chainNodesBuilder_ == null) {
          ensureChainNodesIsMutable();
          chainNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          chainNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder addChainNodes(blockchain.thepower.v1alpha1.Thepower.TpNode value) {
        if (chainNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChainNodesIsMutable();
          chainNodes_.add(value);
          onChanged();
        } else {
          chainNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder addChainNodes(
          int index, blockchain.thepower.v1alpha1.Thepower.TpNode value) {
        if (chainNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChainNodesIsMutable();
          chainNodes_.add(index, value);
          onChanged();
        } else {
          chainNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder addChainNodes(
          blockchain.thepower.v1alpha1.Thepower.TpNode.Builder builderForValue) {
        if (chainNodesBuilder_ == null) {
          ensureChainNodesIsMutable();
          chainNodes_.add(builderForValue.build());
          onChanged();
        } else {
          chainNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder addChainNodes(
          int index, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder builderForValue) {
        if (chainNodesBuilder_ == null) {
          ensureChainNodesIsMutable();
          chainNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          chainNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder addAllChainNodes(
          java.lang.Iterable<? extends blockchain.thepower.v1alpha1.Thepower.TpNode> values) {
        if (chainNodesBuilder_ == null) {
          ensureChainNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chainNodes_);
          onChanged();
        } else {
          chainNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder clearChainNodes() {
        if (chainNodesBuilder_ == null) {
          chainNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          chainNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public Builder removeChainNodes(int index) {
        if (chainNodesBuilder_ == null) {
          ensureChainNodesIsMutable();
          chainNodes_.remove(index);
          onChanged();
        } else {
          chainNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public blockchain.thepower.v1alpha1.Thepower.TpNode.Builder getChainNodesBuilder(
          int index) {
        return getChainNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder getChainNodesOrBuilder(
          int index) {
        if (chainNodesBuilder_ == null) {
          return chainNodes_.get(index);  } else {
          return chainNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public java.util.List<? extends blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder> 
           getChainNodesOrBuilderList() {
        if (chainNodesBuilder_ != null) {
          return chainNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chainNodes_);
        }
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public blockchain.thepower.v1alpha1.Thepower.TpNode.Builder addChainNodesBuilder() {
        return getChainNodesFieldBuilder().addBuilder(
            blockchain.thepower.v1alpha1.Thepower.TpNode.getDefaultInstance());
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public blockchain.thepower.v1alpha1.Thepower.TpNode.Builder addChainNodesBuilder(
          int index) {
        return getChainNodesFieldBuilder().addBuilder(
            index, blockchain.thepower.v1alpha1.Thepower.TpNode.getDefaultInstance());
      }
      /**
       * <code>repeated .blockchain.thepower.v1alpha1.TpNode chain_nodes = 3 [json_name = "chainNodes"];</code>
       */
      public java.util.List<blockchain.thepower.v1alpha1.Thepower.TpNode.Builder> 
           getChainNodesBuilderList() {
        return getChainNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          blockchain.thepower.v1alpha1.Thepower.TpNode, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder, blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder> 
          getChainNodesFieldBuilder() {
        if (chainNodesBuilder_ == null) {
          chainNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              blockchain.thepower.v1alpha1.Thepower.TpNode, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder, blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder>(
                  chainNodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          chainNodes_ = null;
        }
        return chainNodesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:blockchain.thepower.v1alpha1.TpChain)
    }

    // @@protoc_insertion_point(class_scope:blockchain.thepower.v1alpha1.TpChain)
    private static final blockchain.thepower.v1alpha1.Thepower.TpChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new blockchain.thepower.v1alpha1.Thepower.TpChain();
    }

    public static blockchain.thepower.v1alpha1.Thepower.TpChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TpChain>
        PARSER = new com.google.protobuf.AbstractParser<TpChain>() {
      @java.lang.Override
      public TpChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TpChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TpChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TpChain> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public blockchain.thepower.v1alpha1.Thepower.TpChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TpNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blockchain.thepower.v1alpha1.TpNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string nodename = 1 [json_name = "nodename"];</code>
     * @return The nodename.
     */
    java.lang.String getNodename();
    /**
     * <code>string nodename = 1 [json_name = "nodename"];</code>
     * @return The bytes for nodename.
     */
    com.google.protobuf.ByteString
        getNodenameBytes();

    /**
     * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
     * @return The tpicPort.
     */
    java.lang.String getTpicPort();
    /**
     * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
     * @return The bytes for tpicPort.
     */
    com.google.protobuf.ByteString
        getTpicPortBytes();

    /**
     * <code>string api_port = 3 [json_name = "apiPort"];</code>
     * @return The apiPort.
     */
    java.lang.String getApiPort();
    /**
     * <code>string api_port = 3 [json_name = "apiPort"];</code>
     * @return The bytes for apiPort.
     */
    com.google.protobuf.ByteString
        getApiPortBytes();

    /**
     * <code>string apis_port = 4 [json_name = "apisPort"];</code>
     * @return The apisPort.
     */
    java.lang.String getApisPort();
    /**
     * <code>string apis_port = 4 [json_name = "apisPort"];</code>
     * @return The bytes for apisPort.
     */
    com.google.protobuf.ByteString
        getApisPortBytes();

    /**
     * <code>string cc_port = 5 [json_name = "ccPort"];</code>
     * @return The ccPort.
     */
    java.lang.String getCcPort();
    /**
     * <code>string cc_port = 5 [json_name = "ccPort"];</code>
     * @return The bytes for ccPort.
     */
    com.google.protobuf.ByteString
        getCcPortBytes();

    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @return A list containing the crosschainExternal.
     */
    java.util.List<java.lang.String>
        getCrosschainExternalList();
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @return The count of crosschainExternal.
     */
    int getCrosschainExternalCount();
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @param index The index of the element to return.
     * @return The crosschainExternal at the given index.
     */
    java.lang.String getCrosschainExternal(int index);
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the crosschainExternal at the given index.
     */
    com.google.protobuf.ByteString
        getCrosschainExternalBytes(int index);
  }
  /**
   * Protobuf type {@code blockchain.thepower.v1alpha1.TpNode}
   */
  public static final class TpNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:blockchain.thepower.v1alpha1.TpNode)
      TpNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TpNode.newBuilder() to construct.
    private TpNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TpNode() {
      nodename_ = "";
      tpicPort_ = "";
      apiPort_ = "";
      apisPort_ = "";
      ccPort_ = "";
      crosschainExternal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TpNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TpNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodename_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              tpicPort_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              apiPort_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              apisPort_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              ccPort_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                crosschainExternal_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              crosschainExternal_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          crosschainExternal_ = crosschainExternal_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blockchain.thepower.v1alpha1.Thepower.TpNode.class, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder.class);
    }

    public static final int NODENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodename_;
    /**
     * <code>string nodename = 1 [json_name = "nodename"];</code>
     * @return The nodename.
     */
    @java.lang.Override
    public java.lang.String getNodename() {
      java.lang.Object ref = nodename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodename_ = s;
        return s;
      }
    }
    /**
     * <code>string nodename = 1 [json_name = "nodename"];</code>
     * @return The bytes for nodename.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNodenameBytes() {
      java.lang.Object ref = nodename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TPIC_PORT_FIELD_NUMBER = 2;
    private volatile java.lang.Object tpicPort_;
    /**
     * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
     * @return The tpicPort.
     */
    @java.lang.Override
    public java.lang.String getTpicPort() {
      java.lang.Object ref = tpicPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tpicPort_ = s;
        return s;
      }
    }
    /**
     * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
     * @return The bytes for tpicPort.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTpicPortBytes() {
      java.lang.Object ref = tpicPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tpicPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int API_PORT_FIELD_NUMBER = 3;
    private volatile java.lang.Object apiPort_;
    /**
     * <code>string api_port = 3 [json_name = "apiPort"];</code>
     * @return The apiPort.
     */
    @java.lang.Override
    public java.lang.String getApiPort() {
      java.lang.Object ref = apiPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apiPort_ = s;
        return s;
      }
    }
    /**
     * <code>string api_port = 3 [json_name = "apiPort"];</code>
     * @return The bytes for apiPort.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApiPortBytes() {
      java.lang.Object ref = apiPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apiPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APIS_PORT_FIELD_NUMBER = 4;
    private volatile java.lang.Object apisPort_;
    /**
     * <code>string apis_port = 4 [json_name = "apisPort"];</code>
     * @return The apisPort.
     */
    @java.lang.Override
    public java.lang.String getApisPort() {
      java.lang.Object ref = apisPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apisPort_ = s;
        return s;
      }
    }
    /**
     * <code>string apis_port = 4 [json_name = "apisPort"];</code>
     * @return The bytes for apisPort.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApisPortBytes() {
      java.lang.Object ref = apisPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apisPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CC_PORT_FIELD_NUMBER = 5;
    private volatile java.lang.Object ccPort_;
    /**
     * <code>string cc_port = 5 [json_name = "ccPort"];</code>
     * @return The ccPort.
     */
    @java.lang.Override
    public java.lang.String getCcPort() {
      java.lang.Object ref = ccPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ccPort_ = s;
        return s;
      }
    }
    /**
     * <code>string cc_port = 5 [json_name = "ccPort"];</code>
     * @return The bytes for ccPort.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCcPortBytes() {
      java.lang.Object ref = ccPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ccPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CROSSCHAIN_EXTERNAL_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList crosschainExternal_;
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @return A list containing the crosschainExternal.
     */
    public com.google.protobuf.ProtocolStringList
        getCrosschainExternalList() {
      return crosschainExternal_;
    }
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @return The count of crosschainExternal.
     */
    public int getCrosschainExternalCount() {
      return crosschainExternal_.size();
    }
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @param index The index of the element to return.
     * @return The crosschainExternal at the given index.
     */
    public java.lang.String getCrosschainExternal(int index) {
      return crosschainExternal_.get(index);
    }
    /**
     * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the crosschainExternal at the given index.
     */
    public com.google.protobuf.ByteString
        getCrosschainExternalBytes(int index) {
      return crosschainExternal_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodenameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodename_);
      }
      if (!getTpicPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tpicPort_);
      }
      if (!getApiPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, apiPort_);
      }
      if (!getApisPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, apisPort_);
      }
      if (!getCcPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ccPort_);
      }
      for (int i = 0; i < crosschainExternal_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, crosschainExternal_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodenameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodename_);
      }
      if (!getTpicPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tpicPort_);
      }
      if (!getApiPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, apiPort_);
      }
      if (!getApisPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, apisPort_);
      }
      if (!getCcPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ccPort_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < crosschainExternal_.size(); i++) {
          dataSize += computeStringSizeNoTag(crosschainExternal_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCrosschainExternalList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof blockchain.thepower.v1alpha1.Thepower.TpNode)) {
        return super.equals(obj);
      }
      blockchain.thepower.v1alpha1.Thepower.TpNode other = (blockchain.thepower.v1alpha1.Thepower.TpNode) obj;

      if (!getNodename()
          .equals(other.getNodename())) return false;
      if (!getTpicPort()
          .equals(other.getTpicPort())) return false;
      if (!getApiPort()
          .equals(other.getApiPort())) return false;
      if (!getApisPort()
          .equals(other.getApisPort())) return false;
      if (!getCcPort()
          .equals(other.getCcPort())) return false;
      if (!getCrosschainExternalList()
          .equals(other.getCrosschainExternalList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODENAME_FIELD_NUMBER;
      hash = (53 * hash) + getNodename().hashCode();
      hash = (37 * hash) + TPIC_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getTpicPort().hashCode();
      hash = (37 * hash) + API_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getApiPort().hashCode();
      hash = (37 * hash) + APIS_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getApisPort().hashCode();
      hash = (37 * hash) + CC_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getCcPort().hashCode();
      if (getCrosschainExternalCount() > 0) {
        hash = (37 * hash) + CROSSCHAIN_EXTERNAL_FIELD_NUMBER;
        hash = (53 * hash) + getCrosschainExternalList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blockchain.thepower.v1alpha1.Thepower.TpNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(blockchain.thepower.v1alpha1.Thepower.TpNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blockchain.thepower.v1alpha1.TpNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blockchain.thepower.v1alpha1.TpNode)
        blockchain.thepower.v1alpha1.Thepower.TpNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                blockchain.thepower.v1alpha1.Thepower.TpNode.class, blockchain.thepower.v1alpha1.Thepower.TpNode.Builder.class);
      }

      // Construct using blockchain.thepower.v1alpha1.Thepower.TpNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nodename_ = "";

        tpicPort_ = "";

        apiPort_ = "";

        apisPort_ = "";

        ccPort_ = "";

        crosschainExternal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return blockchain.thepower.v1alpha1.Thepower.internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor;
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpNode getDefaultInstanceForType() {
        return blockchain.thepower.v1alpha1.Thepower.TpNode.getDefaultInstance();
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpNode build() {
        blockchain.thepower.v1alpha1.Thepower.TpNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public blockchain.thepower.v1alpha1.Thepower.TpNode buildPartial() {
        blockchain.thepower.v1alpha1.Thepower.TpNode result = new blockchain.thepower.v1alpha1.Thepower.TpNode(this);
        int from_bitField0_ = bitField0_;
        result.nodename_ = nodename_;
        result.tpicPort_ = tpicPort_;
        result.apiPort_ = apiPort_;
        result.apisPort_ = apisPort_;
        result.ccPort_ = ccPort_;
        if (((bitField0_ & 0x00000001) != 0)) {
          crosschainExternal_ = crosschainExternal_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.crosschainExternal_ = crosschainExternal_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof blockchain.thepower.v1alpha1.Thepower.TpNode) {
          return mergeFrom((blockchain.thepower.v1alpha1.Thepower.TpNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(blockchain.thepower.v1alpha1.Thepower.TpNode other) {
        if (other == blockchain.thepower.v1alpha1.Thepower.TpNode.getDefaultInstance()) return this;
        if (!other.getNodename().isEmpty()) {
          nodename_ = other.nodename_;
          onChanged();
        }
        if (!other.getTpicPort().isEmpty()) {
          tpicPort_ = other.tpicPort_;
          onChanged();
        }
        if (!other.getApiPort().isEmpty()) {
          apiPort_ = other.apiPort_;
          onChanged();
        }
        if (!other.getApisPort().isEmpty()) {
          apisPort_ = other.apisPort_;
          onChanged();
        }
        if (!other.getCcPort().isEmpty()) {
          ccPort_ = other.ccPort_;
          onChanged();
        }
        if (!other.crosschainExternal_.isEmpty()) {
          if (crosschainExternal_.isEmpty()) {
            crosschainExternal_ = other.crosschainExternal_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCrosschainExternalIsMutable();
            crosschainExternal_.addAll(other.crosschainExternal_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        blockchain.thepower.v1alpha1.Thepower.TpNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (blockchain.thepower.v1alpha1.Thepower.TpNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object nodename_ = "";
      /**
       * <code>string nodename = 1 [json_name = "nodename"];</code>
       * @return The nodename.
       */
      public java.lang.String getNodename() {
        java.lang.Object ref = nodename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string nodename = 1 [json_name = "nodename"];</code>
       * @return The bytes for nodename.
       */
      public com.google.protobuf.ByteString
          getNodenameBytes() {
        java.lang.Object ref = nodename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string nodename = 1 [json_name = "nodename"];</code>
       * @param value The nodename to set.
       * @return This builder for chaining.
       */
      public Builder setNodename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string nodename = 1 [json_name = "nodename"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNodename() {
        
        nodename_ = getDefaultInstance().getNodename();
        onChanged();
        return this;
      }
      /**
       * <code>string nodename = 1 [json_name = "nodename"];</code>
       * @param value The bytes for nodename to set.
       * @return This builder for chaining.
       */
      public Builder setNodenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tpicPort_ = "";
      /**
       * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
       * @return The tpicPort.
       */
      public java.lang.String getTpicPort() {
        java.lang.Object ref = tpicPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tpicPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
       * @return The bytes for tpicPort.
       */
      public com.google.protobuf.ByteString
          getTpicPortBytes() {
        java.lang.Object ref = tpicPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tpicPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
       * @param value The tpicPort to set.
       * @return This builder for chaining.
       */
      public Builder setTpicPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tpicPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTpicPort() {
        
        tpicPort_ = getDefaultInstance().getTpicPort();
        onChanged();
        return this;
      }
      /**
       * <code>string tpic_port = 2 [json_name = "tpicPort"];</code>
       * @param value The bytes for tpicPort to set.
       * @return This builder for chaining.
       */
      public Builder setTpicPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tpicPort_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object apiPort_ = "";
      /**
       * <code>string api_port = 3 [json_name = "apiPort"];</code>
       * @return The apiPort.
       */
      public java.lang.String getApiPort() {
        java.lang.Object ref = apiPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apiPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string api_port = 3 [json_name = "apiPort"];</code>
       * @return The bytes for apiPort.
       */
      public com.google.protobuf.ByteString
          getApiPortBytes() {
        java.lang.Object ref = apiPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apiPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string api_port = 3 [json_name = "apiPort"];</code>
       * @param value The apiPort to set.
       * @return This builder for chaining.
       */
      public Builder setApiPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        apiPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string api_port = 3 [json_name = "apiPort"];</code>
       * @return This builder for chaining.
       */
      public Builder clearApiPort() {
        
        apiPort_ = getDefaultInstance().getApiPort();
        onChanged();
        return this;
      }
      /**
       * <code>string api_port = 3 [json_name = "apiPort"];</code>
       * @param value The bytes for apiPort to set.
       * @return This builder for chaining.
       */
      public Builder setApiPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        apiPort_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object apisPort_ = "";
      /**
       * <code>string apis_port = 4 [json_name = "apisPort"];</code>
       * @return The apisPort.
       */
      public java.lang.String getApisPort() {
        java.lang.Object ref = apisPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apisPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string apis_port = 4 [json_name = "apisPort"];</code>
       * @return The bytes for apisPort.
       */
      public com.google.protobuf.ByteString
          getApisPortBytes() {
        java.lang.Object ref = apisPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apisPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string apis_port = 4 [json_name = "apisPort"];</code>
       * @param value The apisPort to set.
       * @return This builder for chaining.
       */
      public Builder setApisPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        apisPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string apis_port = 4 [json_name = "apisPort"];</code>
       * @return This builder for chaining.
       */
      public Builder clearApisPort() {
        
        apisPort_ = getDefaultInstance().getApisPort();
        onChanged();
        return this;
      }
      /**
       * <code>string apis_port = 4 [json_name = "apisPort"];</code>
       * @param value The bytes for apisPort to set.
       * @return This builder for chaining.
       */
      public Builder setApisPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        apisPort_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ccPort_ = "";
      /**
       * <code>string cc_port = 5 [json_name = "ccPort"];</code>
       * @return The ccPort.
       */
      public java.lang.String getCcPort() {
        java.lang.Object ref = ccPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ccPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string cc_port = 5 [json_name = "ccPort"];</code>
       * @return The bytes for ccPort.
       */
      public com.google.protobuf.ByteString
          getCcPortBytes() {
        java.lang.Object ref = ccPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ccPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string cc_port = 5 [json_name = "ccPort"];</code>
       * @param value The ccPort to set.
       * @return This builder for chaining.
       */
      public Builder setCcPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ccPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string cc_port = 5 [json_name = "ccPort"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCcPort() {
        
        ccPort_ = getDefaultInstance().getCcPort();
        onChanged();
        return this;
      }
      /**
       * <code>string cc_port = 5 [json_name = "ccPort"];</code>
       * @param value The bytes for ccPort to set.
       * @return This builder for chaining.
       */
      public Builder setCcPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ccPort_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList crosschainExternal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCrosschainExternalIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          crosschainExternal_ = new com.google.protobuf.LazyStringArrayList(crosschainExternal_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @return A list containing the crosschainExternal.
       */
      public com.google.protobuf.ProtocolStringList
          getCrosschainExternalList() {
        return crosschainExternal_.getUnmodifiableView();
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @return The count of crosschainExternal.
       */
      public int getCrosschainExternalCount() {
        return crosschainExternal_.size();
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param index The index of the element to return.
       * @return The crosschainExternal at the given index.
       */
      public java.lang.String getCrosschainExternal(int index) {
        return crosschainExternal_.get(index);
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the crosschainExternal at the given index.
       */
      public com.google.protobuf.ByteString
          getCrosschainExternalBytes(int index) {
        return crosschainExternal_.getByteString(index);
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param index The index to set the value at.
       * @param value The crosschainExternal to set.
       * @return This builder for chaining.
       */
      public Builder setCrosschainExternal(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCrosschainExternalIsMutable();
        crosschainExternal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param value The crosschainExternal to add.
       * @return This builder for chaining.
       */
      public Builder addCrosschainExternal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCrosschainExternalIsMutable();
        crosschainExternal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param values The crosschainExternal to add.
       * @return This builder for chaining.
       */
      public Builder addAllCrosschainExternal(
          java.lang.Iterable<java.lang.String> values) {
        ensureCrosschainExternalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, crosschainExternal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCrosschainExternal() {
        crosschainExternal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string crosschain_external = 6 [json_name = "crosschainExternal"];</code>
       * @param value The bytes of the crosschainExternal to add.
       * @return This builder for chaining.
       */
      public Builder addCrosschainExternalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCrosschainExternalIsMutable();
        crosschainExternal_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:blockchain.thepower.v1alpha1.TpNode)
    }

    // @@protoc_insertion_point(class_scope:blockchain.thepower.v1alpha1.TpNode)
    private static final blockchain.thepower.v1alpha1.Thepower.TpNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new blockchain.thepower.v1alpha1.Thepower.TpNode();
    }

    public static blockchain.thepower.v1alpha1.Thepower.TpNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TpNode>
        PARSER = new com.google.protobuf.AbstractParser<TpNode>() {
      @java.lang.Override
      public TpNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TpNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TpNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TpNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public blockchain.thepower.v1alpha1.Thepower.TpNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_blockchain_thepower_v1alpha1_TpChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_blockchain_thepower_v1alpha1_TpNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+blockchain/thepower/v1alpha1/thepower." +
      "proto\022\034blockchain.thepower.v1alpha1\"\214\001\n\007" +
      "TpChain\022!\n\014chain_number\030\001 \001(\005R\013chainNumb" +
      "er\022\027\n\007user_id\030\002 \001(\tR\006userId\022E\n\013chain_nod" +
      "es\030\003 \003(\0132$.blockchain.thepower.v1alpha1." +
      "TpNodeR\nchainNodes\"\303\001\n\006TpNode\022\032\n\010nodenam" +
      "e\030\001 \001(\tR\010nodename\022\033\n\ttpic_port\030\002 \001(\tR\010tp" +
      "icPort\022\031\n\010api_port\030\003 \001(\tR\007apiPort\022\033\n\tapi" +
      "s_port\030\004 \001(\tR\010apisPort\022\027\n\007cc_port\030\005 \001(\tR" +
      "\006ccPort\022/\n\023crosschain_external\030\006 \003(\tR\022cr" +
      "osschainExternalB?Z=github.com/cuemby/cc" +
      "p-sdk/gen/go/blockchain/thepower/v1alpha" +
      "1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_blockchain_thepower_v1alpha1_TpChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_blockchain_thepower_v1alpha1_TpChain_descriptor,
        new java.lang.String[] { "ChainNumber", "UserId", "ChainNodes", });
    internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_blockchain_thepower_v1alpha1_TpNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_blockchain_thepower_v1alpha1_TpNode_descriptor,
        new java.lang.String[] { "Nodename", "TpicPort", "ApiPort", "ApisPort", "CcPort", "CrosschainExternal", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
