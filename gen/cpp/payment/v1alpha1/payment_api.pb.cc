// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment/v1alpha1/payment_api.proto

#include "payment/v1alpha1/payment_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace payment {
namespace v1alpha1 {
constexpr InvoiceFilterRequest::InvoiceFilterRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : year_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , month_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_list_(nullptr)
  , organization_id_(0u){}
struct InvoiceFilterRequestDefaultTypeInternal {
  constexpr InvoiceFilterRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvoiceFilterRequestDefaultTypeInternal() {}
  union {
    InvoiceFilterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvoiceFilterRequestDefaultTypeInternal _InvoiceFilterRequest_default_instance_;
constexpr InvoiceFilterResponse::InvoiceFilterResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_list_(nullptr)
  , invoice_list_(nullptr)
  , biling_list_(nullptr){}
struct InvoiceFilterResponseDefaultTypeInternal {
  constexpr InvoiceFilterResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvoiceFilterResponseDefaultTypeInternal() {}
  union {
    InvoiceFilterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvoiceFilterResponseDefaultTypeInternal _InvoiceFilterResponse_default_instance_;
constexpr DeleteCustomerRequest::DeleteCustomerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct DeleteCustomerRequestDefaultTypeInternal {
  constexpr DeleteCustomerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteCustomerRequestDefaultTypeInternal() {}
  union {
    DeleteCustomerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteCustomerRequestDefaultTypeInternal _DeleteCustomerRequest_default_instance_;
constexpr DeleteCustomerResponse::DeleteCustomerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteCustomerResponseDefaultTypeInternal {
  constexpr DeleteCustomerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteCustomerResponseDefaultTypeInternal() {}
  union {
    DeleteCustomerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteCustomerResponseDefaultTypeInternal _DeleteCustomerResponse_default_instance_;
constexpr GetSuscriptionRequest::GetSuscriptionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : suscription_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct GetSuscriptionRequestDefaultTypeInternal {
  constexpr GetSuscriptionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSuscriptionRequestDefaultTypeInternal() {}
  union {
    GetSuscriptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSuscriptionRequestDefaultTypeInternal _GetSuscriptionRequest_default_instance_;
constexpr GetSuscriptionResponse::GetSuscriptionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , suscription_(nullptr){}
struct GetSuscriptionResponseDefaultTypeInternal {
  constexpr GetSuscriptionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSuscriptionResponseDefaultTypeInternal() {}
  union {
    GetSuscriptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSuscriptionResponseDefaultTypeInternal _GetSuscriptionResponse_default_instance_;
constexpr GetOrganizationRequest::GetOrganizationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_id_(0u){}
struct GetOrganizationRequestDefaultTypeInternal {
  constexpr GetOrganizationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOrganizationRequestDefaultTypeInternal() {}
  union {
    GetOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOrganizationRequestDefaultTypeInternal _GetOrganizationRequest_default_instance_;
constexpr GetOrganizationResponse::GetOrganizationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_(nullptr){}
struct GetOrganizationResponseDefaultTypeInternal {
  constexpr GetOrganizationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOrganizationResponseDefaultTypeInternal() {}
  union {
    GetOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOrganizationResponseDefaultTypeInternal _GetOrganizationResponse_default_instance_;
constexpr GetCustomerRequest::GetCustomerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct GetCustomerRequestDefaultTypeInternal {
  constexpr GetCustomerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCustomerRequestDefaultTypeInternal() {}
  union {
    GetCustomerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCustomerRequestDefaultTypeInternal _GetCustomerRequest_default_instance_;
constexpr GetCustomerResponse::GetCustomerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_(nullptr){}
struct GetCustomerResponseDefaultTypeInternal {
  constexpr GetCustomerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCustomerResponseDefaultTypeInternal() {}
  union {
    GetCustomerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCustomerResponseDefaultTypeInternal _GetCustomerResponse_default_instance_;
constexpr GetBilingMonthRequest::GetBilingMonthRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invoice_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct GetBilingMonthRequestDefaultTypeInternal {
  constexpr GetBilingMonthRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBilingMonthRequestDefaultTypeInternal() {}
  union {
    GetBilingMonthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBilingMonthRequestDefaultTypeInternal _GetBilingMonthRequest_default_instance_;
constexpr GetBilingMonthResponse::GetBilingMonthResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , biling_(nullptr){}
struct GetBilingMonthResponseDefaultTypeInternal {
  constexpr GetBilingMonthResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBilingMonthResponseDefaultTypeInternal() {}
  union {
    GetBilingMonthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBilingMonthResponseDefaultTypeInternal _GetBilingMonthResponse_default_instance_;
constexpr GetPaymentsRequest::GetPaymentsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct GetPaymentsRequestDefaultTypeInternal {
  constexpr GetPaymentsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentsRequestDefaultTypeInternal() {}
  union {
    GetPaymentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentsRequestDefaultTypeInternal _GetPaymentsRequest_default_instance_;
constexpr GetPaymentsResponse::GetPaymentsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct GetPaymentsResponseDefaultTypeInternal {
  constexpr GetPaymentsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentsResponseDefaultTypeInternal() {}
  union {
    GetPaymentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentsResponseDefaultTypeInternal _GetPaymentsResponse_default_instance_;
constexpr CreateSuscriptionRequest::CreateSuscriptionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , suscription_(nullptr)
  , organization_id_(0u){}
struct CreateSuscriptionRequestDefaultTypeInternal {
  constexpr CreateSuscriptionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSuscriptionRequestDefaultTypeInternal() {}
  union {
    CreateSuscriptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSuscriptionRequestDefaultTypeInternal _CreateSuscriptionRequest_default_instance_;
constexpr CreateSuscriptionResponse::CreateSuscriptionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , suscription_(nullptr){}
struct CreateSuscriptionResponseDefaultTypeInternal {
  constexpr CreateSuscriptionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSuscriptionResponseDefaultTypeInternal() {}
  union {
    CreateSuscriptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSuscriptionResponseDefaultTypeInternal _CreateSuscriptionResponse_default_instance_;
constexpr CreateProjectRequest::CreateProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(nullptr)
  , organization_id_(0u){}
struct CreateProjectRequestDefaultTypeInternal {
  constexpr CreateProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateProjectRequestDefaultTypeInternal() {}
  union {
    CreateProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateProjectRequestDefaultTypeInternal _CreateProjectRequest_default_instance_;
constexpr CreateProjectResponse::CreateProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateProjectResponseDefaultTypeInternal {
  constexpr CreateProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateProjectResponseDefaultTypeInternal() {}
  union {
    CreateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateProjectResponseDefaultTypeInternal _CreateProjectResponse_default_instance_;
constexpr CreateInvoiceRequest::CreateInvoiceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invoice_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct CreateInvoiceRequestDefaultTypeInternal {
  constexpr CreateInvoiceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateInvoiceRequestDefaultTypeInternal() {}
  union {
    CreateInvoiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateInvoiceRequestDefaultTypeInternal _CreateInvoiceRequest_default_instance_;
constexpr CreateInvoiceResponse::CreateInvoiceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , customer_(nullptr){}
struct CreateInvoiceResponseDefaultTypeInternal {
  constexpr CreateInvoiceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateInvoiceResponseDefaultTypeInternal() {}
  union {
    CreateInvoiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateInvoiceResponseDefaultTypeInternal _CreateInvoiceResponse_default_instance_;
constexpr CreateCardRequest::CreateCardRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_(nullptr)
  , organization_id_(0u){}
struct CreateCardRequestDefaultTypeInternal {
  constexpr CreateCardRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateCardRequestDefaultTypeInternal() {}
  union {
    CreateCardRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateCardRequestDefaultTypeInternal _CreateCardRequest_default_instance_;
constexpr CreateCardResponse::CreateCardResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : token_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateCardResponseDefaultTypeInternal {
  constexpr CreateCardResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateCardResponseDefaultTypeInternal() {}
  union {
    CreateCardResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateCardResponseDefaultTypeInternal _CreateCardResponse_default_instance_;
constexpr CancelSuscriptionRequest::CancelSuscriptionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , suscription_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct CancelSuscriptionRequestDefaultTypeInternal {
  constexpr CancelSuscriptionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelSuscriptionRequestDefaultTypeInternal() {}
  union {
    CancelSuscriptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelSuscriptionRequestDefaultTypeInternal _CancelSuscriptionRequest_default_instance_;
constexpr CancelSuscriptionResponse::CancelSuscriptionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CancelSuscriptionResponseDefaultTypeInternal {
  constexpr CancelSuscriptionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelSuscriptionResponseDefaultTypeInternal() {}
  union {
    CancelSuscriptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelSuscriptionResponseDefaultTypeInternal _CancelSuscriptionResponse_default_instance_;
constexpr CreateCustomerRequest::CreateCustomerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_(nullptr){}
struct CreateCustomerRequestDefaultTypeInternal {
  constexpr CreateCustomerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateCustomerRequestDefaultTypeInternal() {}
  union {
    CreateCustomerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateCustomerRequestDefaultTypeInternal _CreateCustomerRequest_default_instance_;
constexpr CreateCustomerResponse::CreateCustomerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateCustomerResponseDefaultTypeInternal {
  constexpr CreateCustomerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateCustomerResponseDefaultTypeInternal() {}
  union {
    CreateCustomerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateCustomerResponseDefaultTypeInternal _CreateCustomerResponse_default_instance_;
constexpr CreatePaymentRequest::CreatePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr)
  , organization_id_(0u){}
struct CreatePaymentRequestDefaultTypeInternal {
  constexpr CreatePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreatePaymentRequestDefaultTypeInternal() {}
  union {
    CreatePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreatePaymentRequestDefaultTypeInternal _CreatePaymentRequest_default_instance_;
constexpr CreatePaymentResponse::CreatePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreatePaymentResponseDefaultTypeInternal {
  constexpr CreatePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreatePaymentResponseDefaultTypeInternal() {}
  union {
    CreatePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreatePaymentResponseDefaultTypeInternal _CreatePaymentResponse_default_instance_;
constexpr DeletePaymentRequest::DeletePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct DeletePaymentRequestDefaultTypeInternal {
  constexpr DeletePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePaymentRequestDefaultTypeInternal() {}
  union {
    DeletePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePaymentRequestDefaultTypeInternal _DeletePaymentRequest_default_instance_;
constexpr DeletePaymentResponse::DeletePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeletePaymentResponseDefaultTypeInternal {
  constexpr DeletePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePaymentResponseDefaultTypeInternal() {}
  union {
    DeletePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePaymentResponseDefaultTypeInternal _DeletePaymentResponse_default_instance_;
constexpr GetPaymentRequest::GetPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct GetPaymentRequestDefaultTypeInternal {
  constexpr GetPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentRequestDefaultTypeInternal() {}
  union {
    GetPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentRequestDefaultTypeInternal _GetPaymentRequest_default_instance_;
constexpr GetPaymentResponse::GetPaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct GetPaymentResponseDefaultTypeInternal {
  constexpr GetPaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentResponseDefaultTypeInternal() {}
  union {
    GetPaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentResponseDefaultTypeInternal _GetPaymentResponse_default_instance_;
constexpr ListPaymentRequest::ListPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : customer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct ListPaymentRequestDefaultTypeInternal {
  constexpr ListPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPaymentRequestDefaultTypeInternal() {}
  union {
    ListPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPaymentRequestDefaultTypeInternal _ListPaymentRequest_default_instance_;
constexpr ListPaymentResponse::ListPaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_list_(nullptr){}
struct ListPaymentResponseDefaultTypeInternal {
  constexpr ListPaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPaymentResponseDefaultTypeInternal() {}
  union {
    ListPaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPaymentResponseDefaultTypeInternal _ListPaymentResponse_default_instance_;
constexpr ListProjectsRequest::ListProjectsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_id_(0u){}
struct ListProjectsRequestDefaultTypeInternal {
  constexpr ListProjectsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectsRequestDefaultTypeInternal() {}
  union {
    ListProjectsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectsRequestDefaultTypeInternal _ListProjectsRequest_default_instance_;
constexpr ListProjectsResponse::ListProjectsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_list_(nullptr){}
struct ListProjectsResponseDefaultTypeInternal {
  constexpr ListProjectsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectsResponseDefaultTypeInternal() {}
  union {
    ListProjectsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectsResponseDefaultTypeInternal _ListProjectsResponse_default_instance_;
constexpr GetProjectRequest::GetProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetProjectRequestDefaultTypeInternal {
  constexpr GetProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetProjectRequestDefaultTypeInternal() {}
  union {
    GetProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetProjectRequestDefaultTypeInternal _GetProjectRequest_default_instance_;
constexpr GetProjectResponse::GetProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_(nullptr){}
struct GetProjectResponseDefaultTypeInternal {
  constexpr GetProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetProjectResponseDefaultTypeInternal() {}
  union {
    GetProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetProjectResponseDefaultTypeInternal _GetProjectResponse_default_instance_;
constexpr DeleteProjectRequest::DeleteProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(0u){}
struct DeleteProjectRequestDefaultTypeInternal {
  constexpr DeleteProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteProjectRequestDefaultTypeInternal() {}
  union {
    DeleteProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteProjectRequestDefaultTypeInternal _DeleteProjectRequest_default_instance_;
constexpr DeleteProjectResponse::DeleteProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteProjectResponseDefaultTypeInternal {
  constexpr DeleteProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteProjectResponseDefaultTypeInternal() {}
  union {
    DeleteProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteProjectResponseDefaultTypeInternal _DeleteProjectResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace payment
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[40];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_payment_2fv1alpha1_2fpayment_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterRequest, year_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterRequest, month_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterRequest, customer_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterResponse, customer_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterResponse, invoice_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterResponse, biling_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::InvoiceFilterResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteCustomerRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteCustomerRequest, customer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteCustomerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteCustomerResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionRequest, suscription_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionResponse, suscription_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetSuscriptionResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetOrganizationResponse, customer_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetOrganizationResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerRequest, customer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerResponse, customer_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetCustomerResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthRequest, invoice_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthResponse, biling_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetBilingMonthResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsRequest, customer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsResponse, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentsResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionRequest, suscription_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionResponse, suscription_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateSuscriptionResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateProjectRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateProjectRequest, project_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateProjectResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceRequest, invoice_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceResponse, customer_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateInvoiceResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardRequest, card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardResponse, token_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCardResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionRequest, suscription_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CancelSuscriptionResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCustomerRequest, customer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCustomerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCustomerResponse, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreateCustomerResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, payment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, card_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, card_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, customer_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, card_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, customer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, payment_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListProjectsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListProjectsRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListProjectsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListProjectsResponse, project_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListProjectsResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectRequest, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectResponse, project_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetProjectResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteProjectRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteProjectRequest, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeleteProjectResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::payment::v1alpha1::InvoiceFilterRequest)},
  { 9, -1, sizeof(::payment::v1alpha1::InvoiceFilterResponse)},
  { 18, -1, sizeof(::payment::v1alpha1::DeleteCustomerRequest)},
  { 25, -1, sizeof(::payment::v1alpha1::DeleteCustomerResponse)},
  { 31, -1, sizeof(::payment::v1alpha1::GetSuscriptionRequest)},
  { 38, -1, sizeof(::payment::v1alpha1::GetSuscriptionResponse)},
  { 45, -1, sizeof(::payment::v1alpha1::GetOrganizationRequest)},
  { 51, -1, sizeof(::payment::v1alpha1::GetOrganizationResponse)},
  { 58, -1, sizeof(::payment::v1alpha1::GetCustomerRequest)},
  { 65, -1, sizeof(::payment::v1alpha1::GetCustomerResponse)},
  { 72, -1, sizeof(::payment::v1alpha1::GetBilingMonthRequest)},
  { 79, -1, sizeof(::payment::v1alpha1::GetBilingMonthResponse)},
  { 86, -1, sizeof(::payment::v1alpha1::GetPaymentsRequest)},
  { 93, -1, sizeof(::payment::v1alpha1::GetPaymentsResponse)},
  { 100, -1, sizeof(::payment::v1alpha1::CreateSuscriptionRequest)},
  { 108, -1, sizeof(::payment::v1alpha1::CreateSuscriptionResponse)},
  { 115, -1, sizeof(::payment::v1alpha1::CreateProjectRequest)},
  { 122, -1, sizeof(::payment::v1alpha1::CreateProjectResponse)},
  { 128, -1, sizeof(::payment::v1alpha1::CreateInvoiceRequest)},
  { 136, -1, sizeof(::payment::v1alpha1::CreateInvoiceResponse)},
  { 143, -1, sizeof(::payment::v1alpha1::CreateCardRequest)},
  { 151, -1, sizeof(::payment::v1alpha1::CreateCardResponse)},
  { 158, -1, sizeof(::payment::v1alpha1::CancelSuscriptionRequest)},
  { 166, -1, sizeof(::payment::v1alpha1::CancelSuscriptionResponse)},
  { 172, -1, sizeof(::payment::v1alpha1::CreateCustomerRequest)},
  { 178, -1, sizeof(::payment::v1alpha1::CreateCustomerResponse)},
  { 185, -1, sizeof(::payment::v1alpha1::CreatePaymentRequest)},
  { 193, -1, sizeof(::payment::v1alpha1::CreatePaymentResponse)},
  { 200, -1, sizeof(::payment::v1alpha1::DeletePaymentRequest)},
  { 208, -1, sizeof(::payment::v1alpha1::DeletePaymentResponse)},
  { 214, -1, sizeof(::payment::v1alpha1::GetPaymentRequest)},
  { 222, -1, sizeof(::payment::v1alpha1::GetPaymentResponse)},
  { 229, -1, sizeof(::payment::v1alpha1::ListPaymentRequest)},
  { 236, -1, sizeof(::payment::v1alpha1::ListPaymentResponse)},
  { 243, -1, sizeof(::payment::v1alpha1::ListProjectsRequest)},
  { 249, -1, sizeof(::payment::v1alpha1::ListProjectsResponse)},
  { 256, -1, sizeof(::payment::v1alpha1::GetProjectRequest)},
  { 263, -1, sizeof(::payment::v1alpha1::GetProjectResponse)},
  { 270, -1, sizeof(::payment::v1alpha1::DeleteProjectRequest)},
  { 277, -1, sizeof(::payment::v1alpha1::DeleteProjectResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_InvoiceFilterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_InvoiceFilterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeleteCustomerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeleteCustomerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetSuscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetSuscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetCustomerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetCustomerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetBilingMonthRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetBilingMonthResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateSuscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateSuscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateInvoiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateInvoiceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateCardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateCardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CancelSuscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CancelSuscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateCustomerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreateCustomerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreatePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreatePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeletePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeletePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListPaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListProjectsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListProjectsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeleteProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeleteProjectResponse_default_instance_),
};

const char descriptor_table_protodef_payment_2fv1alpha1_2fpayment_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"payment/v1alpha1/payment_api.proto\022\020pa"
  "yment.v1alpha1\032\036payment/v1alpha1/payment"
  ".proto\"\256\001\n\024InvoiceFilterRequest\022\'\n\017organ"
  "ization_id\030\001 \001(\rR\016organizationId\022\022\n\004year"
  "\030\002 \001(\tR\004year\022\024\n\005month\030\003 \001(\tR\005month\022C\n\rcu"
  "stomer_list\030\004 \001(\0132\036.payment.v1alpha1.Cus"
  "tomerListR\014customerList\"\365\001\n\025InvoiceFilte"
  "rResponse\022C\n\rcustomer_list\030\001 \001(\0132\036.payme"
  "nt.v1alpha1.CustomerListR\014customerList\022@"
  "\n\014invoice_list\030\002 \001(\0132\035.payment.v1alpha1."
  "InvoiceListR\013invoiceList\022=\n\013biling_list\030"
  "\003 \001(\0132\034.payment.v1alpha1.BilingListR\nbil"
  "ingList\022\026\n\006status\030\004 \001(\tR\006status\"a\n\025Delet"
  "eCustomerRequest\022\'\n\017organization_id\030\001 \001("
  "\rR\016organizationId\022\037\n\013customer_id\030\002 \001(\tR\n"
  "customerId\"0\n\026DeleteCustomerResponse\022\026\n\006"
  "status\030\001 \001(\tR\006status\"g\n\025GetSuscriptionRe"
  "quest\022\'\n\017organization_id\030\001 \001(\rR\016organiza"
  "tionId\022%\n\016suscription_id\030\002 \001(\tR\rsuscript"
  "ionId\"q\n\026GetSuscriptionResponse\022\?\n\013suscr"
  "iption\030\001 \001(\0132\035.payment.v1alpha1.Suscript"
  "ionR\013suscription\022\026\n\006status\030\002 \001(\tR\006status"
  "\"A\n\026GetOrganizationRequest\022\'\n\017organizati"
  "on_id\030\001 \001(\rR\016organizationId\"i\n\027GetOrgani"
  "zationResponse\0226\n\010customer\030\001 \001(\0132\032.payme"
  "nt.v1alpha1.CustomerR\010customer\022\026\n\006status"
  "\030\002 \001(\tR\006status\"^\n\022GetCustomerRequest\022\'\n\017"
  "organization_id\030\001 \001(\rR\016organizationId\022\037\n"
  "\013customer_id\030\002 \001(\tR\ncustomerId\"e\n\023GetCus"
  "tomerResponse\0226\n\010customer\030\001 \001(\0132\032.paymen"
  "t.v1alpha1.CustomerR\010customer\022\026\n\006status\030"
  "\002 \001(\tR\006status\"_\n\025GetBilingMonthRequest\022\'"
  "\n\017organization_id\030\001 \001(\rR\016organizationId\022"
  "\035\n\ninvoice_id\030\002 \001(\tR\tinvoiceId\"b\n\026GetBil"
  "ingMonthResponse\0220\n\006biling\030\001 \001(\0132\030.payme"
  "nt.v1alpha1.BilingR\006biling\022\026\n\006status\030\002 \001"
  "(\tR\006status\"^\n\022GetPaymentsRequest\022\'\n\017orga"
  "nization_id\030\001 \001(\rR\016organizationId\022\037\n\013cus"
  "tomer_id\030\002 \001(\tR\ncustomerId\"f\n\023GetPayment"
  "sResponse\0227\n\007payment\030\001 \001(\0132\035.payment.v1a"
  "lpha1.PaymentListR\007payment\022\026\n\006status\030\002 \001"
  "(\tR\006status\"\245\001\n\030CreateSuscriptionRequest\022"
  "\'\n\017organization_id\030\001 \001(\rR\016organizationId"
  "\022\037\n\013customer_id\030\002 \001(\tR\ncustomerId\022\?\n\013sus"
  "cription\030\003 \001(\0132\035.payment.v1alpha1.Suscri"
  "ptionR\013suscription\"t\n\031CreateSuscriptionR"
  "esponse\022\?\n\013suscription\030\001 \001(\0132\035.payment.v"
  "1alpha1.SuscriptionR\013suscription\022\026\n\006stat"
  "us\030\002 \001(\tR\006status\"t\n\024CreateProjectRequest"
  "\022\'\n\017organization_id\030\001 \001(\rR\016organizationI"
  "d\0223\n\007project\030\002 \001(\0132\031.payment.v1alpha1.Pr"
  "ojectR\007project\"/\n\025CreateProjectResponse\022"
  "\026\n\006status\030\001 \001(\tR\006status\"v\n\024CreateInvoice"
  "Request\022\'\n\017organization_id\030\001 \001(\rR\016organi"
  "zationId\022\035\n\ninvoice_id\030\002 \001(\tR\tinvoiceId\022"
  "\026\n\006status\030\003 \001(\tR\006status\"g\n\025CreateInvoice"
  "Response\0226\n\010customer\030\001 \001(\0132\032.payment.v1a"
  "lpha1.CustomerR\010customer\022\026\n\006status\030\002 \001(\t"
  "R\006status\"\211\001\n\021CreateCardRequest\022\'\n\017organi"
  "zation_id\030\001 \001(\rR\016organizationId\022\037\n\013custo"
  "mer_id\030\002 \001(\tR\ncustomerId\022*\n\004card\030\003 \001(\0132\026"
  ".payment.v1alpha1.CardR\004card\"G\n\022CreateCa"
  "rdResponse\022\031\n\010token_id\030\001 \001(\tR\007tokenId\022\026\n"
  "\006status\030\002 \001(\tR\006status\"\213\001\n\030CancelSuscript"
  "ionRequest\022\'\n\017organization_id\030\001 \001(\rR\016org"
  "anizationId\022\037\n\013customer_id\030\002 \001(\tR\ncustom"
  "erId\022%\n\016suscription_id\030\003 \001(\tR\rsuscriptio"
  "nId\"3\n\031CancelSuscriptionResponse\022\026\n\006stat"
  "us\030\001 \001(\tR\006status\"O\n\025CreateCustomerReques"
  "t\0226\n\010customer\030\001 \001(\0132\032.payment.v1alpha1.C"
  "ustomerR\010customer\"Q\n\026CreateCustomerRespo"
  "nse\022\037\n\013customer_id\030\001 \001(\tR\ncustomerId\022\026\n\006"
  "status\030\002 \001(\tR\006status\"\225\001\n\024CreatePaymentRe"
  "quest\022\'\n\017organization_id\030\001 \001(\rR\016organiza"
  "tionId\022\037\n\013customer_id\030\002 \001(\tR\ncustomerId\022"
  "3\n\007payment\030\003 \001(\0132\031.payment.v1alpha1.Paym"
  "entR\007payment\"H\n\025CreatePaymentResponse\022\027\n"
  "\007card_id\030\001 \001(\tR\006cardId\022\026\n\006status\030\002 \001(\tR\006"
  "status\"y\n\024DeletePaymentRequest\022\'\n\017organi"
  "zation_id\030\001 \001(\rR\016organizationId\022\037\n\013custo"
  "mer_id\030\002 \001(\tR\ncustomerId\022\027\n\007card_id\030\003 \001("
  "\tR\006cardId\"/\n\025DeletePaymentResponse\022\026\n\006st"
  "atus\030\001 \001(\tR\006status\"v\n\021GetPaymentRequest\022"
  "\'\n\017organization_id\030\001 \001(\rR\016organizationId"
  "\022\037\n\013customer_id\030\002 \001(\tR\ncustomerId\022\027\n\007car"
  "d_id\030\003 \001(\tR\006cardId\"a\n\022GetPaymentResponse"
  "\0223\n\007payment\030\001 \001(\0132\031.payment.v1alpha1.Pay"
  "mentR\007payment\022\026\n\006status\030\002 \001(\tR\006status\"^\n"
  "\022ListPaymentRequest\022\'\n\017organization_id\030\001"
  " \001(\rR\016organizationId\022\037\n\013customer_id\030\002 \001("
  "\tR\ncustomerId\"o\n\023ListPaymentResponse\022@\n\014"
  "payment_list\030\001 \001(\0132\035.payment.v1alpha1.Pa"
  "ymentListR\013paymentList\022\026\n\006status\030\002 \001(\tR\006"
  "status\">\n\023ListProjectsRequest\022\'\n\017organiz"
  "ation_id\030\001 \001(\rR\016organizationId\"p\n\024ListPr"
  "ojectsResponse\022@\n\014project_list\030\001 \001(\0132\035.p"
  "ayment.v1alpha1.ProjectListR\013projectList"
  "\022\026\n\006status\030\002 \001(\tR\006status\"[\n\021GetProjectRe"
  "quest\022\'\n\017organization_id\030\001 \001(\tR\016organiza"
  "tionId\022\035\n\nproject_id\030\002 \001(\tR\tprojectId\"a\n"
  "\022GetProjectResponse\0223\n\007project\030\001 \001(\0132\031.p"
  "ayment.v1alpha1.ProjectR\007project\022\026\n\006stat"
  "us\030\002 \001(\tR\006status\"^\n\024DeleteProjectRequest"
  "\022\'\n\017organization_id\030\001 \001(\rR\016organizationI"
  "d\022\035\n\nproject_id\030\002 \001(\tR\tprojectId\"/\n\025Dele"
  "teProjectResponse\022\026\n\006status\030\001 \001(\tR\006statu"
  "s2\202\017\n\021PaymentAPIService\022n\n\021CreateSuscrip"
  "tion\022*.payment.v1alpha1.CreateSuscriptio"
  "nRequest\032+.payment.v1alpha1.CreateSuscri"
  "ptionResponse\"\000\022Y\n\nCreateCard\022#.payment."
  "v1alpha1.CreateCardRequest\032$.payment.v1a"
  "lpha1.CreateCardResponse\"\000\022n\n\021CancelSusc"
  "ription\022*.payment.v1alpha1.CancelSuscrip"
  "tionRequest\032+.payment.v1alpha1.CancelSus"
  "criptionResponse\"\000\022h\n\017GetOrganization\022(."
  "payment.v1alpha1.GetOrganizationRequest\032"
  ").payment.v1alpha1.GetOrganizationRespon"
  "se\"\000\022e\n\016GetSuscription\022\'.payment.v1alpha"
  "1.GetSuscriptionRequest\032(.payment.v1alph"
  "a1.GetSuscriptionResponse\"\000\022e\n\016CreateCus"
  "tomer\022\'.payment.v1alpha1.CreateCustomerR"
  "equest\032(.payment.v1alpha1.CreateCustomer"
  "Response\"\000\022e\n\016DeleteCustomer\022\'.payment.v"
  "1alpha1.DeleteCustomerRequest\032(.payment."
  "v1alpha1.DeleteCustomerResponse\"\000\022Y\n\nGet"
  "Payment\022#.payment.v1alpha1.GetPaymentReq"
  "uest\032$.payment.v1alpha1.GetPaymentRespon"
  "se\"\000\022\\\n\013GetCustomer\022$.payment.v1alpha1.G"
  "etCustomerRequest\032%.payment.v1alpha1.Get"
  "CustomerResponse\"\000\022e\n\016GetBilingMonth\022\'.p"
  "ayment.v1alpha1.GetBilingMonthRequest\032(."
  "payment.v1alpha1.GetBilingMonthResponse\""
  "\000\022\\\n\013GetPayments\022$.payment.v1alpha1.GetP"
  "aymentsRequest\032%.payment.v1alpha1.GetPay"
  "mentsResponse\"\000\022b\n\rCreatePayment\022&.payme"
  "nt.v1alpha1.CreatePaymentRequest\032\'.payme"
  "nt.v1alpha1.CreatePaymentResponse\"\000\022b\n\rC"
  "reateProject\022&.payment.v1alpha1.CreatePr"
  "ojectRequest\032\'.payment.v1alpha1.CreatePr"
  "ojectResponse\"\000\022_\n\014ListProjects\022%.paymen"
  "t.v1alpha1.ListProjectsRequest\032&.payment"
  ".v1alpha1.ListProjectsResponse\"\000\022b\n\rDele"
  "teProject\022&.payment.v1alpha1.DeleteProje"
  "ctRequest\032\'.payment.v1alpha1.DeleteProje"
  "ctResponse\"\000\022b\n\rDeletePayment\022&.payment."
  "v1alpha1.DeletePaymentRequest\032\'.payment."
  "v1alpha1.DeletePaymentResponse\"\000\022\\\n\013List"
  "Payment\022$.payment.v1alpha1.ListPaymentRe"
  "quest\032%.payment.v1alpha1.ListPaymentResp"
  "onse\"\000\022b\n\rCreateInvoice\022&.payment.v1alph"
  "a1.CreateInvoiceRequest\032\'.payment.v1alph"
  "a1.CreateInvoiceResponse\"\000\022b\n\rInvoiceFil"
  "ter\022&.payment.v1alpha1.InvoiceFilterRequ"
  "est\032\'.payment.v1alpha1.InvoiceFilterResp"
  "onse\"\000B8Z6github.com/cuemby/ccp-payment-"
  "service/payment/v1alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_deps[1] = {
  &::descriptor_table_payment_2fv1alpha1_2fpayment_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto = {
  false, false, 6232, descriptor_table_protodef_payment_2fv1alpha1_2fpayment_5fapi_2eproto, "payment/v1alpha1/payment_api.proto", 
  &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once, descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_deps, 1, 40,
  schemas, file_default_instances, TableStruct_payment_2fv1alpha1_2fpayment_5fapi_2eproto::offsets,
  file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto, file_level_enum_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto, file_level_service_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter() {
  return &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_payment_2fv1alpha1_2fpayment_5fapi_2eproto(&descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto);
namespace payment {
namespace v1alpha1 {

// ===================================================================

class InvoiceFilterRequest::_Internal {
 public:
  static const ::payment::v1alpha1::CustomerList& customer_list(const InvoiceFilterRequest* msg);
};

const ::payment::v1alpha1::CustomerList&
InvoiceFilterRequest::_Internal::customer_list(const InvoiceFilterRequest* msg) {
  return *msg->customer_list_;
}
void InvoiceFilterRequest::clear_customer_list() {
  if (GetArenaForAllocation() == nullptr && customer_list_ != nullptr) {
    delete customer_list_;
  }
  customer_list_ = nullptr;
}
InvoiceFilterRequest::InvoiceFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.InvoiceFilterRequest)
}
InvoiceFilterRequest::InvoiceFilterRequest(const InvoiceFilterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  year_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_year().empty()) {
    year_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_year(), 
      GetArenaForAllocation());
  }
  month_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_month().empty()) {
    month_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_month(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_customer_list()) {
    customer_list_ = new ::payment::v1alpha1::CustomerList(*from.customer_list_);
  } else {
    customer_list_ = nullptr;
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.InvoiceFilterRequest)
}

inline void InvoiceFilterRequest::SharedCtor() {
year_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
month_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&customer_list_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_id_) -
    reinterpret_cast<char*>(&customer_list_)) + sizeof(organization_id_));
}

InvoiceFilterRequest::~InvoiceFilterRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.InvoiceFilterRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvoiceFilterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  year_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  month_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_list_;
}

void InvoiceFilterRequest::ArenaDtor(void* object) {
  InvoiceFilterRequest* _this = reinterpret_cast< InvoiceFilterRequest* >(object);
  (void)_this;
}
void InvoiceFilterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvoiceFilterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvoiceFilterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.InvoiceFilterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  year_.ClearToEmpty();
  month_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && customer_list_ != nullptr) {
    delete customer_list_;
  }
  customer_list_ = nullptr;
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvoiceFilterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string year = 2 [json_name = "year"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_year();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.InvoiceFilterRequest.year"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string month = 3 [json_name = "month"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_month();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.InvoiceFilterRequest.month"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.CustomerList customer_list = 4 [json_name = "customerList"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvoiceFilterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.InvoiceFilterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string year = 2 [json_name = "year"];
  if (!this->_internal_year().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_year().data(), static_cast<int>(this->_internal_year().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.InvoiceFilterRequest.year");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_year(), target);
  }

  // string month = 3 [json_name = "month"];
  if (!this->_internal_month().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_month().data(), static_cast<int>(this->_internal_month().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.InvoiceFilterRequest.month");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_month(), target);
  }

  // .payment.v1alpha1.CustomerList customer_list = 4 [json_name = "customerList"];
  if (this->_internal_has_customer_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::customer_list(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.InvoiceFilterRequest)
  return target;
}

size_t InvoiceFilterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.InvoiceFilterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string year = 2 [json_name = "year"];
  if (!this->_internal_year().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_year());
  }

  // string month = 3 [json_name = "month"];
  if (!this->_internal_month().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_month());
  }

  // .payment.v1alpha1.CustomerList customer_list = 4 [json_name = "customerList"];
  if (this->_internal_has_customer_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_list_);
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvoiceFilterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvoiceFilterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvoiceFilterRequest::GetClassData() const { return &_class_data_; }

void InvoiceFilterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<InvoiceFilterRequest *>(to)->MergeFrom(
      static_cast<const InvoiceFilterRequest &>(from));
}


void InvoiceFilterRequest::MergeFrom(const InvoiceFilterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.InvoiceFilterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_year().empty()) {
    _internal_set_year(from._internal_year());
  }
  if (!from._internal_month().empty()) {
    _internal_set_month(from._internal_month());
  }
  if (from._internal_has_customer_list()) {
    _internal_mutable_customer_list()->::payment::v1alpha1::CustomerList::MergeFrom(from._internal_customer_list());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvoiceFilterRequest::CopyFrom(const InvoiceFilterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.InvoiceFilterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceFilterRequest::IsInitialized() const {
  return true;
}

void InvoiceFilterRequest::InternalSwap(InvoiceFilterRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &year_, GetArenaForAllocation(),
      &other->year_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &month_, GetArenaForAllocation(),
      &other->month_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvoiceFilterRequest, organization_id_)
      + sizeof(InvoiceFilterRequest::organization_id_)
      - PROTOBUF_FIELD_OFFSET(InvoiceFilterRequest, customer_list_)>(
          reinterpret_cast<char*>(&customer_list_),
          reinterpret_cast<char*>(&other->customer_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvoiceFilterRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[0]);
}

// ===================================================================

class InvoiceFilterResponse::_Internal {
 public:
  static const ::payment::v1alpha1::CustomerList& customer_list(const InvoiceFilterResponse* msg);
  static const ::payment::v1alpha1::InvoiceList& invoice_list(const InvoiceFilterResponse* msg);
  static const ::payment::v1alpha1::BilingList& biling_list(const InvoiceFilterResponse* msg);
};

const ::payment::v1alpha1::CustomerList&
InvoiceFilterResponse::_Internal::customer_list(const InvoiceFilterResponse* msg) {
  return *msg->customer_list_;
}
const ::payment::v1alpha1::InvoiceList&
InvoiceFilterResponse::_Internal::invoice_list(const InvoiceFilterResponse* msg) {
  return *msg->invoice_list_;
}
const ::payment::v1alpha1::BilingList&
InvoiceFilterResponse::_Internal::biling_list(const InvoiceFilterResponse* msg) {
  return *msg->biling_list_;
}
void InvoiceFilterResponse::clear_customer_list() {
  if (GetArenaForAllocation() == nullptr && customer_list_ != nullptr) {
    delete customer_list_;
  }
  customer_list_ = nullptr;
}
void InvoiceFilterResponse::clear_invoice_list() {
  if (GetArenaForAllocation() == nullptr && invoice_list_ != nullptr) {
    delete invoice_list_;
  }
  invoice_list_ = nullptr;
}
void InvoiceFilterResponse::clear_biling_list() {
  if (GetArenaForAllocation() == nullptr && biling_list_ != nullptr) {
    delete biling_list_;
  }
  biling_list_ = nullptr;
}
InvoiceFilterResponse::InvoiceFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.InvoiceFilterResponse)
}
InvoiceFilterResponse::InvoiceFilterResponse(const InvoiceFilterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_customer_list()) {
    customer_list_ = new ::payment::v1alpha1::CustomerList(*from.customer_list_);
  } else {
    customer_list_ = nullptr;
  }
  if (from._internal_has_invoice_list()) {
    invoice_list_ = new ::payment::v1alpha1::InvoiceList(*from.invoice_list_);
  } else {
    invoice_list_ = nullptr;
  }
  if (from._internal_has_biling_list()) {
    biling_list_ = new ::payment::v1alpha1::BilingList(*from.biling_list_);
  } else {
    biling_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.InvoiceFilterResponse)
}

inline void InvoiceFilterResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&customer_list_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biling_list_) -
    reinterpret_cast<char*>(&customer_list_)) + sizeof(biling_list_));
}

InvoiceFilterResponse::~InvoiceFilterResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.InvoiceFilterResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvoiceFilterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_list_;
  if (this != internal_default_instance()) delete invoice_list_;
  if (this != internal_default_instance()) delete biling_list_;
}

void InvoiceFilterResponse::ArenaDtor(void* object) {
  InvoiceFilterResponse* _this = reinterpret_cast< InvoiceFilterResponse* >(object);
  (void)_this;
}
void InvoiceFilterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvoiceFilterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvoiceFilterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.InvoiceFilterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && customer_list_ != nullptr) {
    delete customer_list_;
  }
  customer_list_ = nullptr;
  if (GetArenaForAllocation() == nullptr && invoice_list_ != nullptr) {
    delete invoice_list_;
  }
  invoice_list_ = nullptr;
  if (GetArenaForAllocation() == nullptr && biling_list_ != nullptr) {
    delete biling_list_;
  }
  biling_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvoiceFilterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.CustomerList customer_list = 1 [json_name = "customerList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.InvoiceList invoice_list = 2 [json_name = "invoiceList"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_invoice_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.BilingList biling_list = 3 [json_name = "bilingList"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_biling_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 4 [json_name = "status"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.InvoiceFilterResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvoiceFilterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.InvoiceFilterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.CustomerList customer_list = 1 [json_name = "customerList"];
  if (this->_internal_has_customer_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer_list(this), target, stream);
  }

  // .payment.v1alpha1.InvoiceList invoice_list = 2 [json_name = "invoiceList"];
  if (this->_internal_has_invoice_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::invoice_list(this), target, stream);
  }

  // .payment.v1alpha1.BilingList biling_list = 3 [json_name = "bilingList"];
  if (this->_internal_has_biling_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::biling_list(this), target, stream);
  }

  // string status = 4 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.InvoiceFilterResponse.status");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.InvoiceFilterResponse)
  return target;
}

size_t InvoiceFilterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.InvoiceFilterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 4 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.CustomerList customer_list = 1 [json_name = "customerList"];
  if (this->_internal_has_customer_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_list_);
  }

  // .payment.v1alpha1.InvoiceList invoice_list = 2 [json_name = "invoiceList"];
  if (this->_internal_has_invoice_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invoice_list_);
  }

  // .payment.v1alpha1.BilingList biling_list = 3 [json_name = "bilingList"];
  if (this->_internal_has_biling_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *biling_list_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvoiceFilterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvoiceFilterResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvoiceFilterResponse::GetClassData() const { return &_class_data_; }

void InvoiceFilterResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<InvoiceFilterResponse *>(to)->MergeFrom(
      static_cast<const InvoiceFilterResponse &>(from));
}


void InvoiceFilterResponse::MergeFrom(const InvoiceFilterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.InvoiceFilterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_customer_list()) {
    _internal_mutable_customer_list()->::payment::v1alpha1::CustomerList::MergeFrom(from._internal_customer_list());
  }
  if (from._internal_has_invoice_list()) {
    _internal_mutable_invoice_list()->::payment::v1alpha1::InvoiceList::MergeFrom(from._internal_invoice_list());
  }
  if (from._internal_has_biling_list()) {
    _internal_mutable_biling_list()->::payment::v1alpha1::BilingList::MergeFrom(from._internal_biling_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvoiceFilterResponse::CopyFrom(const InvoiceFilterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.InvoiceFilterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceFilterResponse::IsInitialized() const {
  return true;
}

void InvoiceFilterResponse::InternalSwap(InvoiceFilterResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvoiceFilterResponse, biling_list_)
      + sizeof(InvoiceFilterResponse::biling_list_)
      - PROTOBUF_FIELD_OFFSET(InvoiceFilterResponse, customer_list_)>(
          reinterpret_cast<char*>(&customer_list_),
          reinterpret_cast<char*>(&other->customer_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvoiceFilterResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[1]);
}

// ===================================================================

class DeleteCustomerRequest::_Internal {
 public:
};

DeleteCustomerRequest::DeleteCustomerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeleteCustomerRequest)
}
DeleteCustomerRequest::DeleteCustomerRequest(const DeleteCustomerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeleteCustomerRequest)
}

inline void DeleteCustomerRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

DeleteCustomerRequest::~DeleteCustomerRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeleteCustomerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteCustomerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCustomerRequest::ArenaDtor(void* object) {
  DeleteCustomerRequest* _this = reinterpret_cast< DeleteCustomerRequest* >(object);
  (void)_this;
}
void DeleteCustomerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeleteCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCustomerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeleteCustomerRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCustomerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeleteCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeleteCustomerRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeleteCustomerRequest)
  return target;
}

size_t DeleteCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeleteCustomerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteCustomerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteCustomerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteCustomerRequest::GetClassData() const { return &_class_data_; }

void DeleteCustomerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteCustomerRequest *>(to)->MergeFrom(
      static_cast<const DeleteCustomerRequest &>(from));
}


void DeleteCustomerRequest::MergeFrom(const DeleteCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeleteCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteCustomerRequest::CopyFrom(const DeleteCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeleteCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCustomerRequest::IsInitialized() const {
  return true;
}

void DeleteCustomerRequest::InternalSwap(DeleteCustomerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCustomerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[2]);
}

// ===================================================================

class DeleteCustomerResponse::_Internal {
 public:
};

DeleteCustomerResponse::DeleteCustomerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeleteCustomerResponse)
}
DeleteCustomerResponse::DeleteCustomerResponse(const DeleteCustomerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeleteCustomerResponse)
}

inline void DeleteCustomerResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCustomerResponse::~DeleteCustomerResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeleteCustomerResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteCustomerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCustomerResponse::ArenaDtor(void* object) {
  DeleteCustomerResponse* _this = reinterpret_cast< DeleteCustomerResponse* >(object);
  (void)_this;
}
void DeleteCustomerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCustomerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteCustomerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeleteCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCustomerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeleteCustomerResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCustomerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeleteCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeleteCustomerResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeleteCustomerResponse)
  return target;
}

size_t DeleteCustomerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeleteCustomerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteCustomerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteCustomerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteCustomerResponse::GetClassData() const { return &_class_data_; }

void DeleteCustomerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteCustomerResponse *>(to)->MergeFrom(
      static_cast<const DeleteCustomerResponse &>(from));
}


void DeleteCustomerResponse::MergeFrom(const DeleteCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeleteCustomerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteCustomerResponse::CopyFrom(const DeleteCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeleteCustomerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCustomerResponse::IsInitialized() const {
  return true;
}

void DeleteCustomerResponse::InternalSwap(DeleteCustomerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCustomerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[3]);
}

// ===================================================================

class GetSuscriptionRequest::_Internal {
 public:
};

GetSuscriptionRequest::GetSuscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetSuscriptionRequest)
}
GetSuscriptionRequest::GetSuscriptionRequest(const GetSuscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  suscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_suscription_id().empty()) {
    suscription_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_suscription_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetSuscriptionRequest)
}

inline void GetSuscriptionRequest::SharedCtor() {
suscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

GetSuscriptionRequest::~GetSuscriptionRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetSuscriptionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSuscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  suscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSuscriptionRequest::ArenaDtor(void* object) {
  GetSuscriptionRequest* _this = reinterpret_cast< GetSuscriptionRequest* >(object);
  (void)_this;
}
void GetSuscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSuscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSuscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suscription_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSuscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string suscription_id = 2 [json_name = "suscriptionId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_suscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetSuscriptionRequest.suscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSuscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string suscription_id = 2 [json_name = "suscriptionId"];
  if (!this->_internal_suscription_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_suscription_id().data(), static_cast<int>(this->_internal_suscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetSuscriptionRequest.suscription_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_suscription_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetSuscriptionRequest)
  return target;
}

size_t GetSuscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetSuscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string suscription_id = 2 [json_name = "suscriptionId"];
  if (!this->_internal_suscription_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_suscription_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSuscriptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSuscriptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSuscriptionRequest::GetClassData() const { return &_class_data_; }

void GetSuscriptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetSuscriptionRequest *>(to)->MergeFrom(
      static_cast<const GetSuscriptionRequest &>(from));
}


void GetSuscriptionRequest::MergeFrom(const GetSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetSuscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_suscription_id().empty()) {
    _internal_set_suscription_id(from._internal_suscription_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSuscriptionRequest::CopyFrom(const GetSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetSuscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuscriptionRequest::IsInitialized() const {
  return true;
}

void GetSuscriptionRequest::InternalSwap(GetSuscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &suscription_id_, GetArenaForAllocation(),
      &other->suscription_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSuscriptionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[4]);
}

// ===================================================================

class GetSuscriptionResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Suscription& suscription(const GetSuscriptionResponse* msg);
};

const ::payment::v1alpha1::Suscription&
GetSuscriptionResponse::_Internal::suscription(const GetSuscriptionResponse* msg) {
  return *msg->suscription_;
}
void GetSuscriptionResponse::clear_suscription() {
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
}
GetSuscriptionResponse::GetSuscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetSuscriptionResponse)
}
GetSuscriptionResponse::GetSuscriptionResponse(const GetSuscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_suscription()) {
    suscription_ = new ::payment::v1alpha1::Suscription(*from.suscription_);
  } else {
    suscription_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetSuscriptionResponse)
}

inline void GetSuscriptionResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
suscription_ = nullptr;
}

GetSuscriptionResponse::~GetSuscriptionResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetSuscriptionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSuscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete suscription_;
}

void GetSuscriptionResponse::ArenaDtor(void* object) {
  GetSuscriptionResponse* _this = reinterpret_cast< GetSuscriptionResponse* >(object);
  (void)_this;
}
void GetSuscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSuscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSuscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSuscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_suscription(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetSuscriptionResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSuscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::suscription(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetSuscriptionResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetSuscriptionResponse)
  return target;
}

size_t GetSuscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetSuscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *suscription_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSuscriptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSuscriptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSuscriptionResponse::GetClassData() const { return &_class_data_; }

void GetSuscriptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetSuscriptionResponse *>(to)->MergeFrom(
      static_cast<const GetSuscriptionResponse &>(from));
}


void GetSuscriptionResponse::MergeFrom(const GetSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetSuscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_suscription()) {
    _internal_mutable_suscription()->::payment::v1alpha1::Suscription::MergeFrom(from._internal_suscription());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSuscriptionResponse::CopyFrom(const GetSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetSuscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuscriptionResponse::IsInitialized() const {
  return true;
}

void GetSuscriptionResponse::InternalSwap(GetSuscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(suscription_, other->suscription_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSuscriptionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[5]);
}

// ===================================================================

class GetOrganizationRequest::_Internal {
 public:
};

GetOrganizationRequest::GetOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetOrganizationRequest)
}
GetOrganizationRequest::GetOrganizationRequest(const GetOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetOrganizationRequest)
}

inline void GetOrganizationRequest::SharedCtor() {
organization_id_ = 0u;
}

GetOrganizationRequest::~GetOrganizationRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetOrganizationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOrganizationRequest::ArenaDtor(void* object) {
  GetOrganizationRequest* _this = reinterpret_cast< GetOrganizationRequest* >(object);
  (void)_this;
}
void GetOrganizationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetOrganizationRequest)
  return target;
}

size_t GetOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetOrganizationRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationRequest &>(from));
}


void GetOrganizationRequest::MergeFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationRequest::CopyFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationRequest::IsInitialized() const {
  return true;
}

void GetOrganizationRequest::InternalSwap(GetOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[6]);
}

// ===================================================================

class GetOrganizationResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Customer& customer(const GetOrganizationResponse* msg);
};

const ::payment::v1alpha1::Customer&
GetOrganizationResponse::_Internal::customer(const GetOrganizationResponse* msg) {
  return *msg->customer_;
}
void GetOrganizationResponse::clear_customer() {
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
}
GetOrganizationResponse::GetOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetOrganizationResponse)
}
GetOrganizationResponse::GetOrganizationResponse(const GetOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_customer()) {
    customer_ = new ::payment::v1alpha1::Customer(*from.customer_);
  } else {
    customer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetOrganizationResponse)
}

inline void GetOrganizationResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_ = nullptr;
}

GetOrganizationResponse::~GetOrganizationResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetOrganizationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_;
}

void GetOrganizationResponse::ArenaDtor(void* object) {
  GetOrganizationResponse* _this = reinterpret_cast< GetOrganizationResponse* >(object);
  (void)_this;
}
void GetOrganizationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetOrganizationResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetOrganizationResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetOrganizationResponse)
  return target;
}

size_t GetOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetOrganizationResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationResponse &>(from));
}


void GetOrganizationResponse::MergeFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_customer()) {
    _internal_mutable_customer()->::payment::v1alpha1::Customer::MergeFrom(from._internal_customer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationResponse::CopyFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationResponse::IsInitialized() const {
  return true;
}

void GetOrganizationResponse::InternalSwap(GetOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(customer_, other->customer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[7]);
}

// ===================================================================

class GetCustomerRequest::_Internal {
 public:
};

GetCustomerRequest::GetCustomerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetCustomerRequest)
}
GetCustomerRequest::GetCustomerRequest(const GetCustomerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetCustomerRequest)
}

inline void GetCustomerRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

GetCustomerRequest::~GetCustomerRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetCustomerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetCustomerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCustomerRequest::ArenaDtor(void* object) {
  GetCustomerRequest* _this = reinterpret_cast< GetCustomerRequest* >(object);
  (void)_this;
}
void GetCustomerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetCustomerRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCustomerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetCustomerRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetCustomerRequest)
  return target;
}

size_t GetCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetCustomerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCustomerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCustomerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCustomerRequest::GetClassData() const { return &_class_data_; }

void GetCustomerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetCustomerRequest *>(to)->MergeFrom(
      static_cast<const GetCustomerRequest &>(from));
}


void GetCustomerRequest::MergeFrom(const GetCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCustomerRequest::CopyFrom(const GetCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomerRequest::IsInitialized() const {
  return true;
}

void GetCustomerRequest::InternalSwap(GetCustomerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[8]);
}

// ===================================================================

class GetCustomerResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Customer& customer(const GetCustomerResponse* msg);
};

const ::payment::v1alpha1::Customer&
GetCustomerResponse::_Internal::customer(const GetCustomerResponse* msg) {
  return *msg->customer_;
}
void GetCustomerResponse::clear_customer() {
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
}
GetCustomerResponse::GetCustomerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetCustomerResponse)
}
GetCustomerResponse::GetCustomerResponse(const GetCustomerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_customer()) {
    customer_ = new ::payment::v1alpha1::Customer(*from.customer_);
  } else {
    customer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetCustomerResponse)
}

inline void GetCustomerResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_ = nullptr;
}

GetCustomerResponse::~GetCustomerResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetCustomerResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetCustomerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_;
}

void GetCustomerResponse::ArenaDtor(void* object) {
  GetCustomerResponse* _this = reinterpret_cast< GetCustomerResponse* >(object);
  (void)_this;
}
void GetCustomerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCustomerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCustomerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCustomerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetCustomerResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCustomerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetCustomerResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetCustomerResponse)
  return target;
}

size_t GetCustomerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetCustomerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCustomerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCustomerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCustomerResponse::GetClassData() const { return &_class_data_; }

void GetCustomerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetCustomerResponse *>(to)->MergeFrom(
      static_cast<const GetCustomerResponse &>(from));
}


void GetCustomerResponse::MergeFrom(const GetCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetCustomerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_customer()) {
    _internal_mutable_customer()->::payment::v1alpha1::Customer::MergeFrom(from._internal_customer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCustomerResponse::CopyFrom(const GetCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetCustomerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCustomerResponse::IsInitialized() const {
  return true;
}

void GetCustomerResponse::InternalSwap(GetCustomerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(customer_, other->customer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCustomerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[9]);
}

// ===================================================================

class GetBilingMonthRequest::_Internal {
 public:
};

GetBilingMonthRequest::GetBilingMonthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetBilingMonthRequest)
}
GetBilingMonthRequest::GetBilingMonthRequest(const GetBilingMonthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invoice_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invoice_id().empty()) {
    invoice_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invoice_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetBilingMonthRequest)
}

inline void GetBilingMonthRequest::SharedCtor() {
invoice_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

GetBilingMonthRequest::~GetBilingMonthRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetBilingMonthRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBilingMonthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invoice_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBilingMonthRequest::ArenaDtor(void* object) {
  GetBilingMonthRequest* _this = reinterpret_cast< GetBilingMonthRequest* >(object);
  (void)_this;
}
void GetBilingMonthRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBilingMonthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBilingMonthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetBilingMonthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invoice_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBilingMonthRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string invoice_id = 2 [json_name = "invoiceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_invoice_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetBilingMonthRequest.invoice_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBilingMonthRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetBilingMonthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string invoice_id = 2 [json_name = "invoiceId"];
  if (!this->_internal_invoice_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invoice_id().data(), static_cast<int>(this->_internal_invoice_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetBilingMonthRequest.invoice_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_invoice_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetBilingMonthRequest)
  return target;
}

size_t GetBilingMonthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetBilingMonthRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invoice_id = 2 [json_name = "invoiceId"];
  if (!this->_internal_invoice_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invoice_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBilingMonthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBilingMonthRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBilingMonthRequest::GetClassData() const { return &_class_data_; }

void GetBilingMonthRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetBilingMonthRequest *>(to)->MergeFrom(
      static_cast<const GetBilingMonthRequest &>(from));
}


void GetBilingMonthRequest::MergeFrom(const GetBilingMonthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetBilingMonthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invoice_id().empty()) {
    _internal_set_invoice_id(from._internal_invoice_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBilingMonthRequest::CopyFrom(const GetBilingMonthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetBilingMonthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBilingMonthRequest::IsInitialized() const {
  return true;
}

void GetBilingMonthRequest::InternalSwap(GetBilingMonthRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invoice_id_, GetArenaForAllocation(),
      &other->invoice_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBilingMonthRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[10]);
}

// ===================================================================

class GetBilingMonthResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Biling& biling(const GetBilingMonthResponse* msg);
};

const ::payment::v1alpha1::Biling&
GetBilingMonthResponse::_Internal::biling(const GetBilingMonthResponse* msg) {
  return *msg->biling_;
}
void GetBilingMonthResponse::clear_biling() {
  if (GetArenaForAllocation() == nullptr && biling_ != nullptr) {
    delete biling_;
  }
  biling_ = nullptr;
}
GetBilingMonthResponse::GetBilingMonthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetBilingMonthResponse)
}
GetBilingMonthResponse::GetBilingMonthResponse(const GetBilingMonthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_biling()) {
    biling_ = new ::payment::v1alpha1::Biling(*from.biling_);
  } else {
    biling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetBilingMonthResponse)
}

inline void GetBilingMonthResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
biling_ = nullptr;
}

GetBilingMonthResponse::~GetBilingMonthResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetBilingMonthResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBilingMonthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete biling_;
}

void GetBilingMonthResponse::ArenaDtor(void* object) {
  GetBilingMonthResponse* _this = reinterpret_cast< GetBilingMonthResponse* >(object);
  (void)_this;
}
void GetBilingMonthResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBilingMonthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBilingMonthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetBilingMonthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && biling_ != nullptr) {
    delete biling_;
  }
  biling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBilingMonthResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Biling biling = 1 [json_name = "biling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_biling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetBilingMonthResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBilingMonthResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetBilingMonthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Biling biling = 1 [json_name = "biling"];
  if (this->_internal_has_biling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::biling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetBilingMonthResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetBilingMonthResponse)
  return target;
}

size_t GetBilingMonthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetBilingMonthResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Biling biling = 1 [json_name = "biling"];
  if (this->_internal_has_biling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *biling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBilingMonthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBilingMonthResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBilingMonthResponse::GetClassData() const { return &_class_data_; }

void GetBilingMonthResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetBilingMonthResponse *>(to)->MergeFrom(
      static_cast<const GetBilingMonthResponse &>(from));
}


void GetBilingMonthResponse::MergeFrom(const GetBilingMonthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetBilingMonthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_biling()) {
    _internal_mutable_biling()->::payment::v1alpha1::Biling::MergeFrom(from._internal_biling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBilingMonthResponse::CopyFrom(const GetBilingMonthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetBilingMonthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBilingMonthResponse::IsInitialized() const {
  return true;
}

void GetBilingMonthResponse::InternalSwap(GetBilingMonthResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(biling_, other->biling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBilingMonthResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[11]);
}

// ===================================================================

class GetPaymentsRequest::_Internal {
 public:
};

GetPaymentsRequest::GetPaymentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentsRequest)
}
GetPaymentsRequest::GetPaymentsRequest(const GetPaymentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentsRequest)
}

inline void GetPaymentsRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

GetPaymentsRequest::~GetPaymentsRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPaymentsRequest::ArenaDtor(void* object) {
  GetPaymentsRequest* _this = reinterpret_cast< GetPaymentsRequest* >(object);
  (void)_this;
}
void GetPaymentsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentsRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentsRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentsRequest)
  return target;
}

size_t GetPaymentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentsRequest::GetClassData() const { return &_class_data_; }

void GetPaymentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentsRequest *>(to)->MergeFrom(
      static_cast<const GetPaymentsRequest &>(from));
}


void GetPaymentsRequest::MergeFrom(const GetPaymentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentsRequest::CopyFrom(const GetPaymentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentsRequest::IsInitialized() const {
  return true;
}

void GetPaymentsRequest::InternalSwap(GetPaymentsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[12]);
}

// ===================================================================

class GetPaymentsResponse::_Internal {
 public:
  static const ::payment::v1alpha1::PaymentList& payment(const GetPaymentsResponse* msg);
};

const ::payment::v1alpha1::PaymentList&
GetPaymentsResponse::_Internal::payment(const GetPaymentsResponse* msg) {
  return *msg->payment_;
}
void GetPaymentsResponse::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
GetPaymentsResponse::GetPaymentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentsResponse)
}
GetPaymentsResponse::GetPaymentsResponse(const GetPaymentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::PaymentList(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentsResponse)
}

inline void GetPaymentsResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

GetPaymentsResponse::~GetPaymentsResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void GetPaymentsResponse::ArenaDtor(void* object) {
  GetPaymentsResponse* _this = reinterpret_cast< GetPaymentsResponse* >(object);
  (void)_this;
}
void GetPaymentsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.PaymentList payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentsResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.PaymentList payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentsResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentsResponse)
  return target;
}

size_t GetPaymentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.PaymentList payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentsResponse::GetClassData() const { return &_class_data_; }

void GetPaymentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentsResponse *>(to)->MergeFrom(
      static_cast<const GetPaymentsResponse &>(from));
}


void GetPaymentsResponse::MergeFrom(const GetPaymentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::PaymentList::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentsResponse::CopyFrom(const GetPaymentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentsResponse::IsInitialized() const {
  return true;
}

void GetPaymentsResponse::InternalSwap(GetPaymentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[13]);
}

// ===================================================================

class CreateSuscriptionRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Suscription& suscription(const CreateSuscriptionRequest* msg);
};

const ::payment::v1alpha1::Suscription&
CreateSuscriptionRequest::_Internal::suscription(const CreateSuscriptionRequest* msg) {
  return *msg->suscription_;
}
void CreateSuscriptionRequest::clear_suscription() {
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
}
CreateSuscriptionRequest::CreateSuscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateSuscriptionRequest)
}
CreateSuscriptionRequest::CreateSuscriptionRequest(const CreateSuscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_suscription()) {
    suscription_ = new ::payment::v1alpha1::Suscription(*from.suscription_);
  } else {
    suscription_ = nullptr;
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateSuscriptionRequest)
}

inline void CreateSuscriptionRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&suscription_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_id_) -
    reinterpret_cast<char*>(&suscription_)) + sizeof(organization_id_));
}

CreateSuscriptionRequest::~CreateSuscriptionRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateSuscriptionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSuscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete suscription_;
}

void CreateSuscriptionRequest::ArenaDtor(void* object) {
  CreateSuscriptionRequest* _this = reinterpret_cast< CreateSuscriptionRequest* >(object);
  (void)_this;
}
void CreateSuscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSuscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSuscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSuscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateSuscriptionRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.Suscription suscription = 3 [json_name = "suscription"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_suscription(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSuscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateSuscriptionRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // .payment.v1alpha1.Suscription suscription = 3 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::suscription(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateSuscriptionRequest)
  return target;
}

size_t CreateSuscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateSuscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // .payment.v1alpha1.Suscription suscription = 3 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *suscription_);
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSuscriptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSuscriptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSuscriptionRequest::GetClassData() const { return &_class_data_; }

void CreateSuscriptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateSuscriptionRequest *>(to)->MergeFrom(
      static_cast<const CreateSuscriptionRequest &>(from));
}


void CreateSuscriptionRequest::MergeFrom(const CreateSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateSuscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_has_suscription()) {
    _internal_mutable_suscription()->::payment::v1alpha1::Suscription::MergeFrom(from._internal_suscription());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSuscriptionRequest::CopyFrom(const CreateSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateSuscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSuscriptionRequest::IsInitialized() const {
  return true;
}

void CreateSuscriptionRequest::InternalSwap(CreateSuscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSuscriptionRequest, organization_id_)
      + sizeof(CreateSuscriptionRequest::organization_id_)
      - PROTOBUF_FIELD_OFFSET(CreateSuscriptionRequest, suscription_)>(
          reinterpret_cast<char*>(&suscription_),
          reinterpret_cast<char*>(&other->suscription_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSuscriptionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[14]);
}

// ===================================================================

class CreateSuscriptionResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Suscription& suscription(const CreateSuscriptionResponse* msg);
};

const ::payment::v1alpha1::Suscription&
CreateSuscriptionResponse::_Internal::suscription(const CreateSuscriptionResponse* msg) {
  return *msg->suscription_;
}
void CreateSuscriptionResponse::clear_suscription() {
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
}
CreateSuscriptionResponse::CreateSuscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateSuscriptionResponse)
}
CreateSuscriptionResponse::CreateSuscriptionResponse(const CreateSuscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_suscription()) {
    suscription_ = new ::payment::v1alpha1::Suscription(*from.suscription_);
  } else {
    suscription_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateSuscriptionResponse)
}

inline void CreateSuscriptionResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
suscription_ = nullptr;
}

CreateSuscriptionResponse::~CreateSuscriptionResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateSuscriptionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSuscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete suscription_;
}

void CreateSuscriptionResponse::ArenaDtor(void* object) {
  CreateSuscriptionResponse* _this = reinterpret_cast< CreateSuscriptionResponse* >(object);
  (void)_this;
}
void CreateSuscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSuscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSuscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && suscription_ != nullptr) {
    delete suscription_;
  }
  suscription_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSuscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_suscription(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateSuscriptionResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSuscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::suscription(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateSuscriptionResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateSuscriptionResponse)
  return target;
}

size_t CreateSuscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateSuscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Suscription suscription = 1 [json_name = "suscription"];
  if (this->_internal_has_suscription()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *suscription_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSuscriptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSuscriptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSuscriptionResponse::GetClassData() const { return &_class_data_; }

void CreateSuscriptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateSuscriptionResponse *>(to)->MergeFrom(
      static_cast<const CreateSuscriptionResponse &>(from));
}


void CreateSuscriptionResponse::MergeFrom(const CreateSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateSuscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_suscription()) {
    _internal_mutable_suscription()->::payment::v1alpha1::Suscription::MergeFrom(from._internal_suscription());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSuscriptionResponse::CopyFrom(const CreateSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateSuscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSuscriptionResponse::IsInitialized() const {
  return true;
}

void CreateSuscriptionResponse::InternalSwap(CreateSuscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(suscription_, other->suscription_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSuscriptionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[15]);
}

// ===================================================================

class CreateProjectRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Project& project(const CreateProjectRequest* msg);
};

const ::payment::v1alpha1::Project&
CreateProjectRequest::_Internal::project(const CreateProjectRequest* msg) {
  return *msg->project_;
}
void CreateProjectRequest::clear_project() {
  if (GetArenaForAllocation() == nullptr && project_ != nullptr) {
    delete project_;
  }
  project_ = nullptr;
}
CreateProjectRequest::CreateProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateProjectRequest)
}
CreateProjectRequest::CreateProjectRequest(const CreateProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_project()) {
    project_ = new ::payment::v1alpha1::Project(*from.project_);
  } else {
    project_ = nullptr;
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateProjectRequest)
}

inline void CreateProjectRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&project_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_id_) -
    reinterpret_cast<char*>(&project_)) + sizeof(organization_id_));
}

CreateProjectRequest::~CreateProjectRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete project_;
}

void CreateProjectRequest::ArenaDtor(void* object) {
  CreateProjectRequest* _this = reinterpret_cast< CreateProjectRequest* >(object);
  (void)_this;
}
void CreateProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && project_ != nullptr) {
    delete project_;
  }
  project_ = nullptr;
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.Project project = 2 [json_name = "project"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_project(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // .payment.v1alpha1.Project project = 2 [json_name = "project"];
  if (this->_internal_has_project()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::project(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateProjectRequest)
  return target;
}

size_t CreateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .payment.v1alpha1.Project project = 2 [json_name = "project"];
  if (this->_internal_has_project()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *project_);
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectRequest::GetClassData() const { return &_class_data_; }

void CreateProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateProjectRequest *>(to)->MergeFrom(
      static_cast<const CreateProjectRequest &>(from));
}


void CreateProjectRequest::MergeFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_project()) {
    _internal_mutable_project()->::payment::v1alpha1::Project::MergeFrom(from._internal_project());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectRequest::CopyFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectRequest::IsInitialized() const {
  return true;
}

void CreateProjectRequest::InternalSwap(CreateProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProjectRequest, organization_id_)
      + sizeof(CreateProjectRequest::organization_id_)
      - PROTOBUF_FIELD_OFFSET(CreateProjectRequest, project_)>(
          reinterpret_cast<char*>(&project_),
          reinterpret_cast<char*>(&other->project_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[16]);
}

// ===================================================================

class CreateProjectResponse::_Internal {
 public:
};

CreateProjectResponse::CreateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateProjectResponse)
}
CreateProjectResponse::CreateProjectResponse(const CreateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateProjectResponse)
}

inline void CreateProjectResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateProjectResponse::~CreateProjectResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateProjectResponse::ArenaDtor(void* object) {
  CreateProjectResponse* _this = reinterpret_cast< CreateProjectResponse* >(object);
  (void)_this;
}
void CreateProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateProjectResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateProjectResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateProjectResponse)
  return target;
}

size_t CreateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectResponse::GetClassData() const { return &_class_data_; }

void CreateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateProjectResponse *>(to)->MergeFrom(
      static_cast<const CreateProjectResponse &>(from));
}


void CreateProjectResponse::MergeFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectResponse::CopyFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectResponse::IsInitialized() const {
  return true;
}

void CreateProjectResponse::InternalSwap(CreateProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[17]);
}

// ===================================================================

class CreateInvoiceRequest::_Internal {
 public:
};

CreateInvoiceRequest::CreateInvoiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateInvoiceRequest)
}
CreateInvoiceRequest::CreateInvoiceRequest(const CreateInvoiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invoice_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invoice_id().empty()) {
    invoice_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invoice_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateInvoiceRequest)
}

inline void CreateInvoiceRequest::SharedCtor() {
invoice_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

CreateInvoiceRequest::~CreateInvoiceRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateInvoiceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateInvoiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invoice_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateInvoiceRequest::ArenaDtor(void* object) {
  CreateInvoiceRequest* _this = reinterpret_cast< CreateInvoiceRequest* >(object);
  (void)_this;
}
void CreateInvoiceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInvoiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateInvoiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invoice_id_.ClearToEmpty();
  status_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInvoiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string invoice_id = 2 [json_name = "invoiceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_invoice_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateInvoiceRequest.invoice_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 3 [json_name = "status"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateInvoiceRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInvoiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string invoice_id = 2 [json_name = "invoiceId"];
  if (!this->_internal_invoice_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invoice_id().data(), static_cast<int>(this->_internal_invoice_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateInvoiceRequest.invoice_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_invoice_id(), target);
  }

  // string status = 3 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateInvoiceRequest.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateInvoiceRequest)
  return target;
}

size_t CreateInvoiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateInvoiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invoice_id = 2 [json_name = "invoiceId"];
  if (!this->_internal_invoice_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invoice_id());
  }

  // string status = 3 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInvoiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateInvoiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInvoiceRequest::GetClassData() const { return &_class_data_; }

void CreateInvoiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateInvoiceRequest *>(to)->MergeFrom(
      static_cast<const CreateInvoiceRequest &>(from));
}


void CreateInvoiceRequest::MergeFrom(const CreateInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateInvoiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invoice_id().empty()) {
    _internal_set_invoice_id(from._internal_invoice_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInvoiceRequest::CopyFrom(const CreateInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateInvoiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInvoiceRequest::IsInitialized() const {
  return true;
}

void CreateInvoiceRequest::InternalSwap(CreateInvoiceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invoice_id_, GetArenaForAllocation(),
      &other->invoice_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInvoiceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[18]);
}

// ===================================================================

class CreateInvoiceResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Customer& customer(const CreateInvoiceResponse* msg);
};

const ::payment::v1alpha1::Customer&
CreateInvoiceResponse::_Internal::customer(const CreateInvoiceResponse* msg) {
  return *msg->customer_;
}
void CreateInvoiceResponse::clear_customer() {
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
}
CreateInvoiceResponse::CreateInvoiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateInvoiceResponse)
}
CreateInvoiceResponse::CreateInvoiceResponse(const CreateInvoiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_customer()) {
    customer_ = new ::payment::v1alpha1::Customer(*from.customer_);
  } else {
    customer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateInvoiceResponse)
}

inline void CreateInvoiceResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
customer_ = nullptr;
}

CreateInvoiceResponse::~CreateInvoiceResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateInvoiceResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateInvoiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_;
}

void CreateInvoiceResponse::ArenaDtor(void* object) {
  CreateInvoiceResponse* _this = reinterpret_cast< CreateInvoiceResponse* >(object);
  (void)_this;
}
void CreateInvoiceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInvoiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateInvoiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateInvoiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInvoiceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateInvoiceResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInvoiceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateInvoiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateInvoiceResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateInvoiceResponse)
  return target;
}

size_t CreateInvoiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateInvoiceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInvoiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateInvoiceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInvoiceResponse::GetClassData() const { return &_class_data_; }

void CreateInvoiceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateInvoiceResponse *>(to)->MergeFrom(
      static_cast<const CreateInvoiceResponse &>(from));
}


void CreateInvoiceResponse::MergeFrom(const CreateInvoiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateInvoiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_customer()) {
    _internal_mutable_customer()->::payment::v1alpha1::Customer::MergeFrom(from._internal_customer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInvoiceResponse::CopyFrom(const CreateInvoiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateInvoiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInvoiceResponse::IsInitialized() const {
  return true;
}

void CreateInvoiceResponse::InternalSwap(CreateInvoiceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(customer_, other->customer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInvoiceResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[19]);
}

// ===================================================================

class CreateCardRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Card& card(const CreateCardRequest* msg);
};

const ::payment::v1alpha1::Card&
CreateCardRequest::_Internal::card(const CreateCardRequest* msg) {
  return *msg->card_;
}
void CreateCardRequest::clear_card() {
  if (GetArenaForAllocation() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
}
CreateCardRequest::CreateCardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateCardRequest)
}
CreateCardRequest::CreateCardRequest(const CreateCardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_card()) {
    card_ = new ::payment::v1alpha1::Card(*from.card_);
  } else {
    card_ = nullptr;
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateCardRequest)
}

inline void CreateCardRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&card_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_id_) -
    reinterpret_cast<char*>(&card_)) + sizeof(organization_id_));
}

CreateCardRequest::~CreateCardRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateCardRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateCardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete card_;
}

void CreateCardRequest::ArenaDtor(void* object) {
  CreateCardRequest* _this = reinterpret_cast< CreateCardRequest* >(object);
  (void)_this;
}
void CreateCardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateCardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateCardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateCardRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.Card card = 3 [json_name = "card"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateCardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateCardRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // .payment.v1alpha1.Card card = 3 [json_name = "card"];
  if (this->_internal_has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateCardRequest)
  return target;
}

size_t CreateCardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateCardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // .payment.v1alpha1.Card card = 3 [json_name = "card"];
  if (this->_internal_has_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *card_);
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCardRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateCardRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCardRequest::GetClassData() const { return &_class_data_; }

void CreateCardRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateCardRequest *>(to)->MergeFrom(
      static_cast<const CreateCardRequest &>(from));
}


void CreateCardRequest::MergeFrom(const CreateCardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateCardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_has_card()) {
    _internal_mutable_card()->::payment::v1alpha1::Card::MergeFrom(from._internal_card());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCardRequest::CopyFrom(const CreateCardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCardRequest::IsInitialized() const {
  return true;
}

void CreateCardRequest::InternalSwap(CreateCardRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCardRequest, organization_id_)
      + sizeof(CreateCardRequest::organization_id_)
      - PROTOBUF_FIELD_OFFSET(CreateCardRequest, card_)>(
          reinterpret_cast<char*>(&card_),
          reinterpret_cast<char*>(&other->card_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCardRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[20]);
}

// ===================================================================

class CreateCardResponse::_Internal {
 public:
};

CreateCardResponse::CreateCardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateCardResponse)
}
CreateCardResponse::CreateCardResponse(const CreateCardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token_id().empty()) {
    token_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateCardResponse)
}

inline void CreateCardResponse::SharedCtor() {
token_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateCardResponse::~CreateCardResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateCardResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateCardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateCardResponse::ArenaDtor(void* object) {
  CreateCardResponse* _this = reinterpret_cast< CreateCardResponse* >(object);
  (void)_this;
}
void CreateCardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateCardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateCardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_id_.ClearToEmpty();
  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token_id = 1 [json_name = "tokenId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateCardResponse.token_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateCardResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateCardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token_id = 1 [json_name = "tokenId"];
  if (!this->_internal_token_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token_id().data(), static_cast<int>(this->_internal_token_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateCardResponse.token_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token_id(), target);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateCardResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateCardResponse)
  return target;
}

size_t CreateCardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateCardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_id = 1 [json_name = "tokenId"];
  if (!this->_internal_token_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token_id());
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCardResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateCardResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCardResponse::GetClassData() const { return &_class_data_; }

void CreateCardResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateCardResponse *>(to)->MergeFrom(
      static_cast<const CreateCardResponse &>(from));
}


void CreateCardResponse::MergeFrom(const CreateCardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateCardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _internal_set_token_id(from._internal_token_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCardResponse::CopyFrom(const CreateCardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateCardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCardResponse::IsInitialized() const {
  return true;
}

void CreateCardResponse::InternalSwap(CreateCardResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_id_, GetArenaForAllocation(),
      &other->token_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCardResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[21]);
}

// ===================================================================

class CancelSuscriptionRequest::_Internal {
 public:
};

CancelSuscriptionRequest::CancelSuscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CancelSuscriptionRequest)
}
CancelSuscriptionRequest::CancelSuscriptionRequest(const CancelSuscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  suscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_suscription_id().empty()) {
    suscription_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_suscription_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CancelSuscriptionRequest)
}

inline void CancelSuscriptionRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
suscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

CancelSuscriptionRequest::~CancelSuscriptionRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CancelSuscriptionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CancelSuscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  suscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelSuscriptionRequest::ArenaDtor(void* object) {
  CancelSuscriptionRequest* _this = reinterpret_cast< CancelSuscriptionRequest* >(object);
  (void)_this;
}
void CancelSuscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelSuscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelSuscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CancelSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  suscription_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelSuscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CancelSuscriptionRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string suscription_id = 3 [json_name = "suscriptionId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_suscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CancelSuscriptionRequest.suscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelSuscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CancelSuscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CancelSuscriptionRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string suscription_id = 3 [json_name = "suscriptionId"];
  if (!this->_internal_suscription_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_suscription_id().data(), static_cast<int>(this->_internal_suscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CancelSuscriptionRequest.suscription_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_suscription_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CancelSuscriptionRequest)
  return target;
}

size_t CancelSuscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CancelSuscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string suscription_id = 3 [json_name = "suscriptionId"];
  if (!this->_internal_suscription_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_suscription_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelSuscriptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CancelSuscriptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelSuscriptionRequest::GetClassData() const { return &_class_data_; }

void CancelSuscriptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CancelSuscriptionRequest *>(to)->MergeFrom(
      static_cast<const CancelSuscriptionRequest &>(from));
}


void CancelSuscriptionRequest::MergeFrom(const CancelSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CancelSuscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (!from._internal_suscription_id().empty()) {
    _internal_set_suscription_id(from._internal_suscription_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelSuscriptionRequest::CopyFrom(const CancelSuscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CancelSuscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSuscriptionRequest::IsInitialized() const {
  return true;
}

void CancelSuscriptionRequest::InternalSwap(CancelSuscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &suscription_id_, GetArenaForAllocation(),
      &other->suscription_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelSuscriptionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[22]);
}

// ===================================================================

class CancelSuscriptionResponse::_Internal {
 public:
};

CancelSuscriptionResponse::CancelSuscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CancelSuscriptionResponse)
}
CancelSuscriptionResponse::CancelSuscriptionResponse(const CancelSuscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CancelSuscriptionResponse)
}

inline void CancelSuscriptionResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CancelSuscriptionResponse::~CancelSuscriptionResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CancelSuscriptionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CancelSuscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelSuscriptionResponse::ArenaDtor(void* object) {
  CancelSuscriptionResponse* _this = reinterpret_cast< CancelSuscriptionResponse* >(object);
  (void)_this;
}
void CancelSuscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelSuscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelSuscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CancelSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelSuscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CancelSuscriptionResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelSuscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CancelSuscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CancelSuscriptionResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CancelSuscriptionResponse)
  return target;
}

size_t CancelSuscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CancelSuscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelSuscriptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CancelSuscriptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelSuscriptionResponse::GetClassData() const { return &_class_data_; }

void CancelSuscriptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CancelSuscriptionResponse *>(to)->MergeFrom(
      static_cast<const CancelSuscriptionResponse &>(from));
}


void CancelSuscriptionResponse::MergeFrom(const CancelSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CancelSuscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelSuscriptionResponse::CopyFrom(const CancelSuscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CancelSuscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSuscriptionResponse::IsInitialized() const {
  return true;
}

void CancelSuscriptionResponse::InternalSwap(CancelSuscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelSuscriptionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[23]);
}

// ===================================================================

class CreateCustomerRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Customer& customer(const CreateCustomerRequest* msg);
};

const ::payment::v1alpha1::Customer&
CreateCustomerRequest::_Internal::customer(const CreateCustomerRequest* msg) {
  return *msg->customer_;
}
void CreateCustomerRequest::clear_customer() {
  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
}
CreateCustomerRequest::CreateCustomerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateCustomerRequest)
}
CreateCustomerRequest::CreateCustomerRequest(const CreateCustomerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_customer()) {
    customer_ = new ::payment::v1alpha1::Customer(*from.customer_);
  } else {
    customer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateCustomerRequest)
}

inline void CreateCustomerRequest::SharedCtor() {
customer_ = nullptr;
}

CreateCustomerRequest::~CreateCustomerRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateCustomerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateCustomerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete customer_;
}

void CreateCustomerRequest::ArenaDtor(void* object) {
  CreateCustomerRequest* _this = reinterpret_cast< CreateCustomerRequest* >(object);
  (void)_this;
}
void CreateCustomerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && customer_ != nullptr) {
    delete customer_;
  }
  customer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCustomerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCustomerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateCustomerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateCustomerRequest)
  return target;
}

size_t CreateCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateCustomerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .payment.v1alpha1.Customer customer = 1 [json_name = "customer"];
  if (this->_internal_has_customer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCustomerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateCustomerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCustomerRequest::GetClassData() const { return &_class_data_; }

void CreateCustomerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateCustomerRequest *>(to)->MergeFrom(
      static_cast<const CreateCustomerRequest &>(from));
}


void CreateCustomerRequest::MergeFrom(const CreateCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_customer()) {
    _internal_mutable_customer()->::payment::v1alpha1::Customer::MergeFrom(from._internal_customer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCustomerRequest::CopyFrom(const CreateCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCustomerRequest::IsInitialized() const {
  return true;
}

void CreateCustomerRequest::InternalSwap(CreateCustomerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(customer_, other->customer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCustomerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[24]);
}

// ===================================================================

class CreateCustomerResponse::_Internal {
 public:
};

CreateCustomerResponse::CreateCustomerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreateCustomerResponse)
}
CreateCustomerResponse::CreateCustomerResponse(const CreateCustomerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreateCustomerResponse)
}

inline void CreateCustomerResponse::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateCustomerResponse::~CreateCustomerResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreateCustomerResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateCustomerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateCustomerResponse::ArenaDtor(void* object) {
  CreateCustomerResponse* _this = reinterpret_cast< CreateCustomerResponse* >(object);
  (void)_this;
}
void CreateCustomerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCustomerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateCustomerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreateCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCustomerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string customer_id = 1 [json_name = "customerId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateCustomerResponse.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreateCustomerResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCustomerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreateCustomerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_id = 1 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateCustomerResponse.customer_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_id(), target);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreateCustomerResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreateCustomerResponse)
  return target;
}

size_t CreateCustomerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreateCustomerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 1 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCustomerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateCustomerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCustomerResponse::GetClassData() const { return &_class_data_; }

void CreateCustomerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateCustomerResponse *>(to)->MergeFrom(
      static_cast<const CreateCustomerResponse &>(from));
}


void CreateCustomerResponse::MergeFrom(const CreateCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreateCustomerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCustomerResponse::CopyFrom(const CreateCustomerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreateCustomerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCustomerResponse::IsInitialized() const {
  return true;
}

void CreateCustomerResponse::InternalSwap(CreateCustomerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCustomerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[25]);
}

// ===================================================================

class CreatePaymentRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const CreatePaymentRequest* msg);
};

const ::payment::v1alpha1::Payment&
CreatePaymentRequest::_Internal::payment(const CreatePaymentRequest* msg) {
  return *msg->payment_;
}
void CreatePaymentRequest::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
CreatePaymentRequest::CreatePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreatePaymentRequest)
}
CreatePaymentRequest::CreatePaymentRequest(const CreatePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreatePaymentRequest)
}

inline void CreatePaymentRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&payment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_id_) -
    reinterpret_cast<char*>(&payment_)) + sizeof(organization_id_));
}

CreatePaymentRequest::~CreatePaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreatePaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreatePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void CreatePaymentRequest::ArenaDtor(void* object) {
  CreatePaymentRequest* _this = reinterpret_cast< CreatePaymentRequest* >(object);
  (void)_this;
}
void CreatePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreatePaymentRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .payment.v1alpha1.Payment payment = 3 [json_name = "payment"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreatePaymentRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // .payment.v1alpha1.Payment payment = 3 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::payment(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreatePaymentRequest)
  return target;
}

size_t CreatePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreatePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // .payment.v1alpha1.Payment payment = 3 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentRequest::GetClassData() const { return &_class_data_; }

void CreatePaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreatePaymentRequest *>(to)->MergeFrom(
      static_cast<const CreatePaymentRequest &>(from));
}


void CreatePaymentRequest::MergeFrom(const CreatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreatePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentRequest::CopyFrom(const CreatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreatePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentRequest::IsInitialized() const {
  return true;
}

void CreatePaymentRequest::InternalSwap(CreatePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreatePaymentRequest, organization_id_)
      + sizeof(CreatePaymentRequest::organization_id_)
      - PROTOBUF_FIELD_OFFSET(CreatePaymentRequest, payment_)>(
          reinterpret_cast<char*>(&payment_),
          reinterpret_cast<char*>(&other->payment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[26]);
}

// ===================================================================

class CreatePaymentResponse::_Internal {
 public:
};

CreatePaymentResponse::CreatePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreatePaymentResponse)
}
CreatePaymentResponse::CreatePaymentResponse(const CreatePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_id().empty()) {
    card_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreatePaymentResponse)
}

inline void CreatePaymentResponse::SharedCtor() {
card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreatePaymentResponse::~CreatePaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreatePaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreatePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  card_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreatePaymentResponse::ArenaDtor(void* object) {
  CreatePaymentResponse* _this = reinterpret_cast< CreatePaymentResponse* >(object);
  (void)_this;
}
void CreatePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_id_.ClearToEmpty();
  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string card_id = 1 [json_name = "cardId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_card_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreatePaymentResponse.card_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreatePaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string card_id = 1 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_id().data(), static_cast<int>(this->_internal_card_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreatePaymentResponse.card_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_card_id(), target);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreatePaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreatePaymentResponse)
  return target;
}

size_t CreatePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreatePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_id = 1 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_id());
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentResponse::GetClassData() const { return &_class_data_; }

void CreatePaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreatePaymentResponse *>(to)->MergeFrom(
      static_cast<const CreatePaymentResponse &>(from));
}


void CreatePaymentResponse::MergeFrom(const CreatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreatePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_card_id().empty()) {
    _internal_set_card_id(from._internal_card_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentResponse::CopyFrom(const CreatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreatePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentResponse::IsInitialized() const {
  return true;
}

void CreatePaymentResponse::InternalSwap(CreatePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_id_, GetArenaForAllocation(),
      &other->card_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[27]);
}

// ===================================================================

class DeletePaymentRequest::_Internal {
 public:
};

DeletePaymentRequest::DeletePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeletePaymentRequest)
}
DeletePaymentRequest::DeletePaymentRequest(const DeletePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_id().empty()) {
    card_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeletePaymentRequest)
}

inline void DeletePaymentRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

DeletePaymentRequest::~DeletePaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeletePaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePaymentRequest::ArenaDtor(void* object) {
  DeletePaymentRequest* _this = reinterpret_cast< DeletePaymentRequest* >(object);
  (void)_this;
}
void DeletePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeletePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  card_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_id = 3 [json_name = "cardId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.card_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeletePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string card_id = 3 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_id().data(), static_cast<int>(this->_internal_card_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.card_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeletePaymentRequest)
  return target;
}

size_t DeletePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeletePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string card_id = 3 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePaymentRequest::GetClassData() const { return &_class_data_; }

void DeletePaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePaymentRequest *>(to)->MergeFrom(
      static_cast<const DeletePaymentRequest &>(from));
}


void DeletePaymentRequest::MergeFrom(const DeletePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeletePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (!from._internal_card_id().empty()) {
    _internal_set_card_id(from._internal_card_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePaymentRequest::CopyFrom(const DeletePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeletePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePaymentRequest::IsInitialized() const {
  return true;
}

void DeletePaymentRequest::InternalSwap(DeletePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_id_, GetArenaForAllocation(),
      &other->card_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[28]);
}

// ===================================================================

class DeletePaymentResponse::_Internal {
 public:
};

DeletePaymentResponse::DeletePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeletePaymentResponse)
}
DeletePaymentResponse::DeletePaymentResponse(const DeletePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeletePaymentResponse)
}

inline void DeletePaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeletePaymentResponse::~DeletePaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeletePaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePaymentResponse::ArenaDtor(void* object) {
  DeletePaymentResponse* _this = reinterpret_cast< DeletePaymentResponse* >(object);
  (void)_this;
}
void DeletePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeletePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeletePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeletePaymentResponse)
  return target;
}

size_t DeletePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeletePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePaymentResponse::GetClassData() const { return &_class_data_; }

void DeletePaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePaymentResponse *>(to)->MergeFrom(
      static_cast<const DeletePaymentResponse &>(from));
}


void DeletePaymentResponse::MergeFrom(const DeletePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeletePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePaymentResponse::CopyFrom(const DeletePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeletePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePaymentResponse::IsInitialized() const {
  return true;
}

void DeletePaymentResponse::InternalSwap(DeletePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[29]);
}

// ===================================================================

class GetPaymentRequest::_Internal {
 public:
};

GetPaymentRequest::GetPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentRequest)
}
GetPaymentRequest::GetPaymentRequest(const GetPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_id().empty()) {
    card_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentRequest)
}

inline void GetPaymentRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

GetPaymentRequest::~GetPaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPaymentRequest::ArenaDtor(void* object) {
  GetPaymentRequest* _this = reinterpret_cast< GetPaymentRequest* >(object);
  (void)_this;
}
void GetPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  card_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_id = 3 [json_name = "cardId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentRequest.card_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  // string card_id = 3 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_id().data(), static_cast<int>(this->_internal_card_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentRequest.card_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentRequest)
  return target;
}

size_t GetPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string card_id = 3 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentRequest::GetClassData() const { return &_class_data_; }

void GetPaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentRequest *>(to)->MergeFrom(
      static_cast<const GetPaymentRequest &>(from));
}


void GetPaymentRequest::MergeFrom(const GetPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (!from._internal_card_id().empty()) {
    _internal_set_card_id(from._internal_card_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentRequest::CopyFrom(const GetPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentRequest::IsInitialized() const {
  return true;
}

void GetPaymentRequest::InternalSwap(GetPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_id_, GetArenaForAllocation(),
      &other->card_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[30]);
}

// ===================================================================

class GetPaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const GetPaymentResponse* msg);
};

const ::payment::v1alpha1::Payment&
GetPaymentResponse::_Internal::payment(const GetPaymentResponse* msg) {
  return *msg->payment_;
}
void GetPaymentResponse::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
GetPaymentResponse::GetPaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentResponse)
}
GetPaymentResponse::GetPaymentResponse(const GetPaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentResponse)
}

inline void GetPaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

GetPaymentResponse::~GetPaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void GetPaymentResponse::ArenaDtor(void* object) {
  GetPaymentResponse* _this = reinterpret_cast< GetPaymentResponse* >(object);
  (void)_this;
}
void GetPaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentResponse)
  return target;
}

size_t GetPaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentResponse::GetClassData() const { return &_class_data_; }

void GetPaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentResponse *>(to)->MergeFrom(
      static_cast<const GetPaymentResponse &>(from));
}


void GetPaymentResponse::MergeFrom(const GetPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentResponse::CopyFrom(const GetPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentResponse::IsInitialized() const {
  return true;
}

void GetPaymentResponse::InternalSwap(GetPaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[31]);
}

// ===================================================================

class ListPaymentRequest::_Internal {
 public:
};

ListPaymentRequest::ListPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListPaymentRequest)
}
ListPaymentRequest::ListPaymentRequest(const ListPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListPaymentRequest)
}

inline void ListPaymentRequest::SharedCtor() {
customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

ListPaymentRequest::~ListPaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListPaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListPaymentRequest::ArenaDtor(void* object) {
  ListPaymentRequest* _this = reinterpret_cast< ListPaymentRequest* >(object);
  (void)_this;
}
void ListPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string customer_id = 2 [json_name = "customerId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListPaymentRequest.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListPaymentRequest.customer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_customer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListPaymentRequest)
  return target;
}

size_t ListPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 2 [json_name = "customerId"];
  if (!this->_internal_customer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPaymentRequest::GetClassData() const { return &_class_data_; }

void ListPaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListPaymentRequest *>(to)->MergeFrom(
      static_cast<const ListPaymentRequest &>(from));
}


void ListPaymentRequest::MergeFrom(const ListPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_id().empty()) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPaymentRequest::CopyFrom(const ListPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPaymentRequest::IsInitialized() const {
  return true;
}

void ListPaymentRequest::InternalSwap(ListPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &customer_id_, GetArenaForAllocation(),
      &other->customer_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[32]);
}

// ===================================================================

class ListPaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::PaymentList& payment_list(const ListPaymentResponse* msg);
};

const ::payment::v1alpha1::PaymentList&
ListPaymentResponse::_Internal::payment_list(const ListPaymentResponse* msg) {
  return *msg->payment_list_;
}
void ListPaymentResponse::clear_payment_list() {
  if (GetArenaForAllocation() == nullptr && payment_list_ != nullptr) {
    delete payment_list_;
  }
  payment_list_ = nullptr;
}
ListPaymentResponse::ListPaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListPaymentResponse)
}
ListPaymentResponse::ListPaymentResponse(const ListPaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment_list()) {
    payment_list_ = new ::payment::v1alpha1::PaymentList(*from.payment_list_);
  } else {
    payment_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListPaymentResponse)
}

inline void ListPaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_list_ = nullptr;
}

ListPaymentResponse::~ListPaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListPaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_list_;
}

void ListPaymentResponse::ArenaDtor(void* object) {
  ListPaymentResponse* _this = reinterpret_cast< ListPaymentResponse* >(object);
  (void)_this;
}
void ListPaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_list_ != nullptr) {
    delete payment_list_;
  }
  payment_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListPaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListPaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
  if (this->_internal_has_payment_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment_list(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListPaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListPaymentResponse)
  return target;
}

size_t ListPaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListPaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
  if (this->_internal_has_payment_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_list_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPaymentResponse::GetClassData() const { return &_class_data_; }

void ListPaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListPaymentResponse *>(to)->MergeFrom(
      static_cast<const ListPaymentResponse &>(from));
}


void ListPaymentResponse::MergeFrom(const ListPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment_list()) {
    _internal_mutable_payment_list()->::payment::v1alpha1::PaymentList::MergeFrom(from._internal_payment_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPaymentResponse::CopyFrom(const ListPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPaymentResponse::IsInitialized() const {
  return true;
}

void ListPaymentResponse::InternalSwap(ListPaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_list_, other->payment_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[33]);
}

// ===================================================================

class ListProjectsRequest::_Internal {
 public:
};

ListProjectsRequest::ListProjectsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListProjectsRequest)
}
ListProjectsRequest::ListProjectsRequest(const ListProjectsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListProjectsRequest)
}

inline void ListProjectsRequest::SharedCtor() {
organization_id_ = 0u;
}

ListProjectsRequest::~ListProjectsRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListProjectsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListProjectsRequest::ArenaDtor(void* object) {
  ListProjectsRequest* _this = reinterpret_cast< ListProjectsRequest* >(object);
  (void)_this;
}
void ListProjectsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListProjectsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListProjectsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListProjectsRequest)
  return target;
}

size_t ListProjectsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListProjectsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectsRequest::GetClassData() const { return &_class_data_; }

void ListProjectsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectsRequest *>(to)->MergeFrom(
      static_cast<const ListProjectsRequest &>(from));
}


void ListProjectsRequest::MergeFrom(const ListProjectsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListProjectsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectsRequest::CopyFrom(const ListProjectsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListProjectsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectsRequest::IsInitialized() const {
  return true;
}

void ListProjectsRequest::InternalSwap(ListProjectsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[34]);
}

// ===================================================================

class ListProjectsResponse::_Internal {
 public:
  static const ::payment::v1alpha1::ProjectList& project_list(const ListProjectsResponse* msg);
};

const ::payment::v1alpha1::ProjectList&
ListProjectsResponse::_Internal::project_list(const ListProjectsResponse* msg) {
  return *msg->project_list_;
}
void ListProjectsResponse::clear_project_list() {
  if (GetArenaForAllocation() == nullptr && project_list_ != nullptr) {
    delete project_list_;
  }
  project_list_ = nullptr;
}
ListProjectsResponse::ListProjectsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListProjectsResponse)
}
ListProjectsResponse::ListProjectsResponse(const ListProjectsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_project_list()) {
    project_list_ = new ::payment::v1alpha1::ProjectList(*from.project_list_);
  } else {
    project_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListProjectsResponse)
}

inline void ListProjectsResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_list_ = nullptr;
}

ListProjectsResponse::~ListProjectsResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListProjectsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete project_list_;
}

void ListProjectsResponse::ArenaDtor(void* object) {
  ListProjectsResponse* _this = reinterpret_cast< ListProjectsResponse* >(object);
  (void)_this;
}
void ListProjectsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListProjectsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && project_list_ != nullptr) {
    delete project_list_;
  }
  project_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.ProjectList project_list = 1 [json_name = "projectList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_project_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListProjectsResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListProjectsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.ProjectList project_list = 1 [json_name = "projectList"];
  if (this->_internal_has_project_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::project_list(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListProjectsResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListProjectsResponse)
  return target;
}

size_t ListProjectsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListProjectsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.ProjectList project_list = 1 [json_name = "projectList"];
  if (this->_internal_has_project_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *project_list_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectsResponse::GetClassData() const { return &_class_data_; }

void ListProjectsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectsResponse *>(to)->MergeFrom(
      static_cast<const ListProjectsResponse &>(from));
}


void ListProjectsResponse::MergeFrom(const ListProjectsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListProjectsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_project_list()) {
    _internal_mutable_project_list()->::payment::v1alpha1::ProjectList::MergeFrom(from._internal_project_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectsResponse::CopyFrom(const ListProjectsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListProjectsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectsResponse::IsInitialized() const {
  return true;
}

void ListProjectsResponse::InternalSwap(ListProjectsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(project_list_, other->project_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[35]);
}

// ===================================================================

class GetProjectRequest::_Internal {
 public:
};

GetProjectRequest::GetProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetProjectRequest)
}
GetProjectRequest::GetProjectRequest(const GetProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetProjectRequest)
}

inline void GetProjectRequest::SharedCtor() {
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetProjectRequest::~GetProjectRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetProjectRequest::ArenaDtor(void* object) {
  GetProjectRequest* _this = reinterpret_cast< GetProjectRequest* >(object);
  (void)_this;
}
void GetProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  project_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetProjectRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 2 [json_name = "projectId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetProjectRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetProjectRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetProjectRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetProjectRequest)
  return target;
}

size_t GetProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectRequest::GetClassData() const { return &_class_data_; }

void GetProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetProjectRequest *>(to)->MergeFrom(
      static_cast<const GetProjectRequest &>(from));
}


void GetProjectRequest::MergeFrom(const GetProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectRequest::CopyFrom(const GetProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectRequest::IsInitialized() const {
  return true;
}

void GetProjectRequest::InternalSwap(GetProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[36]);
}

// ===================================================================

class GetProjectResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Project& project(const GetProjectResponse* msg);
};

const ::payment::v1alpha1::Project&
GetProjectResponse::_Internal::project(const GetProjectResponse* msg) {
  return *msg->project_;
}
void GetProjectResponse::clear_project() {
  if (GetArenaForAllocation() == nullptr && project_ != nullptr) {
    delete project_;
  }
  project_ = nullptr;
}
GetProjectResponse::GetProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetProjectResponse)
}
GetProjectResponse::GetProjectResponse(const GetProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_project()) {
    project_ = new ::payment::v1alpha1::Project(*from.project_);
  } else {
    project_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetProjectResponse)
}

inline void GetProjectResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_ = nullptr;
}

GetProjectResponse::~GetProjectResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete project_;
}

void GetProjectResponse::ArenaDtor(void* object) {
  GetProjectResponse* _this = reinterpret_cast< GetProjectResponse* >(object);
  (void)_this;
}
void GetProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && project_ != nullptr) {
    delete project_;
  }
  project_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Project project = 1 [json_name = "project"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_project(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetProjectResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Project project = 1 [json_name = "project"];
  if (this->_internal_has_project()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::project(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetProjectResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetProjectResponse)
  return target;
}

size_t GetProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Project project = 1 [json_name = "project"];
  if (this->_internal_has_project()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *project_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectResponse::GetClassData() const { return &_class_data_; }

void GetProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetProjectResponse *>(to)->MergeFrom(
      static_cast<const GetProjectResponse &>(from));
}


void GetProjectResponse::MergeFrom(const GetProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_project()) {
    _internal_mutable_project()->::payment::v1alpha1::Project::MergeFrom(from._internal_project());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectResponse::CopyFrom(const GetProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectResponse::IsInitialized() const {
  return true;
}

void GetProjectResponse::InternalSwap(GetProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(project_, other->project_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[37]);
}

// ===================================================================

class DeleteProjectRequest::_Internal {
 public:
};

DeleteProjectRequest::DeleteProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeleteProjectRequest)
}
DeleteProjectRequest::DeleteProjectRequest(const DeleteProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_ = from.organization_id_;
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeleteProjectRequest)
}

inline void DeleteProjectRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_ = 0u;
}

DeleteProjectRequest::~DeleteProjectRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeleteProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectRequest::ArenaDtor(void* object) {
  DeleteProjectRequest* _this = reinterpret_cast< DeleteProjectRequest* >(object);
  (void)_this;
}
void DeleteProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeleteProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  organization_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 2 [json_name = "projectId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeleteProjectRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeleteProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_organization_id(), target);
  }

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeleteProjectRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeleteProjectRequest)
  return target;
}

size_t DeleteProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeleteProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // uint32 organization_id = 1 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectRequest::GetClassData() const { return &_class_data_; }

void DeleteProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteProjectRequest *>(to)->MergeFrom(
      static_cast<const DeleteProjectRequest &>(from));
}


void DeleteProjectRequest::MergeFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeleteProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectRequest::CopyFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeleteProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectRequest::IsInitialized() const {
  return true;
}

void DeleteProjectRequest::InternalSwap(DeleteProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  swap(organization_id_, other->organization_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[38]);
}

// ===================================================================

class DeleteProjectResponse::_Internal {
 public:
};

DeleteProjectResponse::DeleteProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeleteProjectResponse)
}
DeleteProjectResponse::DeleteProjectResponse(const DeleteProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeleteProjectResponse)
}

inline void DeleteProjectResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteProjectResponse::~DeleteProjectResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeleteProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectResponse::ArenaDtor(void* object) {
  DeleteProjectResponse* _this = reinterpret_cast< DeleteProjectResponse* >(object);
  (void)_this;
}
void DeleteProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeleteProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeleteProjectResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeleteProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeleteProjectResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeleteProjectResponse)
  return target;
}

size_t DeleteProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeleteProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectResponse::GetClassData() const { return &_class_data_; }

void DeleteProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteProjectResponse *>(to)->MergeFrom(
      static_cast<const DeleteProjectResponse &>(from));
}


void DeleteProjectResponse::MergeFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeleteProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectResponse::CopyFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeleteProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectResponse::IsInitialized() const {
  return true;
}

void DeleteProjectResponse::InternalSwap(DeleteProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[39]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace payment
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::InvoiceFilterRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::InvoiceFilterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::InvoiceFilterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::InvoiceFilterResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::InvoiceFilterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::InvoiceFilterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeleteCustomerRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeleteCustomerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeleteCustomerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeleteCustomerResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeleteCustomerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeleteCustomerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetSuscriptionRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetSuscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetSuscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetSuscriptionResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetSuscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetSuscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetOrganizationRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetOrganizationResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetCustomerRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetCustomerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetCustomerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetCustomerResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetCustomerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetCustomerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetBilingMonthRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetBilingMonthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetBilingMonthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetBilingMonthResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetBilingMonthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetBilingMonthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentsRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentsResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateSuscriptionRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateSuscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateSuscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateSuscriptionResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateSuscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateSuscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateProjectRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateProjectResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateInvoiceRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateInvoiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateInvoiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateInvoiceResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateInvoiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateInvoiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateCardRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateCardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateCardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateCardResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateCardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateCardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CancelSuscriptionRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CancelSuscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CancelSuscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CancelSuscriptionResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CancelSuscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CancelSuscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateCustomerRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateCustomerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateCustomerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreateCustomerResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreateCustomerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreateCustomerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreatePaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreatePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreatePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreatePaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreatePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreatePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeletePaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeletePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeletePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeletePaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeletePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeletePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListPaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListPaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListPaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListPaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListProjectsRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListProjectsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListProjectsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListProjectsResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListProjectsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListProjectsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetProjectRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetProjectResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeleteProjectRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeleteProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeleteProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeleteProjectResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeleteProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeleteProjectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
