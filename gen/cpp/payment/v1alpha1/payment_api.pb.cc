// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment/v1alpha1/payment_api.proto

#include "payment/v1alpha1/payment_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace payment {
namespace v1alpha1 {
constexpr CreatePaymentRequest::CreatePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct CreatePaymentRequestDefaultTypeInternal {
  constexpr CreatePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreatePaymentRequestDefaultTypeInternal() {}
  union {
    CreatePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreatePaymentRequestDefaultTypeInternal _CreatePaymentRequest_default_instance_;
constexpr CreatePaymentResponse::CreatePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct CreatePaymentResponseDefaultTypeInternal {
  constexpr CreatePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreatePaymentResponseDefaultTypeInternal() {}
  union {
    CreatePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreatePaymentResponseDefaultTypeInternal _CreatePaymentResponse_default_instance_;
constexpr UpdatePaymentRequest::UpdatePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct UpdatePaymentRequestDefaultTypeInternal {
  constexpr UpdatePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdatePaymentRequestDefaultTypeInternal() {}
  union {
    UpdatePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdatePaymentRequestDefaultTypeInternal _UpdatePaymentRequest_default_instance_;
constexpr UpdatePaymentResponse::UpdatePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct UpdatePaymentResponseDefaultTypeInternal {
  constexpr UpdatePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdatePaymentResponseDefaultTypeInternal() {}
  union {
    UpdatePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdatePaymentResponseDefaultTypeInternal _UpdatePaymentResponse_default_instance_;
constexpr DeletePaymentRequest::DeletePaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_holder_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , expiry_date_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , application_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_number_(0)
  , cvv_number_(0)
  , organization_id_(0u)
  , project_id_(0u){}
struct DeletePaymentRequestDefaultTypeInternal {
  constexpr DeletePaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePaymentRequestDefaultTypeInternal() {}
  union {
    DeletePaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePaymentRequestDefaultTypeInternal _DeletePaymentRequest_default_instance_;
constexpr DeletePaymentResponse::DeletePaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeletePaymentResponseDefaultTypeInternal {
  constexpr DeletePaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePaymentResponseDefaultTypeInternal() {}
  union {
    DeletePaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePaymentResponseDefaultTypeInternal _DeletePaymentResponse_default_instance_;
constexpr GetPaymentRequest::GetPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPaymentRequestDefaultTypeInternal {
  constexpr GetPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentRequestDefaultTypeInternal() {}
  union {
    GetPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentRequestDefaultTypeInternal _GetPaymentRequest_default_instance_;
constexpr GetPaymentResponse::GetPaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_(nullptr){}
struct GetPaymentResponseDefaultTypeInternal {
  constexpr GetPaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPaymentResponseDefaultTypeInternal() {}
  union {
    GetPaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPaymentResponseDefaultTypeInternal _GetPaymentResponse_default_instance_;
constexpr ListPaymentRequest::ListPaymentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : card_holder_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0u)
  , card_number_(0){}
struct ListPaymentRequestDefaultTypeInternal {
  constexpr ListPaymentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPaymentRequestDefaultTypeInternal() {}
  union {
    ListPaymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPaymentRequestDefaultTypeInternal _ListPaymentRequest_default_instance_;
constexpr ListPaymentResponse::ListPaymentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payment_list_(nullptr){}
struct ListPaymentResponseDefaultTypeInternal {
  constexpr ListPaymentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPaymentResponseDefaultTypeInternal() {}
  union {
    ListPaymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPaymentResponseDefaultTypeInternal _ListPaymentResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace payment
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_payment_2fv1alpha1_2fpayment_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::CreatePaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentRequest, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentResponse, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::UpdatePaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, card_holder_name_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, card_type_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, card_number_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, cvv_number_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, expiry_date_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentRequest, application_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::DeletePaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, payment_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::GetPaymentResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, id_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, card_holder_name_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, card_type_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentRequest, card_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, payment_list_),
  PROTOBUF_FIELD_OFFSET(::payment::v1alpha1::ListPaymentResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::payment::v1alpha1::CreatePaymentRequest)},
  { 7, -1, sizeof(::payment::v1alpha1::CreatePaymentResponse)},
  { 14, -1, sizeof(::payment::v1alpha1::UpdatePaymentRequest)},
  { 21, -1, sizeof(::payment::v1alpha1::UpdatePaymentResponse)},
  { 28, -1, sizeof(::payment::v1alpha1::DeletePaymentRequest)},
  { 42, -1, sizeof(::payment::v1alpha1::DeletePaymentResponse)},
  { 48, -1, sizeof(::payment::v1alpha1::GetPaymentRequest)},
  { 54, -1, sizeof(::payment::v1alpha1::GetPaymentResponse)},
  { 61, -1, sizeof(::payment::v1alpha1::ListPaymentRequest)},
  { 70, -1, sizeof(::payment::v1alpha1::ListPaymentResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreatePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_CreatePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_UpdatePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_UpdatePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeletePaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_DeletePaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_GetPaymentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListPaymentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::payment::v1alpha1::_ListPaymentResponse_default_instance_),
};

const char descriptor_table_protodef_payment_2fv1alpha1_2fpayment_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"payment/v1alpha1/payment_api.proto\022\020pa"
  "yment.v1alpha1\032\036payment/v1alpha1/payment"
  ".proto\"c\n\024CreatePaymentRequest\0223\n\007paymen"
  "t\030\001 \001(\0132\031.payment.v1alpha1.PaymentR\007paym"
  "ent\022\026\n\006status\030\002 \001(\tR\006status\"d\n\025CreatePay"
  "mentResponse\0223\n\007payment\030\001 \001(\0132\031.payment."
  "v1alpha1.PaymentR\007payment\022\026\n\006status\030\002 \001("
  "\tR\006status\"c\n\024UpdatePaymentRequest\0223\n\007pay"
  "ment\030\001 \001(\0132\031.payment.v1alpha1.PaymentR\007p"
  "ayment\022\026\n\006status\030\002 \001(\tR\006status\"d\n\025Update"
  "PaymentResponse\0223\n\007payment\030\001 \001(\0132\031.payme"
  "nt.v1alpha1.PaymentR\007payment\022\026\n\006status\030\002"
  " \001(\tR\006status\"\275\002\n\024DeletePaymentRequest\022\016\n"
  "\002id\030\001 \001(\tR\002id\022(\n\020card_holder_name\030\002 \001(\tR"
  "\016cardHolderName\022\033\n\tcard_type\030\003 \001(\tR\010card"
  "Type\022\037\n\013card_number\030\004 \001(\005R\ncardNumber\022\035\n"
  "\ncvv_number\030\005 \001(\005R\tcvvNumber\022\037\n\013expiry_d"
  "ate\030\006 \001(\tR\nexpiryDate\022\'\n\017organization_id"
  "\030\007 \001(\rR\016organizationId\022\035\n\nproject_id\030\010 \001"
  "(\rR\tprojectId\022%\n\016application_id\030\t \001(\tR\ra"
  "pplicationId\"/\n\025DeletePaymentResponse\022\026\n"
  "\006status\030\001 \001(\tR\006status\"#\n\021GetPaymentReque"
  "st\022\016\n\002id\030\001 \001(\tR\002id\"a\n\022GetPaymentResponse"
  "\0223\n\007payment\030\001 \001(\0132\031.payment.v1alpha1.Pay"
  "mentR\007payment\022\026\n\006status\030\002 \001(\tR\006status\"\214\001"
  "\n\022ListPaymentRequest\022\016\n\002id\030\001 \001(\rR\002id\022(\n\020"
  "card_holder_name\030\002 \001(\tR\016cardHolderName\022\033"
  "\n\tcard_type\030\003 \001(\tR\010cardType\022\037\n\013card_numb"
  "er\030\004 \001(\005R\ncardNumber\"o\n\023ListPaymentRespo"
  "nse\022@\n\014payment_list\030\001 \001(\0132\035.payment.v1al"
  "pha1.PaymentListR\013paymentList\022\026\n\006status\030"
  "\002 \001(\tR\006status2\370\003\n\021PaymentAPIService\022Y\n\nG"
  "etPayment\022#.payment.v1alpha1.GetPaymentR"
  "equest\032$.payment.v1alpha1.GetPaymentResp"
  "onse\"\000\022b\n\rCreatePayment\022&.payment.v1alph"
  "a1.CreatePaymentRequest\032\'.payment.v1alph"
  "a1.CreatePaymentResponse\"\000\022b\n\rUpdatePaym"
  "ent\022&.payment.v1alpha1.UpdatePaymentRequ"
  "est\032\'.payment.v1alpha1.UpdatePaymentResp"
  "onse\"\000\022b\n\rDeletePayment\022&.payment.v1alph"
  "a1.DeletePaymentRequest\032\'.payment.v1alph"
  "a1.DeletePaymentResponse\"\000\022\\\n\013ListPaymen"
  "t\022$.payment.v1alpha1.ListPaymentRequest\032"
  "%.payment.v1alpha1.ListPaymentResponse\"\000"
  "B\213\001\n\032io.cuemby.payment.v1alpha1B\014Payment"
  "protoP\001Z1github.com/cuemby/ccp-sdk/gen/g"
  "o/payment/v1alpha1\242\002\003PPX\252\002\020Payment.V1Alp"
  "ha1\312\002\020Payment\\V1Alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_deps[1] = {
  &::descriptor_table_payment_2fv1alpha1_2fpayment_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto = {
  false, false, 1910, descriptor_table_protodef_payment_2fv1alpha1_2fpayment_5fapi_2eproto, "payment/v1alpha1/payment_api.proto", 
  &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once, descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_payment_2fv1alpha1_2fpayment_5fapi_2eproto::offsets,
  file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto, file_level_enum_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto, file_level_service_descriptors_payment_2fv1alpha1_2fpayment_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter() {
  return &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_payment_2fv1alpha1_2fpayment_5fapi_2eproto(&descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto);
namespace payment {
namespace v1alpha1 {

// ===================================================================

class CreatePaymentRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const CreatePaymentRequest* msg);
};

const ::payment::v1alpha1::Payment&
CreatePaymentRequest::_Internal::payment(const CreatePaymentRequest* msg) {
  return *msg->payment_;
}
void CreatePaymentRequest::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
CreatePaymentRequest::CreatePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreatePaymentRequest)
}
CreatePaymentRequest::CreatePaymentRequest(const CreatePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreatePaymentRequest)
}

inline void CreatePaymentRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

CreatePaymentRequest::~CreatePaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreatePaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreatePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void CreatePaymentRequest::ArenaDtor(void* object) {
  CreatePaymentRequest* _this = reinterpret_cast< CreatePaymentRequest* >(object);
  (void)_this;
}
void CreatePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreatePaymentRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreatePaymentRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreatePaymentRequest)
  return target;
}

size_t CreatePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreatePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentRequest::GetClassData() const { return &_class_data_; }

void CreatePaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreatePaymentRequest *>(to)->MergeFrom(
      static_cast<const CreatePaymentRequest &>(from));
}


void CreatePaymentRequest::MergeFrom(const CreatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreatePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentRequest::CopyFrom(const CreatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreatePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentRequest::IsInitialized() const {
  return true;
}

void CreatePaymentRequest::InternalSwap(CreatePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[0]);
}

// ===================================================================

class CreatePaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const CreatePaymentResponse* msg);
};

const ::payment::v1alpha1::Payment&
CreatePaymentResponse::_Internal::payment(const CreatePaymentResponse* msg) {
  return *msg->payment_;
}
void CreatePaymentResponse::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
CreatePaymentResponse::CreatePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.CreatePaymentResponse)
}
CreatePaymentResponse::CreatePaymentResponse(const CreatePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.CreatePaymentResponse)
}

inline void CreatePaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

CreatePaymentResponse::~CreatePaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.CreatePaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreatePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void CreatePaymentResponse::ArenaDtor(void* object) {
  CreatePaymentResponse* _this = reinterpret_cast< CreatePaymentResponse* >(object);
  (void)_this;
}
void CreatePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.CreatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.CreatePaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreatePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.CreatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.CreatePaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.CreatePaymentResponse)
  return target;
}

size_t CreatePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.CreatePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentResponse::GetClassData() const { return &_class_data_; }

void CreatePaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreatePaymentResponse *>(to)->MergeFrom(
      static_cast<const CreatePaymentResponse &>(from));
}


void CreatePaymentResponse::MergeFrom(const CreatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.CreatePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentResponse::CopyFrom(const CreatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.CreatePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentResponse::IsInitialized() const {
  return true;
}

void CreatePaymentResponse::InternalSwap(CreatePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[1]);
}

// ===================================================================

class UpdatePaymentRequest::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const UpdatePaymentRequest* msg);
};

const ::payment::v1alpha1::Payment&
UpdatePaymentRequest::_Internal::payment(const UpdatePaymentRequest* msg) {
  return *msg->payment_;
}
void UpdatePaymentRequest::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
UpdatePaymentRequest::UpdatePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.UpdatePaymentRequest)
}
UpdatePaymentRequest::UpdatePaymentRequest(const UpdatePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.UpdatePaymentRequest)
}

inline void UpdatePaymentRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

UpdatePaymentRequest::~UpdatePaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.UpdatePaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdatePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void UpdatePaymentRequest::ArenaDtor(void* object) {
  UpdatePaymentRequest* _this = reinterpret_cast< UpdatePaymentRequest* >(object);
  (void)_this;
}
void UpdatePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdatePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.UpdatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.UpdatePaymentRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.UpdatePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.UpdatePaymentRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.UpdatePaymentRequest)
  return target;
}

size_t UpdatePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.UpdatePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdatePaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdatePaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdatePaymentRequest::GetClassData() const { return &_class_data_; }

void UpdatePaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdatePaymentRequest *>(to)->MergeFrom(
      static_cast<const UpdatePaymentRequest &>(from));
}


void UpdatePaymentRequest::MergeFrom(const UpdatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.UpdatePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePaymentRequest::CopyFrom(const UpdatePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.UpdatePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePaymentRequest::IsInitialized() const {
  return true;
}

void UpdatePaymentRequest::InternalSwap(UpdatePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[2]);
}

// ===================================================================

class UpdatePaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const UpdatePaymentResponse* msg);
};

const ::payment::v1alpha1::Payment&
UpdatePaymentResponse::_Internal::payment(const UpdatePaymentResponse* msg) {
  return *msg->payment_;
}
void UpdatePaymentResponse::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
UpdatePaymentResponse::UpdatePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.UpdatePaymentResponse)
}
UpdatePaymentResponse::UpdatePaymentResponse(const UpdatePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.UpdatePaymentResponse)
}

inline void UpdatePaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

UpdatePaymentResponse::~UpdatePaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.UpdatePaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdatePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void UpdatePaymentResponse::ArenaDtor(void* object) {
  UpdatePaymentResponse* _this = reinterpret_cast< UpdatePaymentResponse* >(object);
  (void)_this;
}
void UpdatePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdatePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.UpdatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.UpdatePaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.UpdatePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.UpdatePaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.UpdatePaymentResponse)
  return target;
}

size_t UpdatePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.UpdatePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdatePaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdatePaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdatePaymentResponse::GetClassData() const { return &_class_data_; }

void UpdatePaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdatePaymentResponse *>(to)->MergeFrom(
      static_cast<const UpdatePaymentResponse &>(from));
}


void UpdatePaymentResponse::MergeFrom(const UpdatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.UpdatePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePaymentResponse::CopyFrom(const UpdatePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.UpdatePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePaymentResponse::IsInitialized() const {
  return true;
}

void UpdatePaymentResponse::InternalSwap(UpdatePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[3]);
}

// ===================================================================

class DeletePaymentRequest::_Internal {
 public:
};

DeletePaymentRequest::DeletePaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeletePaymentRequest)
}
DeletePaymentRequest::DeletePaymentRequest(const DeletePaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  card_holder_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_holder_name().empty()) {
    card_holder_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_holder_name(), 
      GetArenaForAllocation());
  }
  card_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_type().empty()) {
    card_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_type(), 
      GetArenaForAllocation());
  }
  expiry_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expiry_date().empty()) {
    expiry_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expiry_date(), 
      GetArenaForAllocation());
  }
  application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_application_id().empty()) {
    application_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_application_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&card_number_, &from.card_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&project_id_) -
    reinterpret_cast<char*>(&card_number_)) + sizeof(project_id_));
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeletePaymentRequest)
}

inline void DeletePaymentRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_holder_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
expiry_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&card_number_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&project_id_) -
    reinterpret_cast<char*>(&card_number_)) + sizeof(project_id_));
}

DeletePaymentRequest::~DeletePaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeletePaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_holder_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiry_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  application_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePaymentRequest::ArenaDtor(void* object) {
  DeletePaymentRequest* _this = reinterpret_cast< DeletePaymentRequest* >(object);
  (void)_this;
}
void DeletePaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeletePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  card_holder_name_.ClearToEmpty();
  card_type_.ClearToEmpty();
  expiry_date_.ClearToEmpty();
  application_id_.ClearToEmpty();
  ::memset(&card_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&project_id_) -
      reinterpret_cast<char*>(&card_number_)) + sizeof(project_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_holder_name = 2 [json_name = "cardHolderName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_card_holder_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.card_holder_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_type = 3 [json_name = "cardType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.card_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_number = 4 [json_name = "cardNumber"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          card_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cvv_number = 5 [json_name = "cvvNumber"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          cvv_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string expiry_date = 6 [json_name = "expiryDate"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_expiry_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.expiry_date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 organization_id = 7 [json_name = "organizationId"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          organization_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 project_id = 8 [json_name = "projectId"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          project_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string application_id = 9 [json_name = "applicationId"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_application_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentRequest.application_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeletePaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string card_holder_name = 2 [json_name = "cardHolderName"];
  if (!this->_internal_card_holder_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_holder_name().data(), static_cast<int>(this->_internal_card_holder_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.card_holder_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_card_holder_name(), target);
  }

  // string card_type = 3 [json_name = "cardType"];
  if (!this->_internal_card_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_type().data(), static_cast<int>(this->_internal_card_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.card_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_type(), target);
  }

  // int32 card_number = 4 [json_name = "cardNumber"];
  if (this->_internal_card_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_card_number(), target);
  }

  // int32 cvv_number = 5 [json_name = "cvvNumber"];
  if (this->_internal_cvv_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_cvv_number(), target);
  }

  // string expiry_date = 6 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expiry_date().data(), static_cast<int>(this->_internal_expiry_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.expiry_date");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_expiry_date(), target);
  }

  // uint32 organization_id = 7 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_organization_id(), target);
  }

  // uint32 project_id = 8 [json_name = "projectId"];
  if (this->_internal_project_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_project_id(), target);
  }

  // string application_id = 9 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application_id().data(), static_cast<int>(this->_internal_application_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentRequest.application_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_application_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeletePaymentRequest)
  return target;
}

size_t DeletePaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeletePaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string card_holder_name = 2 [json_name = "cardHolderName"];
  if (!this->_internal_card_holder_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_holder_name());
  }

  // string card_type = 3 [json_name = "cardType"];
  if (!this->_internal_card_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_type());
  }

  // string expiry_date = 6 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expiry_date());
  }

  // string application_id = 9 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application_id());
  }

  // int32 card_number = 4 [json_name = "cardNumber"];
  if (this->_internal_card_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_number());
  }

  // int32 cvv_number = 5 [json_name = "cvvNumber"];
  if (this->_internal_cvv_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cvv_number());
  }

  // uint32 organization_id = 7 [json_name = "organizationId"];
  if (this->_internal_organization_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_organization_id());
  }

  // uint32 project_id = 8 [json_name = "projectId"];
  if (this->_internal_project_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_project_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePaymentRequest::GetClassData() const { return &_class_data_; }

void DeletePaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePaymentRequest *>(to)->MergeFrom(
      static_cast<const DeletePaymentRequest &>(from));
}


void DeletePaymentRequest::MergeFrom(const DeletePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeletePaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_card_holder_name().empty()) {
    _internal_set_card_holder_name(from._internal_card_holder_name());
  }
  if (!from._internal_card_type().empty()) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (!from._internal_expiry_date().empty()) {
    _internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_application_id().empty()) {
    _internal_set_application_id(from._internal_application_id());
  }
  if (from._internal_card_number() != 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  if (from._internal_cvv_number() != 0) {
    _internal_set_cvv_number(from._internal_cvv_number());
  }
  if (from._internal_organization_id() != 0) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_project_id() != 0) {
    _internal_set_project_id(from._internal_project_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePaymentRequest::CopyFrom(const DeletePaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeletePaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePaymentRequest::IsInitialized() const {
  return true;
}

void DeletePaymentRequest::InternalSwap(DeletePaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_holder_name_, GetArenaForAllocation(),
      &other->card_holder_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_type_, GetArenaForAllocation(),
      &other->card_type_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &expiry_date_, GetArenaForAllocation(),
      &other->expiry_date_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &application_id_, GetArenaForAllocation(),
      &other->application_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeletePaymentRequest, project_id_)
      + sizeof(DeletePaymentRequest::project_id_)
      - PROTOBUF_FIELD_OFFSET(DeletePaymentRequest, card_number_)>(
          reinterpret_cast<char*>(&card_number_),
          reinterpret_cast<char*>(&other->card_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[4]);
}

// ===================================================================

class DeletePaymentResponse::_Internal {
 public:
};

DeletePaymentResponse::DeletePaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.DeletePaymentResponse)
}
DeletePaymentResponse::DeletePaymentResponse(const DeletePaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.DeletePaymentResponse)
}

inline void DeletePaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeletePaymentResponse::~DeletePaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.DeletePaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePaymentResponse::ArenaDtor(void* object) {
  DeletePaymentResponse* _this = reinterpret_cast< DeletePaymentResponse* >(object);
  (void)_this;
}
void DeletePaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.DeletePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.DeletePaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.DeletePaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.DeletePaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.DeletePaymentResponse)
  return target;
}

size_t DeletePaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.DeletePaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePaymentResponse::GetClassData() const { return &_class_data_; }

void DeletePaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePaymentResponse *>(to)->MergeFrom(
      static_cast<const DeletePaymentResponse &>(from));
}


void DeletePaymentResponse::MergeFrom(const DeletePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.DeletePaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePaymentResponse::CopyFrom(const DeletePaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.DeletePaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePaymentResponse::IsInitialized() const {
  return true;
}

void DeletePaymentResponse::InternalSwap(DeletePaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[5]);
}

// ===================================================================

class GetPaymentRequest::_Internal {
 public:
};

GetPaymentRequest::GetPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentRequest)
}
GetPaymentRequest::GetPaymentRequest(const GetPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentRequest)
}

inline void GetPaymentRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPaymentRequest::~GetPaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPaymentRequest::ArenaDtor(void* object) {
  GetPaymentRequest* _this = reinterpret_cast< GetPaymentRequest* >(object);
  (void)_this;
}
void GetPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentRequest)
  return target;
}

size_t GetPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentRequest::GetClassData() const { return &_class_data_; }

void GetPaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentRequest *>(to)->MergeFrom(
      static_cast<const GetPaymentRequest &>(from));
}


void GetPaymentRequest::MergeFrom(const GetPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentRequest::CopyFrom(const GetPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentRequest::IsInitialized() const {
  return true;
}

void GetPaymentRequest::InternalSwap(GetPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[6]);
}

// ===================================================================

class GetPaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::Payment& payment(const GetPaymentResponse* msg);
};

const ::payment::v1alpha1::Payment&
GetPaymentResponse::_Internal::payment(const GetPaymentResponse* msg) {
  return *msg->payment_;
}
void GetPaymentResponse::clear_payment() {
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
}
GetPaymentResponse::GetPaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.GetPaymentResponse)
}
GetPaymentResponse::GetPaymentResponse(const GetPaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment()) {
    payment_ = new ::payment::v1alpha1::Payment(*from.payment_);
  } else {
    payment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.GetPaymentResponse)
}

inline void GetPaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_ = nullptr;
}

GetPaymentResponse::~GetPaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.GetPaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void GetPaymentResponse::ArenaDtor(void* object) {
  GetPaymentResponse* _this = reinterpret_cast< GetPaymentResponse* >(object);
  (void)_this;
}
void GetPaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.GetPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_ != nullptr) {
    delete payment_;
  }
  payment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.GetPaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.GetPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.GetPaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.GetPaymentResponse)
  return target;
}

size_t GetPaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.GetPaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.Payment payment = 1 [json_name = "payment"];
  if (this->_internal_has_payment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPaymentResponse::GetClassData() const { return &_class_data_; }

void GetPaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPaymentResponse *>(to)->MergeFrom(
      static_cast<const GetPaymentResponse &>(from));
}


void GetPaymentResponse::MergeFrom(const GetPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.GetPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment()) {
    _internal_mutable_payment()->::payment::v1alpha1::Payment::MergeFrom(from._internal_payment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPaymentResponse::CopyFrom(const GetPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.GetPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPaymentResponse::IsInitialized() const {
  return true;
}

void GetPaymentResponse::InternalSwap(GetPaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_, other->payment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[7]);
}

// ===================================================================

class ListPaymentRequest::_Internal {
 public:
};

ListPaymentRequest::ListPaymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListPaymentRequest)
}
ListPaymentRequest::ListPaymentRequest(const ListPaymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  card_holder_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_holder_name().empty()) {
    card_holder_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_holder_name(), 
      GetArenaForAllocation());
  }
  card_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_type().empty()) {
    card_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_type(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&card_number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(card_number_));
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListPaymentRequest)
}

inline void ListPaymentRequest::SharedCtor() {
card_holder_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&card_number_) -
    reinterpret_cast<char*>(&id_)) + sizeof(card_number_));
}

ListPaymentRequest::~ListPaymentRequest() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListPaymentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPaymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  card_holder_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListPaymentRequest::ArenaDtor(void* object) {
  ListPaymentRequest* _this = reinterpret_cast< ListPaymentRequest* >(object);
  (void)_this;
}
void ListPaymentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPaymentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_holder_name_.ClearToEmpty();
  card_type_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&card_number_) -
      reinterpret_cast<char*>(&id_)) + sizeof(card_number_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPaymentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_holder_name = 2 [json_name = "cardHolderName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_card_holder_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListPaymentRequest.card_holder_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_type = 3 [json_name = "cardType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_card_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListPaymentRequest.card_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_number = 4 [json_name = "cardNumber"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          card_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListPaymentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListPaymentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string card_holder_name = 2 [json_name = "cardHolderName"];
  if (!this->_internal_card_holder_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_holder_name().data(), static_cast<int>(this->_internal_card_holder_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListPaymentRequest.card_holder_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_card_holder_name(), target);
  }

  // string card_type = 3 [json_name = "cardType"];
  if (!this->_internal_card_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_type().data(), static_cast<int>(this->_internal_card_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListPaymentRequest.card_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_card_type(), target);
  }

  // int32 card_number = 4 [json_name = "cardNumber"];
  if (this->_internal_card_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_card_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListPaymentRequest)
  return target;
}

size_t ListPaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListPaymentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string card_holder_name = 2 [json_name = "cardHolderName"];
  if (!this->_internal_card_holder_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_holder_name());
  }

  // string card_type = 3 [json_name = "cardType"];
  if (!this->_internal_card_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_type());
  }

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // int32 card_number = 4 [json_name = "cardNumber"];
  if (this->_internal_card_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPaymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPaymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPaymentRequest::GetClassData() const { return &_class_data_; }

void ListPaymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListPaymentRequest *>(to)->MergeFrom(
      static_cast<const ListPaymentRequest &>(from));
}


void ListPaymentRequest::MergeFrom(const ListPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListPaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_card_holder_name().empty()) {
    _internal_set_card_holder_name(from._internal_card_holder_name());
  }
  if (!from._internal_card_type().empty()) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_card_number() != 0) {
    _internal_set_card_number(from._internal_card_number());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPaymentRequest::CopyFrom(const ListPaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListPaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPaymentRequest::IsInitialized() const {
  return true;
}

void ListPaymentRequest::InternalSwap(ListPaymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_holder_name_, GetArenaForAllocation(),
      &other->card_holder_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_type_, GetArenaForAllocation(),
      &other->card_type_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListPaymentRequest, card_number_)
      + sizeof(ListPaymentRequest::card_number_)
      - PROTOBUF_FIELD_OFFSET(ListPaymentRequest, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPaymentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[8]);
}

// ===================================================================

class ListPaymentResponse::_Internal {
 public:
  static const ::payment::v1alpha1::PaymentList& payment_list(const ListPaymentResponse* msg);
};

const ::payment::v1alpha1::PaymentList&
ListPaymentResponse::_Internal::payment_list(const ListPaymentResponse* msg) {
  return *msg->payment_list_;
}
void ListPaymentResponse::clear_payment_list() {
  if (GetArenaForAllocation() == nullptr && payment_list_ != nullptr) {
    delete payment_list_;
  }
  payment_list_ = nullptr;
}
ListPaymentResponse::ListPaymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:payment.v1alpha1.ListPaymentResponse)
}
ListPaymentResponse::ListPaymentResponse(const ListPaymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_payment_list()) {
    payment_list_ = new ::payment::v1alpha1::PaymentList(*from.payment_list_);
  } else {
    payment_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:payment.v1alpha1.ListPaymentResponse)
}

inline void ListPaymentResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
payment_list_ = nullptr;
}

ListPaymentResponse::~ListPaymentResponse() {
  // @@protoc_insertion_point(destructor:payment.v1alpha1.ListPaymentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPaymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_list_;
}

void ListPaymentResponse::ArenaDtor(void* object) {
  ListPaymentResponse* _this = reinterpret_cast< ListPaymentResponse* >(object);
  (void)_this;
}
void ListPaymentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPaymentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPaymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:payment.v1alpha1.ListPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && payment_list_ != nullptr) {
    delete payment_list_;
  }
  payment_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPaymentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payment_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "payment.v1alpha1.ListPaymentResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListPaymentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:payment.v1alpha1.ListPaymentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
  if (this->_internal_has_payment_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payment_list(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "payment.v1alpha1.ListPaymentResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payment.v1alpha1.ListPaymentResponse)
  return target;
}

size_t ListPaymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payment.v1alpha1.ListPaymentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .payment.v1alpha1.PaymentList payment_list = 1 [json_name = "paymentList"];
  if (this->_internal_has_payment_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payment_list_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPaymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPaymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPaymentResponse::GetClassData() const { return &_class_data_; }

void ListPaymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListPaymentResponse *>(to)->MergeFrom(
      static_cast<const ListPaymentResponse &>(from));
}


void ListPaymentResponse::MergeFrom(const ListPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payment.v1alpha1.ListPaymentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_payment_list()) {
    _internal_mutable_payment_list()->::payment::v1alpha1::PaymentList::MergeFrom(from._internal_payment_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPaymentResponse::CopyFrom(const ListPaymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payment.v1alpha1.ListPaymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPaymentResponse::IsInitialized() const {
  return true;
}

void ListPaymentResponse::InternalSwap(ListPaymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(payment_list_, other->payment_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPaymentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_getter, &descriptor_table_payment_2fv1alpha1_2fpayment_5fapi_2eproto_once,
      file_level_metadata_payment_2fv1alpha1_2fpayment_5fapi_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace payment
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreatePaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreatePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreatePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::CreatePaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::CreatePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::CreatePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::UpdatePaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::UpdatePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::UpdatePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::UpdatePaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::UpdatePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::UpdatePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeletePaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeletePaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeletePaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::DeletePaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::DeletePaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::DeletePaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::GetPaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::GetPaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::GetPaymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListPaymentRequest* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListPaymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListPaymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::payment::v1alpha1::ListPaymentResponse* Arena::CreateMaybeMessage< ::payment::v1alpha1::ListPaymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::payment::v1alpha1::ListPaymentResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
