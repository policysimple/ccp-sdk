// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blockchain/members/v1alpha1/member_api.proto

#include "blockchain/members/v1alpha1/member_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace blockchain {
namespace members {
namespace v1alpha1 {
constexpr CreateOrganizationResponse::CreateOrganizationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateOrganizationResponseDefaultTypeInternal {
  constexpr CreateOrganizationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateOrganizationResponseDefaultTypeInternal() {}
  union {
    CreateOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateOrganizationResponseDefaultTypeInternal _CreateOrganizationResponse_default_instance_;
constexpr CreateInvitationResponse::CreateInvitationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateInvitationResponseDefaultTypeInternal {
  constexpr CreateInvitationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateInvitationResponseDefaultTypeInternal() {}
  union {
    CreateInvitationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateInvitationResponseDefaultTypeInternal _CreateInvitationResponse_default_instance_;
constexpr CreateOrganizationRequest::CreateOrganizationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_id_new_member_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , org_domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , admin_password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , admin_user_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , network_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , network_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateOrganizationRequestDefaultTypeInternal {
  constexpr CreateOrganizationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateOrganizationRequestDefaultTypeInternal() {}
  union {
    CreateOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateOrganizationRequestDefaultTypeInternal _CreateOrganizationRequest_default_instance_;
constexpr CreateInvitationRequest::CreateInvitationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invitation_(nullptr){}
struct CreateInvitationRequestDefaultTypeInternal {
  constexpr CreateInvitationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateInvitationRequestDefaultTypeInternal() {}
  union {
    CreateInvitationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateInvitationRequestDefaultTypeInternal _CreateInvitationRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace members
}  // namespace blockchain
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationResponse, status_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateInvitationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateInvitationResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, user_id_new_member_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, org_domain_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, admin_password_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, admin_user_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, network_name_),
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateOrganizationRequest, network_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateInvitationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blockchain::members::v1alpha1::CreateInvitationRequest, invitation_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blockchain::members::v1alpha1::CreateOrganizationResponse)},
  { 7, -1, sizeof(::blockchain::members::v1alpha1::CreateInvitationResponse)},
  { 13, -1, sizeof(::blockchain::members::v1alpha1::CreateOrganizationRequest)},
  { 24, -1, sizeof(::blockchain::members::v1alpha1::CreateInvitationRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blockchain::members::v1alpha1::_CreateOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blockchain::members::v1alpha1::_CreateInvitationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blockchain::members::v1alpha1::_CreateOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blockchain::members::v1alpha1::_CreateInvitationRequest_default_instance_),
};

const char descriptor_table_protodef_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,blockchain/members/v1alpha1/member_api"
  ".proto\022\033blockchain.members.v1alpha1\032(blo"
  "ckchain/members/v1alpha1/member.proto\"N\n"
  "\032CreateOrganizationResponse\022\026\n\006status\030\002 "
  "\001(\tR\006status\022\030\n\007message\030\003 \001(\tR\007message\"4\n"
  "\030CreateInvitationResponse\022\030\n\007message\030\001 \001"
  "(\tR\007message\"\357\001\n\031CreateOrganizationReques"
  "t\022+\n\022user_id_new_member\030\001 \001(\tR\017userIdNew"
  "Member\022\035\n\norg_domain\030\002 \001(\tR\torgDomain\022%\n"
  "\016admin_password\030\003 \001(\tR\radminPassword\022\035\n\n"
  "admin_user\030\004 \001(\tR\tadminUser\022!\n\014network_n"
  "ame\030\005 \001(\tR\013networkName\022\035\n\nnetwork_id\030\006 \001"
  "(\tR\tnetworkId\"b\n\027CreateInvitationRequest"
  "\022G\n\ninvitation\030\001 \001(\0132\'.blockchain.member"
  "s.v1alpha1.InvitationR\ninvitation2\251\002\n\036Bl"
  "ockchainInvitationAPIService\022\205\001\n\022CreateO"
  "rganization\0226.blockchain.members.v1alpha"
  "1.CreateOrganizationRequest\0327.blockchain"
  ".members.v1alpha1.CreateOrganizationResp"
  "onse\022\177\n\020CreateInvitation\0224.blockchain.me"
  "mbers.v1alpha1.CreateInvitationRequest\0325"
  ".blockchain.members.v1alpha1.CreateInvit"
  "ationResponseB\303\001\n%io.cuemby.blockchain.m"
  "embers.v1alpha1B\031MembersInvitationProtoA"
  "piP\001Z<github.com/cuemby/ccp-sdk/gen/go/b"
  "lockchain/members/v1alpha1\242\002\003PPX\252\002\032Block"
  "chain.Member.V1Alpha1\312\002\033Blockchain\\Membe"
  "rs\\V1Alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_deps[1] = {
  &::descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto = {
  false, false, 1099, descriptor_table_protodef_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto, "blockchain/members/v1alpha1/member_api.proto", 
  &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once, descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto::offsets,
  file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto, file_level_enum_descriptors_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto, file_level_service_descriptors_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_getter() {
  return &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto(&descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto);
namespace blockchain {
namespace members {
namespace v1alpha1 {

// ===================================================================

class CreateOrganizationResponse::_Internal {
 public:
};

CreateOrganizationResponse::CreateOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blockchain.members.v1alpha1.CreateOrganizationResponse)
}
CreateOrganizationResponse::CreateOrganizationResponse(const CreateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:blockchain.members.v1alpha1.CreateOrganizationResponse)
}

inline void CreateOrganizationResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateOrganizationResponse::~CreateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:blockchain.members.v1alpha1.CreateOrganizationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateOrganizationResponse::ArenaDtor(void* object) {
  CreateOrganizationResponse* _this = reinterpret_cast< CreateOrganizationResponse* >(object);
  (void)_this;
}
void CreateOrganizationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blockchain.members.v1alpha1.CreateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 3 [json_name = "message"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blockchain.members.v1alpha1.CreateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // string message = 3 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blockchain.members.v1alpha1.CreateOrganizationResponse)
  return target;
}

size_t CreateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blockchain.members.v1alpha1.CreateOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string message = 3 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationResponse::GetClassData() const { return &_class_data_; }

void CreateOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateOrganizationResponse *>(to)->MergeFrom(
      static_cast<const CreateOrganizationResponse &>(from));
}


void CreateOrganizationResponse::MergeFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blockchain.members.v1alpha1.CreateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationResponse::CopyFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blockchain.members.v1alpha1.CreateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationResponse::InternalSwap(CreateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_getter, &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once,
      file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[0]);
}

// ===================================================================

class CreateInvitationResponse::_Internal {
 public:
};

CreateInvitationResponse::CreateInvitationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blockchain.members.v1alpha1.CreateInvitationResponse)
}
CreateInvitationResponse::CreateInvitationResponse(const CreateInvitationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:blockchain.members.v1alpha1.CreateInvitationResponse)
}

inline void CreateInvitationResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateInvitationResponse::~CreateInvitationResponse() {
  // @@protoc_insertion_point(destructor:blockchain.members.v1alpha1.CreateInvitationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateInvitationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateInvitationResponse::ArenaDtor(void* object) {
  CreateInvitationResponse* _this = reinterpret_cast< CreateInvitationResponse* >(object);
  (void)_this;
}
void CreateInvitationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInvitationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateInvitationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:blockchain.members.v1alpha1.CreateInvitationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInvitationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1 [json_name = "message"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateInvitationResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInvitationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blockchain.members.v1alpha1.CreateInvitationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateInvitationResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blockchain.members.v1alpha1.CreateInvitationResponse)
  return target;
}

size_t CreateInvitationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blockchain.members.v1alpha1.CreateInvitationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInvitationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateInvitationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInvitationResponse::GetClassData() const { return &_class_data_; }

void CreateInvitationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateInvitationResponse *>(to)->MergeFrom(
      static_cast<const CreateInvitationResponse &>(from));
}


void CreateInvitationResponse::MergeFrom(const CreateInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blockchain.members.v1alpha1.CreateInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInvitationResponse::CopyFrom(const CreateInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blockchain.members.v1alpha1.CreateInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInvitationResponse::IsInitialized() const {
  return true;
}

void CreateInvitationResponse::InternalSwap(CreateInvitationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInvitationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_getter, &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once,
      file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[1]);
}

// ===================================================================

class CreateOrganizationRequest::_Internal {
 public:
};

CreateOrganizationRequest::CreateOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blockchain.members.v1alpha1.CreateOrganizationRequest)
}
CreateOrganizationRequest::CreateOrganizationRequest(const CreateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_new_member_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id_new_member().empty()) {
    user_id_new_member_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id_new_member(), 
      GetArenaForAllocation());
  }
  org_domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_org_domain().empty()) {
    org_domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_org_domain(), 
      GetArenaForAllocation());
  }
  admin_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_admin_password().empty()) {
    admin_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_admin_password(), 
      GetArenaForAllocation());
  }
  admin_user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_admin_user().empty()) {
    admin_user_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_admin_user(), 
      GetArenaForAllocation());
  }
  network_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_network_name().empty()) {
    network_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_network_name(), 
      GetArenaForAllocation());
  }
  network_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_network_id().empty()) {
    network_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_network_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:blockchain.members.v1alpha1.CreateOrganizationRequest)
}

inline void CreateOrganizationRequest::SharedCtor() {
user_id_new_member_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
org_domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
admin_password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
admin_user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
network_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
network_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateOrganizationRequest::~CreateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:blockchain.members.v1alpha1.CreateOrganizationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_new_member_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  org_domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  admin_password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  admin_user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  network_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  network_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateOrganizationRequest::ArenaDtor(void* object) {
  CreateOrganizationRequest* _this = reinterpret_cast< CreateOrganizationRequest* >(object);
  (void)_this;
}
void CreateOrganizationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blockchain.members.v1alpha1.CreateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_new_member_.ClearToEmpty();
  org_domain_.ClearToEmpty();
  admin_password_.ClearToEmpty();
  admin_user_.ClearToEmpty();
  network_name_.ClearToEmpty();
  network_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id_new_member = 1 [json_name = "userIdNewMember"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id_new_member();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.user_id_new_member"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string org_domain = 2 [json_name = "orgDomain"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_org_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.org_domain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string admin_password = 3 [json_name = "adminPassword"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_admin_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.admin_password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string admin_user = 4 [json_name = "adminUser"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_admin_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.admin_user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string network_name = 5 [json_name = "networkName"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_network_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.network_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string network_id = 6 [json_name = "networkId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_network_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "blockchain.members.v1alpha1.CreateOrganizationRequest.network_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blockchain.members.v1alpha1.CreateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id_new_member = 1 [json_name = "userIdNewMember"];
  if (!this->_internal_user_id_new_member().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id_new_member().data(), static_cast<int>(this->_internal_user_id_new_member().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.user_id_new_member");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id_new_member(), target);
  }

  // string org_domain = 2 [json_name = "orgDomain"];
  if (!this->_internal_org_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_domain().data(), static_cast<int>(this->_internal_org_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.org_domain");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_org_domain(), target);
  }

  // string admin_password = 3 [json_name = "adminPassword"];
  if (!this->_internal_admin_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_password().data(), static_cast<int>(this->_internal_admin_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.admin_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_admin_password(), target);
  }

  // string admin_user = 4 [json_name = "adminUser"];
  if (!this->_internal_admin_user().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_user().data(), static_cast<int>(this->_internal_admin_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.admin_user");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_admin_user(), target);
  }

  // string network_name = 5 [json_name = "networkName"];
  if (!this->_internal_network_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_network_name().data(), static_cast<int>(this->_internal_network_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.network_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_network_name(), target);
  }

  // string network_id = 6 [json_name = "networkId"];
  if (!this->_internal_network_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_network_id().data(), static_cast<int>(this->_internal_network_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "blockchain.members.v1alpha1.CreateOrganizationRequest.network_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_network_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blockchain.members.v1alpha1.CreateOrganizationRequest)
  return target;
}

size_t CreateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blockchain.members.v1alpha1.CreateOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id_new_member = 1 [json_name = "userIdNewMember"];
  if (!this->_internal_user_id_new_member().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id_new_member());
  }

  // string org_domain = 2 [json_name = "orgDomain"];
  if (!this->_internal_org_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_domain());
  }

  // string admin_password = 3 [json_name = "adminPassword"];
  if (!this->_internal_admin_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_password());
  }

  // string admin_user = 4 [json_name = "adminUser"];
  if (!this->_internal_admin_user().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_user());
  }

  // string network_name = 5 [json_name = "networkName"];
  if (!this->_internal_network_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_network_name());
  }

  // string network_id = 6 [json_name = "networkId"];
  if (!this->_internal_network_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_network_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationRequest::GetClassData() const { return &_class_data_; }

void CreateOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateOrganizationRequest *>(to)->MergeFrom(
      static_cast<const CreateOrganizationRequest &>(from));
}


void CreateOrganizationRequest::MergeFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blockchain.members.v1alpha1.CreateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id_new_member().empty()) {
    _internal_set_user_id_new_member(from._internal_user_id_new_member());
  }
  if (!from._internal_org_domain().empty()) {
    _internal_set_org_domain(from._internal_org_domain());
  }
  if (!from._internal_admin_password().empty()) {
    _internal_set_admin_password(from._internal_admin_password());
  }
  if (!from._internal_admin_user().empty()) {
    _internal_set_admin_user(from._internal_admin_user());
  }
  if (!from._internal_network_name().empty()) {
    _internal_set_network_name(from._internal_network_name());
  }
  if (!from._internal_network_id().empty()) {
    _internal_set_network_id(from._internal_network_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationRequest::CopyFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blockchain.members.v1alpha1.CreateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationRequest::InternalSwap(CreateOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_new_member_, GetArenaForAllocation(),
      &other->user_id_new_member_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &org_domain_, GetArenaForAllocation(),
      &other->org_domain_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &admin_password_, GetArenaForAllocation(),
      &other->admin_password_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &admin_user_, GetArenaForAllocation(),
      &other->admin_user_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &network_name_, GetArenaForAllocation(),
      &other->network_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &network_id_, GetArenaForAllocation(),
      &other->network_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_getter, &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once,
      file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[2]);
}

// ===================================================================

class CreateInvitationRequest::_Internal {
 public:
  static const ::blockchain::members::v1alpha1::Invitation& invitation(const CreateInvitationRequest* msg);
};

const ::blockchain::members::v1alpha1::Invitation&
CreateInvitationRequest::_Internal::invitation(const CreateInvitationRequest* msg) {
  return *msg->invitation_;
}
void CreateInvitationRequest::clear_invitation() {
  if (GetArenaForAllocation() == nullptr && invitation_ != nullptr) {
    delete invitation_;
  }
  invitation_ = nullptr;
}
CreateInvitationRequest::CreateInvitationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blockchain.members.v1alpha1.CreateInvitationRequest)
}
CreateInvitationRequest::CreateInvitationRequest(const CreateInvitationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invitation()) {
    invitation_ = new ::blockchain::members::v1alpha1::Invitation(*from.invitation_);
  } else {
    invitation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:blockchain.members.v1alpha1.CreateInvitationRequest)
}

inline void CreateInvitationRequest::SharedCtor() {
invitation_ = nullptr;
}

CreateInvitationRequest::~CreateInvitationRequest() {
  // @@protoc_insertion_point(destructor:blockchain.members.v1alpha1.CreateInvitationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateInvitationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invitation_;
}

void CreateInvitationRequest::ArenaDtor(void* object) {
  CreateInvitationRequest* _this = reinterpret_cast< CreateInvitationRequest* >(object);
  (void)_this;
}
void CreateInvitationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInvitationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateInvitationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:blockchain.members.v1alpha1.CreateInvitationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invitation_ != nullptr) {
    delete invitation_;
  }
  invitation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInvitationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .blockchain.members.v1alpha1.Invitation invitation = 1 [json_name = "invitation"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invitation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInvitationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blockchain.members.v1alpha1.CreateInvitationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blockchain.members.v1alpha1.Invitation invitation = 1 [json_name = "invitation"];
  if (this->_internal_has_invitation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::invitation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blockchain.members.v1alpha1.CreateInvitationRequest)
  return target;
}

size_t CreateInvitationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blockchain.members.v1alpha1.CreateInvitationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .blockchain.members.v1alpha1.Invitation invitation = 1 [json_name = "invitation"];
  if (this->_internal_has_invitation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invitation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInvitationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateInvitationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInvitationRequest::GetClassData() const { return &_class_data_; }

void CreateInvitationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateInvitationRequest *>(to)->MergeFrom(
      static_cast<const CreateInvitationRequest &>(from));
}


void CreateInvitationRequest::MergeFrom(const CreateInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blockchain.members.v1alpha1.CreateInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invitation()) {
    _internal_mutable_invitation()->::blockchain::members::v1alpha1::Invitation::MergeFrom(from._internal_invitation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInvitationRequest::CopyFrom(const CreateInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blockchain.members.v1alpha1.CreateInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInvitationRequest::IsInitialized() const {
  return true;
}

void CreateInvitationRequest::InternalSwap(CreateInvitationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invitation_, other->invitation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInvitationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_getter, &descriptor_table_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto_once,
      file_level_metadata_blockchain_2fmembers_2fv1alpha1_2fmember_5fapi_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace members
}  // namespace blockchain
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::blockchain::members::v1alpha1::CreateOrganizationResponse* Arena::CreateMaybeMessage< ::blockchain::members::v1alpha1::CreateOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blockchain::members::v1alpha1::CreateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::blockchain::members::v1alpha1::CreateInvitationResponse* Arena::CreateMaybeMessage< ::blockchain::members::v1alpha1::CreateInvitationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blockchain::members::v1alpha1::CreateInvitationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::blockchain::members::v1alpha1::CreateOrganizationRequest* Arena::CreateMaybeMessage< ::blockchain::members::v1alpha1::CreateOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blockchain::members::v1alpha1::CreateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::blockchain::members::v1alpha1::CreateInvitationRequest* Arena::CreateMaybeMessage< ::blockchain::members::v1alpha1::CreateInvitationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blockchain::members::v1alpha1::CreateInvitationRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
