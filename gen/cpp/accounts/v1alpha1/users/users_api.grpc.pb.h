// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: accounts/v1alpha1/users/users_api.proto
#ifndef GRPC_accounts_2fv1alpha1_2fusers_2fusers_5fapi_2eproto__INCLUDED
#define GRPC_accounts_2fv1alpha1_2fusers_2fusers_5fapi_2eproto__INCLUDED

#include "accounts/v1alpha1/users/users_api.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace accounts {
namespace v1alpha1 {
namespace users {
namespace v1 {

class UserService final {
 public:
  static constexpr char const* service_full_name() {
    return "accounts.v1alpha1.users.v1.UserService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // /AUTH
    virtual ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>> AsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>>(AsyncListUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>> PrepareAsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>>(PrepareAsyncListUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>> AsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>>(AsyncGetOneUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>> PrepareAsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>>(PrepareAsyncGetOneUserRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>> AsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>>(AsyncListUserPaginationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>> PrepareAsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>>(PrepareAsyncListUserPaginationRaw(context, request, cq));
    }
    // invitation
    virtual ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>> AsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>>(AsyncListInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>> PrepareAsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>>(PrepareAsyncListInvitationUserRaw(context, request, cq));
    }
    // CHECK USER
    virtual ::grpc::Status CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>> AsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>>(AsyncCheckUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>> PrepareAsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>>(PrepareAsyncCheckUserRaw(context, request, cq));
    }
    virtual ::grpc::Status SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>> AsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>>(AsyncSendVerificationEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>> PrepareAsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>>(PrepareAsyncSendVerificationEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    // FILTER
    virtual ::grpc::Status GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>> AsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>>(AsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>> PrepareAsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>>(PrepareAsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    // DEX
    virtual ::grpc::Status GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>> AsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>>(AsyncGetListUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>> PrepareAsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>>(PrepareAsyncGetListUserDexRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>> AsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>>(AsyncGetOneUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>> PrepareAsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>>(PrepareAsyncGetOneUserDexRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // /AUTH
      virtual void CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // invitation
      virtual void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      // CHECK USER
      virtual void CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) = 0;
      // FILTER
      virtual void GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response, std::function<void(::grpc::Status)>) = 0;
      // DEX
      virtual void GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>* AsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserResponse>* PrepareAsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>* AsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserResponse>* PrepareAsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* AsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* PrepareAsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* AsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* PrepareAsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>* AsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::CheckUserResponse>* PrepareAsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* AsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* PrepareAsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* AsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* PrepareAsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>* AsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>* PrepareAsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* AsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* PrepareAsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    ::grpc::Status ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>> AsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>>(AsyncListUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>> PrepareAsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>>(PrepareAsyncListUserRaw(context, request, cq));
    }
    ::grpc::Status GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>> AsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>>(AsyncGetOneUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>> PrepareAsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>>(PrepareAsyncGetOneUserRaw(context, request, cq));
    }
    ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    ::grpc::Status ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>> AsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>>(AsyncListUserPaginationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>> PrepareAsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>>(PrepareAsyncListUserPaginationRaw(context, request, cq));
    }
    ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>> AsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>>(AsyncListInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>> PrepareAsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>>(PrepareAsyncListInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>> AsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>>(AsyncCheckUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>> PrepareAsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>>(PrepareAsyncCheckUserRaw(context, request, cq));
    }
    ::grpc::Status SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>> AsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>>(AsyncSendVerificationEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>> PrepareAsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>>(PrepareAsyncSendVerificationEmailRaw(context, request, cq));
    }
    ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    ::grpc::Status GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>> AsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>>(AsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>> PrepareAsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>>(PrepareAsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    ::grpc::Status GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>> AsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>>(AsyncGetListUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>> PrepareAsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>>(PrepareAsyncGetListUserDexRaw(context, request, cq));
    }
    ::grpc::Status GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>> AsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>>(AsyncGetOneUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>> PrepareAsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>>(PrepareAsyncGetOneUserDexRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response, std::function<void(::grpc::Status)>) override;
      void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response, std::function<void(::grpc::Status)>) override;
      void SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response, std::function<void(::grpc::Status)>) override;
      void VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response, std::function<void(::grpc::Status)>) override;
      void GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>* AsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserResponse>* PrepareAsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>* AsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserResponse>* PrepareAsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* AsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* PrepareAsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* AsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* PrepareAsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>* AsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::CheckUserResponse>* PrepareAsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* AsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* PrepareAsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* AsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* PrepareAsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>* AsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>* PrepareAsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* AsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* PrepareAsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUserPagination_;
    const ::grpc::internal::RpcMethod rpcmethod_SendInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AgreeInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckUser_;
    const ::grpc::internal::RpcMethod rpcmethod_SendVerificationEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUsersEmailFilter_;
    const ::grpc::internal::RpcMethod rpcmethod_GetListUserDex_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneUserDex_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // /AUTH
    virtual ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response);
    virtual ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response);
    virtual ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response);
    virtual ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response);
    virtual ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response);
    virtual ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response);
    // invitation
    virtual ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response);
    virtual ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response);
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response);
    virtual ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response);
    // CHECK USER
    virtual ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response);
    virtual ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response);
    virtual ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response);
    // FILTER
    virtual ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response);
    // DEX
    virtual ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response);
    virtual ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::CreateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::ListUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::GetOneUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::UpdateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::DeleteUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserPagination(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CheckUser() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckUser(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::CheckUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendVerificationEmail(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::VerifyEmailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUsersEmailFilter(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListUserDex(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::GetListUserDexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUserDex(::grpc::ServerContext* context, ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateUser<WithAsyncMethod_ListUser<WithAsyncMethod_GetOneUser<WithAsyncMethod_UpdateUser<WithAsyncMethod_DeleteUser<WithAsyncMethod_ListUserPagination<WithAsyncMethod_SendInvitationUser<WithAsyncMethod_GetInvitationUser<WithAsyncMethod_AgreeInvitationUser<WithAsyncMethod_ListInvitationUser<WithAsyncMethod_CheckUser<WithAsyncMethod_SendVerificationEmail<WithAsyncMethod_VerifyEmail<WithAsyncMethod_GetUsersEmailFilter<WithAsyncMethod_GetListUserDex<WithAsyncMethod_GetOneUserDex<Service > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CheckUser() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserPagination(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CheckUser() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendVerificationEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUsersEmailFilter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListUserDex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUserDex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::CreateUserRequest, ::accounts::v1alpha1::users::v1::CreateUserResponse>(std::bind(&WithStreamedUnaryMethod_CreateUser<BaseClass>::StreamedCreateUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CreateUserRequest* request, ::accounts::v1alpha1::users::v1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::CreateUserRequest,::accounts::v1alpha1::users::v1::CreateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::ListUserRequest, ::accounts::v1alpha1::users::v1::ListUserResponse>(std::bind(&WithStreamedUnaryMethod_ListUser<BaseClass>::StreamedListUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserRequest* request, ::accounts::v1alpha1::users::v1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::ListUserRequest,::accounts::v1alpha1::users::v1::ListUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::GetOneUserRequest, ::accounts::v1alpha1::users::v1::GetOneUserResponse>(std::bind(&WithStreamedUnaryMethod_GetOneUser<BaseClass>::StreamedGetOneUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::GetOneUserRequest,::accounts::v1alpha1::users::v1::GetOneUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::UpdateUserRequest, ::accounts::v1alpha1::users::v1::UpdateUserResponse>(std::bind(&WithStreamedUnaryMethod_UpdateUser<BaseClass>::StreamedUpdateUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::UpdateUserRequest* request, ::accounts::v1alpha1::users::v1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::UpdateUserRequest,::accounts::v1alpha1::users::v1::UpdateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::DeleteUserRequest, ::accounts::v1alpha1::users::v1::DeleteUserResponse>(std::bind(&WithStreamedUnaryMethod_DeleteUser<BaseClass>::StreamedDeleteUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::DeleteUserRequest* request, ::accounts::v1alpha1::users::v1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::DeleteUserRequest,::accounts::v1alpha1::users::v1::DeleteUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::ListUserPaginationRequest, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse>(std::bind(&WithStreamedUnaryMethod_ListUserPagination<BaseClass>::StreamedListUserPagination, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListUserPaginationRequest* request, ::accounts::v1alpha1::users::v1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUserPagination(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::ListUserPaginationRequest,::accounts::v1alpha1::users::v1::ListUserPaginationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::SendInvitationUserRequest, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_SendInvitationUser<BaseClass>::StreamedSendInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::SendInvitationUserRequest,::accounts::v1alpha1::users::v1::SendInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::GetInvitationUserRequest, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_GetInvitationUser<BaseClass>::StreamedGetInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::GetInvitationUserRequest,::accounts::v1alpha1::users::v1::GetInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_AgreeInvitationUser<BaseClass>::StreamedAgreeInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::AgreeInvitationUserRequest,::accounts::v1alpha1::users::v1::AgreeInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::ListInvitationUserRequest, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_ListInvitationUser<BaseClass>::StreamedListInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::ListInvitationUserRequest* request, ::accounts::v1alpha1::users::v1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::ListInvitationUserRequest,::accounts::v1alpha1::users::v1::ListInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CheckUser() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::CheckUserRequest, ::accounts::v1alpha1::users::v1::CheckUserResponse>(std::bind(&WithStreamedUnaryMethod_CheckUser<BaseClass>::StreamedCheckUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::CheckUserRequest* request, ::accounts::v1alpha1::users::v1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::CheckUserRequest,::accounts::v1alpha1::users::v1::CheckUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>(std::bind(&WithStreamedUnaryMethod_SendVerificationEmail<BaseClass>::StreamedSendVerificationEmail, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::users::v1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendVerificationEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::SendVerificationEmailRequest,::accounts::v1alpha1::users::v1::SendVerificationEmailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::VerifyEmailRequest, ::accounts::v1alpha1::users::v1::VerifyEmailResponse>(std::bind(&WithStreamedUnaryMethod_VerifyEmail<BaseClass>::StreamedVerifyEmail, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::VerifyEmailRequest* request, ::accounts::v1alpha1::users::v1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::VerifyEmailRequest,::accounts::v1alpha1::users::v1::VerifyEmailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>(std::bind(&WithStreamedUnaryMethod_GetUsersEmailFilter<BaseClass>::StreamedGetUsersEmailFilter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUsersEmailFilter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::GetUsersEmailFilterRequest,::accounts::v1alpha1::users::v1::GetUsersEmailFilterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::GetListUserDexRequest, ::accounts::v1alpha1::users::v1::GetListUserDexResponse>(std::bind(&WithStreamedUnaryMethod_GetListUserDex<BaseClass>::StreamedGetListUserDex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetListUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetListUserDex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::GetListUserDexRequest,::accounts::v1alpha1::users::v1::GetListUserDexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::users::v1::GetOneUserDexRequest, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse>(std::bind(&WithStreamedUnaryMethod_GetOneUserDex<BaseClass>::StreamedGetOneUserDex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::users::v1::GetOneUserDexRequest* request, ::accounts::v1alpha1::users::v1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneUserDex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::users::v1::GetOneUserDexRequest,::accounts::v1alpha1::users::v1::GetOneUserDexResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_ListUser<WithStreamedUnaryMethod_GetOneUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_ListUserPagination<WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationUser<WithStreamedUnaryMethod_CheckUser<WithStreamedUnaryMethod_SendVerificationEmail<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_GetUsersEmailFilter<WithStreamedUnaryMethod_GetListUserDex<WithStreamedUnaryMethod_GetOneUserDex<Service > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_ListUser<WithStreamedUnaryMethod_GetOneUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_ListUserPagination<WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationUser<WithStreamedUnaryMethod_CheckUser<WithStreamedUnaryMethod_SendVerificationEmail<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_GetUsersEmailFilter<WithStreamedUnaryMethod_GetListUserDex<WithStreamedUnaryMethod_GetOneUserDex<Service > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace users
}  // namespace v1alpha1
}  // namespace accounts


#endif  // GRPC_accounts_2fv1alpha1_2fusers_2fusers_5fapi_2eproto__INCLUDED
