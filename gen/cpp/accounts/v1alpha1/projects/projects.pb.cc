// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accounts/v1alpha1/projects/projects.proto

#include "accounts/v1alpha1/projects/projects.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace accounts {
namespace v1alpha1 {
namespace projects {
namespace v1 {
constexpr CreateProjectRequest::CreateProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plan_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , budget_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , budget_amount_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , card_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateProjectRequestDefaultTypeInternal {
  constexpr CreateProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateProjectRequestDefaultTypeInternal() {}
  union {
    CreateProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateProjectRequestDefaultTypeInternal _CreateProjectRequest_default_instance_;
constexpr GetOneProjectRequest::GetOneProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetOneProjectRequestDefaultTypeInternal {
  constexpr GetOneProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOneProjectRequestDefaultTypeInternal() {}
  union {
    GetOneProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOneProjectRequestDefaultTypeInternal _GetOneProjectRequest_default_instance_;
constexpr DeleteProjectRequest::DeleteProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteProjectRequestDefaultTypeInternal {
  constexpr DeleteProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteProjectRequestDefaultTypeInternal() {}
  union {
    DeleteProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteProjectRequestDefaultTypeInternal _DeleteProjectRequest_default_instance_;
constexpr ListProjectRequest::ListProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListProjectRequestDefaultTypeInternal {
  constexpr ListProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectRequestDefaultTypeInternal() {}
  union {
    ListProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectRequestDefaultTypeInternal _ListProjectRequest_default_instance_;
constexpr UpdateProjectRequest::UpdateProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_(nullptr){}
struct UpdateProjectRequestDefaultTypeInternal {
  constexpr UpdateProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateProjectRequestDefaultTypeInternal() {}
  union {
    UpdateProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateProjectRequestDefaultTypeInternal _UpdateProjectRequest_default_instance_;
constexpr ListProjectByOrganizationRequest::ListProjectByOrganizationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListProjectByOrganizationRequestDefaultTypeInternal {
  constexpr ListProjectByOrganizationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectByOrganizationRequestDefaultTypeInternal() {}
  union {
    ListProjectByOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectByOrganizationRequestDefaultTypeInternal _ListProjectByOrganizationRequest_default_instance_;
constexpr UpdadeProjectRoleRequest::UpdadeProjectRoleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(0u){}
struct UpdadeProjectRoleRequestDefaultTypeInternal {
  constexpr UpdadeProjectRoleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdadeProjectRoleRequestDefaultTypeInternal() {}
  union {
    UpdadeProjectRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdadeProjectRoleRequestDefaultTypeInternal _UpdadeProjectRoleRequest_default_instance_;
constexpr UpdadeProjectRoleResponse::UpdadeProjectRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdadeProjectRoleResponseDefaultTypeInternal {
  constexpr UpdadeProjectRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdadeProjectRoleResponseDefaultTypeInternal() {}
  union {
    UpdadeProjectRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdadeProjectRoleResponseDefaultTypeInternal _UpdadeProjectRoleResponse_default_instance_;
constexpr MemberRol::MemberRol(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0u)
  , is_admin_(false){}
struct MemberRolDefaultTypeInternal {
  constexpr MemberRolDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemberRolDefaultTypeInternal() {}
  union {
    MemberRol _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemberRolDefaultTypeInternal _MemberRol_default_instance_;
constexpr ProjectList::ProjectList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ProjectListDefaultTypeInternal {
  constexpr ProjectListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectListDefaultTypeInternal() {}
  union {
    ProjectList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectListDefaultTypeInternal _ProjectList_default_instance_;
constexpr CreateProjectResponse::CreateProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateProjectResponseDefaultTypeInternal {
  constexpr CreateProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateProjectResponseDefaultTypeInternal() {}
  union {
    CreateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateProjectResponseDefaultTypeInternal _CreateProjectResponse_default_instance_;
constexpr UpdateProjectResponse::UpdateProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateProjectResponseDefaultTypeInternal {
  constexpr UpdateProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateProjectResponseDefaultTypeInternal() {}
  union {
    UpdateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateProjectResponseDefaultTypeInternal _UpdateProjectResponse_default_instance_;
constexpr DeleteProjectResponse::DeleteProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteProjectResponseDefaultTypeInternal {
  constexpr DeleteProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteProjectResponseDefaultTypeInternal() {}
  union {
    DeleteProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteProjectResponseDefaultTypeInternal _DeleteProjectResponse_default_instance_;
constexpr GetOneProjectResponse::GetOneProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : members_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , updated_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , owner_(nullptr){}
struct GetOneProjectResponseDefaultTypeInternal {
  constexpr GetOneProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOneProjectResponseDefaultTypeInternal() {}
  union {
    GetOneProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOneProjectResponseDefaultTypeInternal _GetOneProjectResponse_default_instance_;
constexpr ListProjectByOrganizationResponse::ListProjectByOrganizationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_(){}
struct ListProjectByOrganizationResponseDefaultTypeInternal {
  constexpr ListProjectByOrganizationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectByOrganizationResponseDefaultTypeInternal() {}
  union {
    ListProjectByOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectByOrganizationResponseDefaultTypeInternal _ListProjectByOrganizationResponse_default_instance_;
constexpr ListProjectResponse::ListProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_(){}
struct ListProjectResponseDefaultTypeInternal {
  constexpr ListProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectResponseDefaultTypeInternal() {}
  union {
    ListProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectResponseDefaultTypeInternal _ListProjectResponse_default_instance_;
constexpr ListProjectPaginationRequest::ListProjectPaginationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offset_(0)
  , limit_(0){}
struct ListProjectPaginationRequestDefaultTypeInternal {
  constexpr ListProjectPaginationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectPaginationRequestDefaultTypeInternal() {}
  union {
    ListProjectPaginationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectPaginationRequestDefaultTypeInternal _ListProjectPaginationRequest_default_instance_;
constexpr ListProjectPaginationResponse::ListProjectPaginationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_()
  , count_(0)
  , page_(0)
  , max_page_(0){}
struct ListProjectPaginationResponseDefaultTypeInternal {
  constexpr ListProjectPaginationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListProjectPaginationResponseDefaultTypeInternal() {}
  union {
    ListProjectPaginationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListProjectPaginationResponseDefaultTypeInternal _ListProjectPaginationResponse_default_instance_;
constexpr UserList::UserList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : first_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , last_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0u)
  , is_active_(false)
  , is_super_user_(false){}
struct UserListDefaultTypeInternal {
  constexpr UserListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserListDefaultTypeInternal() {}
  union {
    UserList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserListDefaultTypeInternal _UserList_default_instance_;
constexpr DeleteUserByProjectRequest::DeleteUserByProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(0u){}
struct DeleteUserByProjectRequestDefaultTypeInternal {
  constexpr DeleteUserByProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteUserByProjectRequestDefaultTypeInternal() {}
  union {
    DeleteUserByProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteUserByProjectRequestDefaultTypeInternal _DeleteUserByProjectRequest_default_instance_;
constexpr DeleteUserByProjectResponse::DeleteUserByProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteUserByProjectResponseDefaultTypeInternal {
  constexpr DeleteUserByProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteUserByProjectResponseDefaultTypeInternal() {}
  union {
    DeleteUserByProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteUserByProjectResponseDefaultTypeInternal _DeleteUserByProjectResponse_default_instance_;
constexpr EditRoleUserByProjectRequest::EditRoleUserByProjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(0u){}
struct EditRoleUserByProjectRequestDefaultTypeInternal {
  constexpr EditRoleUserByProjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EditRoleUserByProjectRequestDefaultTypeInternal() {}
  union {
    EditRoleUserByProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EditRoleUserByProjectRequestDefaultTypeInternal _EditRoleUserByProjectRequest_default_instance_;
constexpr EditRoleUserByProjectResponse::EditRoleUserByProjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct EditRoleUserByProjectResponseDefaultTypeInternal {
  constexpr EditRoleUserByProjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EditRoleUserByProjectResponseDefaultTypeInternal() {}
  union {
    EditRoleUserByProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EditRoleUserByProjectResponseDefaultTypeInternal _EditRoleUserByProjectResponse_default_instance_;
}  // namespace v1
}  // namespace projects
}  // namespace v1alpha1
}  // namespace accounts
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[23];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, description_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, image_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, plan_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, budget_time_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, budget_amount_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectRequest, card_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteProjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdateProjectRequest, project_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdateProjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest, role_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::MemberRol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::MemberRol, id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::MemberRol, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::MemberRol, is_admin_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::MemberRol, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ProjectList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ProjectList, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ProjectList, image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::CreateProjectResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UpdateProjectResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteProjectResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, image_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, description_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, created_at_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, updated_at_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, members_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, owner_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::GetOneProjectResponse, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse, projects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectResponse, projects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest, limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse, projects_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse, count_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse, page_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse, max_page_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, first_name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, last_name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, email_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, is_active_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, is_super_user_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::UserList, image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest, role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse, msg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::accounts::v1alpha1::projects::v1::CreateProjectRequest)},
  { 14, -1, sizeof(::accounts::v1alpha1::projects::v1::GetOneProjectRequest)},
  { 20, -1, sizeof(::accounts::v1alpha1::projects::v1::DeleteProjectRequest)},
  { 26, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectRequest)},
  { 33, -1, sizeof(::accounts::v1alpha1::projects::v1::UpdateProjectRequest)},
  { 40, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest)},
  { 46, -1, sizeof(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest)},
  { 54, -1, sizeof(::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse)},
  { 60, -1, sizeof(::accounts::v1alpha1::projects::v1::MemberRol)},
  { 69, -1, sizeof(::accounts::v1alpha1::projects::v1::ProjectList)},
  { 76, -1, sizeof(::accounts::v1alpha1::projects::v1::CreateProjectResponse)},
  { 83, -1, sizeof(::accounts::v1alpha1::projects::v1::UpdateProjectResponse)},
  { 89, -1, sizeof(::accounts::v1alpha1::projects::v1::DeleteProjectResponse)},
  { 95, -1, sizeof(::accounts::v1alpha1::projects::v1::GetOneProjectResponse)},
  { 109, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse)},
  { 115, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectResponse)},
  { 121, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest)},
  { 128, -1, sizeof(::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse)},
  { 137, -1, sizeof(::accounts::v1alpha1::projects::v1::UserList)},
  { 150, -1, sizeof(::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest)},
  { 157, -1, sizeof(::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse)},
  { 163, -1, sizeof(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest)},
  { 171, -1, sizeof(::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_CreateProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_GetOneProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_DeleteProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_UpdateProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectByOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_UpdadeProjectRoleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_UpdadeProjectRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_MemberRol_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ProjectList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_CreateProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_UpdateProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_DeleteProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_GetOneProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectByOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectPaginationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_ListProjectPaginationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_UserList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_DeleteUserByProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_DeleteUserByProjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_EditRoleUserByProjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::projects::v1::_EditRoleUserByProjectResponse_default_instance_),
};

const char descriptor_table_protodef_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)accounts/v1alpha1/projects/projects.pr"
  "oto\022\035accounts.v1alpha1.projects.v1\032 acco"
  "unts/v1alpha1/accounts.proto\"\227\002\n\024CreateP"
  "rojectRequest\022\022\n\004name\030\001 \001(\tR\004name\022 \n\013des"
  "cription\030\002 \001(\tR\013description\022\024\n\005image\030\003 \001"
  "(\tR\005image\022\027\n\007user_id\030\005 \001(\tR\006userId\022\'\n\017or"
  "ganization_id\030\006 \001(\tR\016organizationId\022\022\n\004p"
  "lan\030\007 \001(\tR\004plan\022\037\n\013budget_time\030\010 \001(\tR\nbu"
  "dgetTime\022#\n\rbudget_amount\030\t \001(\tR\014budgetA"
  "mount\022\027\n\007card_id\030\n \001(\tR\006cardId\"&\n\024GetOne"
  "ProjectRequest\022\016\n\002id\030\002 \001(\tR\002id\"&\n\024Delete"
  "ProjectRequest\022\016\n\002id\030\002 \001(\tR\002id\"V\n\022ListPr"
  "ojectRequest\022\027\n\007user_id\030\002 \001(\tR\006userId\022\'\n"
  "\017organization_id\030\003 \001(\tR\016organizationId\"u"
  "\n\024UpdateProjectRequest\022M\n\007project\030\002 \001(\0132"
  "3.accounts.v1alpha1.projects.v1.CreatePr"
  "ojectRequestR\007project\022\016\n\002id\030\003 \001(\tR\002id\"K\n"
  " ListProjectByOrganizationRequest\022\'\n\017org"
  "anization_id\030\001 \001(\tR\016organizationId\"o\n\030Up"
  "dadeProjectRoleRequest\022\035\n\nproject_id\030\001 \001"
  "(\tR\tprojectId\022\027\n\007user_id\030\002 \001(\rR\006userId\022\033"
  "\n\trole_uuid\030\003 \001(\tR\010roleUuid\"-\n\031UpdadePro"
  "jectRoleResponse\022\020\n\003msg\030\001 \001(\tR\003msg\"\\\n\tMe"
  "mberRol\022\016\n\002id\030\001 \001(\rR\002id\022\022\n\004name\030\002 \001(\tR\004n"
  "ame\022\031\n\010is_admin\030\003 \001(\010R\007isAdmin\022\020\n\003uid\030\004 "
  "\001(\tR\003uid\"7\n\013ProjectList\022\022\n\004name\030\001 \001(\tR\004n"
  "ame\022\024\n\005image\030\002 \001(\tR\005image\"9\n\025CreateProje"
  "ctResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\016\n\002id\030\004 \001(\t"
  "R\002id\")\n\025UpdateProjectResponse\022\020\n\003msg\030\001 \001"
  "(\tR\003msg\")\n\025DeleteProjectResponse\022\020\n\003msg\030"
  "\001 \001(\tR\003msg\"\325\002\n\025GetOneProjectResponse\022\022\n\004"
  "name\030\002 \001(\tR\004name\022\024\n\005image\030\003 \001(\tR\005image\022 "
  "\n\013description\030\005 \001(\tR\013description\022\035\n\ncrea"
  "ted_at\030\006 \001(\tR\tcreatedAt\022\035\n\nupdated_at\030\007 "
  "\001(\tR\tupdatedAt\022:\n\007members\030\010 \003(\0132 .accoun"
  "ts.v1alpha1.MemberProjectR\007members\022=\n\005ow"
  "ner\030\t \001(\0132\'.accounts.v1alpha1.projects.v"
  "1.UserListR\005owner\022\016\n\002id\030\n \001(\tR\002id\022\'\n\017org"
  "anization_id\030\013 \001(\tR\016organizationId\"[\n!Li"
  "stProjectByOrganizationResponse\0226\n\010proje"
  "cts\030\001 \003(\0132\032.accounts.v1alpha1.ProjectR\010p"
  "rojects\"M\n\023ListProjectResponse\0226\n\010projec"
  "ts\030\001 \003(\0132\032.accounts.v1alpha1.ProjectR\010pr"
  "ojects\"L\n\034ListProjectPaginationRequest\022\026"
  "\n\006offset\030\001 \001(\005R\006offset\022\024\n\005limit\030\002 \001(\005R\005l"
  "imit\"\234\001\n\035ListProjectPaginationResponse\0226"
  "\n\010projects\030\001 \003(\0132\032.accounts.v1alpha1.Pro"
  "jectR\010projects\022\024\n\005count\030\002 \001(\005R\005count\022\022\n\004"
  "page\030\003 \001(\005R\004page\022\031\n\010max_page\030\004 \001(\005R\007maxP"
  "age\"\334\001\n\010UserList\022\016\n\002id\030\001 \001(\rR\002id\022\035\n\nfirs"
  "t_name\030\002 \001(\tR\tfirstName\022\033\n\tlast_name\030\003 \001"
  "(\tR\010lastName\022\024\n\005email\030\004 \001(\tR\005email\022\027\n\007us"
  "er_id\030\005 \001(\tR\006userId\022\033\n\tis_active\030\006 \001(\010R\010"
  "isActive\022\"\n\ris_super_user\030\007 \001(\010R\013isSuper"
  "User\022\024\n\005image\030\010 \001(\tR\005image\"T\n\032DeleteUser"
  "ByProjectRequest\022\027\n\007user_id\030\001 \001(\rR\006userI"
  "d\022\035\n\nproject_id\030\003 \001(\tR\tprojectId\"/\n\033Dele"
  "teUserByProjectResponse\022\020\n\003msg\030\001 \001(\tR\003ms"
  "g\"o\n\034EditRoleUserByProjectRequest\022\027\n\007use"
  "r_id\030\001 \001(\rR\006userId\022\035\n\nproject_id\030\004 \001(\tR\t"
  "projectId\022\027\n\007role_id\030\005 \001(\tR\006roleId\"1\n\035Ed"
  "itRoleUserByProjectResponse\022\020\n\003msg\030\001 \001(\t"
  "R\003msgB=Z;github.com/cuemby/ccp-sdk/gen/g"
  "o/accounts/v1alpha1/projectsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_deps[1] = {
  &::descriptor_table_accounts_2fv1alpha1_2faccounts_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto = {
  false, false, 2556, descriptor_table_protodef_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto, "accounts/v1alpha1/projects/projects.proto", 
  &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once, descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_deps, 1, 23,
  schemas, file_default_instances, TableStruct_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto::offsets,
  file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto, file_level_enum_descriptors_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto, file_level_service_descriptors_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter() {
  return &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto(&descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto);
namespace accounts {
namespace v1alpha1 {
namespace projects {
namespace v1 {

// ===================================================================

class CreateProjectRequest::_Internal {
 public:
};

CreateProjectRequest::CreateProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.CreateProjectRequest)
}
CreateProjectRequest::CreateProjectRequest(const CreateProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  plan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plan().empty()) {
    plan_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plan(), 
      GetArenaForAllocation());
  }
  budget_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_budget_time().empty()) {
    budget_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_budget_time(), 
      GetArenaForAllocation());
  }
  budget_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_budget_amount().empty()) {
    budget_amount_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_budget_amount(), 
      GetArenaForAllocation());
  }
  card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_card_id().empty()) {
    card_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_card_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.CreateProjectRequest)
}

inline void CreateProjectRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
plan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
budget_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
budget_amount_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
card_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateProjectRequest::~CreateProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  budget_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  budget_amount_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  card_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateProjectRequest::ArenaDtor(void* object) {
  CreateProjectRequest* _this = reinterpret_cast< CreateProjectRequest* >(object);
  (void)_this;
}
void CreateProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  description_.ClearToEmpty();
  image_.ClearToEmpty();
  user_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  plan_.ClearToEmpty();
  budget_time_.ClearToEmpty();
  budget_amount_.ClearToEmpty();
  card_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 3 [json_name = "image"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 5 [json_name = "userId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 6 [json_name = "organizationId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plan = 7 [json_name = "plan"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_plan();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.plan"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string budget_time = 8 [json_name = "budgetTime"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_budget_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.budget_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string budget_amount = 9 [json_name = "budgetAmount"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_budget_amount();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.budget_amount"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string card_id = 10 [json_name = "cardId"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_card_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectRequest.card_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.image");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_image(), target);
  }

  // string user_id = 5 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_user_id(), target);
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_organization_id(), target);
  }

  // string plan = 7 [json_name = "plan"];
  if (!this->_internal_plan().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plan().data(), static_cast<int>(this->_internal_plan().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.plan");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_plan(), target);
  }

  // string budget_time = 8 [json_name = "budgetTime"];
  if (!this->_internal_budget_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_budget_time().data(), static_cast<int>(this->_internal_budget_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.budget_time");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_budget_time(), target);
  }

  // string budget_amount = 9 [json_name = "budgetAmount"];
  if (!this->_internal_budget_amount().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_budget_amount().data(), static_cast<int>(this->_internal_budget_amount().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.budget_amount");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_budget_amount(), target);
  }

  // string card_id = 10 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_card_id().data(), static_cast<int>(this->_internal_card_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectRequest.card_id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_card_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  return target;
}

size_t CreateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // string user_id = 5 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string plan = 7 [json_name = "plan"];
  if (!this->_internal_plan().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plan());
  }

  // string budget_time = 8 [json_name = "budgetTime"];
  if (!this->_internal_budget_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_budget_time());
  }

  // string budget_amount = 9 [json_name = "budgetAmount"];
  if (!this->_internal_budget_amount().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_budget_amount());
  }

  // string card_id = 10 [json_name = "cardId"];
  if (!this->_internal_card_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_card_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectRequest::GetClassData() const { return &_class_data_; }

void CreateProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateProjectRequest *>(to)->MergeFrom(
      static_cast<const CreateProjectRequest &>(from));
}


void CreateProjectRequest::MergeFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_image().empty()) {
    _internal_set_image(from._internal_image());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_plan().empty()) {
    _internal_set_plan(from._internal_plan());
  }
  if (!from._internal_budget_time().empty()) {
    _internal_set_budget_time(from._internal_budget_time());
  }
  if (!from._internal_budget_amount().empty()) {
    _internal_set_budget_amount(from._internal_budget_amount());
  }
  if (!from._internal_card_id().empty()) {
    _internal_set_card_id(from._internal_card_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectRequest::CopyFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.CreateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectRequest::IsInitialized() const {
  return true;
}

void CreateProjectRequest::InternalSwap(CreateProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, GetArenaForAllocation(),
      &other->description_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &image_, GetArenaForAllocation(),
      &other->image_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plan_, GetArenaForAllocation(),
      &other->plan_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &budget_time_, GetArenaForAllocation(),
      &other->budget_time_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &budget_amount_, GetArenaForAllocation(),
      &other->budget_amount_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &card_id_, GetArenaForAllocation(),
      &other->card_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[0]);
}

// ===================================================================

class GetOneProjectRequest::_Internal {
 public:
};

GetOneProjectRequest::GetOneProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
}
GetOneProjectRequest::GetOneProjectRequest(const GetOneProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
}

inline void GetOneProjectRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOneProjectRequest::~GetOneProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetOneProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOneProjectRequest::ArenaDtor(void* object) {
  GetOneProjectRequest* _this = reinterpret_cast< GetOneProjectRequest* >(object);
  (void)_this;
}
void GetOneProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOneProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOneProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOneProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 2 [json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOneProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  return target;
}

size_t GetOneProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOneProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOneProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOneProjectRequest::GetClassData() const { return &_class_data_; }

void GetOneProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetOneProjectRequest *>(to)->MergeFrom(
      static_cast<const GetOneProjectRequest &>(from));
}


void GetOneProjectRequest::MergeFrom(const GetOneProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOneProjectRequest::CopyFrom(const GetOneProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.GetOneProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOneProjectRequest::IsInitialized() const {
  return true;
}

void GetOneProjectRequest::InternalSwap(GetOneProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOneProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[1]);
}

// ===================================================================

class DeleteProjectRequest::_Internal {
 public:
};

DeleteProjectRequest::DeleteProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
}
DeleteProjectRequest::DeleteProjectRequest(const DeleteProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
}

inline void DeleteProjectRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteProjectRequest::~DeleteProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectRequest::ArenaDtor(void* object) {
  DeleteProjectRequest* _this = reinterpret_cast< DeleteProjectRequest* >(object);
  (void)_this;
}
void DeleteProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 2 [json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.DeleteProjectRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.DeleteProjectRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  return target;
}

size_t DeleteProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectRequest::GetClassData() const { return &_class_data_; }

void DeleteProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteProjectRequest *>(to)->MergeFrom(
      static_cast<const DeleteProjectRequest &>(from));
}


void DeleteProjectRequest::MergeFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectRequest::CopyFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.DeleteProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectRequest::IsInitialized() const {
  return true;
}

void DeleteProjectRequest::InternalSwap(DeleteProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[2]);
}

// ===================================================================

class ListProjectRequest::_Internal {
 public:
};

ListProjectRequest::ListProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectRequest)
}
ListProjectRequest::ListProjectRequest(const ListProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectRequest)
}

inline void ListProjectRequest::SharedCtor() {
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListProjectRequest::~ListProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListProjectRequest::ArenaDtor(void* object) {
  ListProjectRequest* _this = reinterpret_cast< ListProjectRequest* >(object);
  (void)_this;
}
void ListProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.ListProjectRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 3 [json_name = "organizationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.ListProjectRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.ListProjectRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.ListProjectRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectRequest)
  return target;
}

size_t ListProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectRequest::GetClassData() const { return &_class_data_; }

void ListProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectRequest *>(to)->MergeFrom(
      static_cast<const ListProjectRequest &>(from));
}


void ListProjectRequest::MergeFrom(const ListProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectRequest::CopyFrom(const ListProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectRequest::IsInitialized() const {
  return true;
}

void ListProjectRequest::InternalSwap(ListProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[3]);
}

// ===================================================================

class UpdateProjectRequest::_Internal {
 public:
  static const ::accounts::v1alpha1::projects::v1::CreateProjectRequest& project(const UpdateProjectRequest* msg);
};

const ::accounts::v1alpha1::projects::v1::CreateProjectRequest&
UpdateProjectRequest::_Internal::project(const UpdateProjectRequest* msg) {
  return *msg->project_;
}
UpdateProjectRequest::UpdateProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
}
UpdateProjectRequest::UpdateProjectRequest(const UpdateProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_project()) {
    project_ = new ::accounts::v1alpha1::projects::v1::CreateProjectRequest(*from.project_);
  } else {
    project_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
}

inline void UpdateProjectRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_ = nullptr;
}

UpdateProjectRequest::~UpdateProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete project_;
}

void UpdateProjectRequest::ArenaDtor(void* object) {
  UpdateProjectRequest* _this = reinterpret_cast< UpdateProjectRequest* >(object);
  (void)_this;
}
void UpdateProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && project_ != nullptr) {
    delete project_;
  }
  project_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .accounts.v1alpha1.projects.v1.CreateProjectRequest project = 2 [json_name = "project"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_project(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3 [json_name = "id"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UpdateProjectRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .accounts.v1alpha1.projects.v1.CreateProjectRequest project = 2 [json_name = "project"];
  if (this->_internal_has_project()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::project(this), target, stream);
  }

  // string id = 3 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UpdateProjectRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  return target;
}

size_t UpdateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 3 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .accounts.v1alpha1.projects.v1.CreateProjectRequest project = 2 [json_name = "project"];
  if (this->_internal_has_project()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *project_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProjectRequest::GetClassData() const { return &_class_data_; }

void UpdateProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateProjectRequest *>(to)->MergeFrom(
      static_cast<const UpdateProjectRequest &>(from));
}


void UpdateProjectRequest::MergeFrom(const UpdateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_project()) {
    _internal_mutable_project()->::accounts::v1alpha1::projects::v1::CreateProjectRequest::MergeFrom(from._internal_project());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProjectRequest::CopyFrom(const UpdateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.UpdateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectRequest::IsInitialized() const {
  return true;
}

void UpdateProjectRequest::InternalSwap(UpdateProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(project_, other->project_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[4]);
}

// ===================================================================

class ListProjectByOrganizationRequest::_Internal {
 public:
};

ListProjectByOrganizationRequest::ListProjectByOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
}
ListProjectByOrganizationRequest::ListProjectByOrganizationRequest(const ListProjectByOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
}

inline void ListProjectByOrganizationRequest::SharedCtor() {
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListProjectByOrganizationRequest::~ListProjectByOrganizationRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectByOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListProjectByOrganizationRequest::ArenaDtor(void* object) {
  ListProjectByOrganizationRequest* _this = reinterpret_cast< ListProjectByOrganizationRequest* >(object);
  (void)_this;
}
void ListProjectByOrganizationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectByOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectByOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectByOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectByOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  return target;
}

size_t ListProjectByOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectByOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectByOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectByOrganizationRequest::GetClassData() const { return &_class_data_; }

void ListProjectByOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectByOrganizationRequest *>(to)->MergeFrom(
      static_cast<const ListProjectByOrganizationRequest &>(from));
}


void ListProjectByOrganizationRequest::MergeFrom(const ListProjectByOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectByOrganizationRequest::CopyFrom(const ListProjectByOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectByOrganizationRequest::IsInitialized() const {
  return true;
}

void ListProjectByOrganizationRequest::InternalSwap(ListProjectByOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectByOrganizationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[5]);
}

// ===================================================================

class UpdadeProjectRoleRequest::_Internal {
 public:
};

UpdadeProjectRoleRequest::UpdadeProjectRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
}
UpdadeProjectRoleRequest::UpdadeProjectRoleRequest(const UpdadeProjectRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  role_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_role_uuid().empty()) {
    role_uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_uuid(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
}

inline void UpdadeProjectRoleRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
role_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_ = 0u;
}

UpdadeProjectRoleRequest::~UpdadeProjectRoleRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdadeProjectRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  role_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdadeProjectRoleRequest::ArenaDtor(void* object) {
  UpdadeProjectRoleRequest* _this = reinterpret_cast< UpdadeProjectRoleRequest* >(object);
  (void)_this;
}
void UpdadeProjectRoleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdadeProjectRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdadeProjectRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  role_uuid_.ClearToEmpty();
  user_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdadeProjectRoleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string project_id = 1 [json_name = "projectId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string role_uuid = 3 [json_name = "roleUuid"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_role_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest.role_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdadeProjectRoleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_project_id(), target);
  }

  // uint32 user_id = 2 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_user_id(), target);
  }

  // string role_uuid = 3 [json_name = "roleUuid"];
  if (!this->_internal_role_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role_uuid().data(), static_cast<int>(this->_internal_role_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest.role_uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_role_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  return target;
}

size_t UpdadeProjectRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string role_uuid = 3 [json_name = "roleUuid"];
  if (!this->_internal_role_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role_uuid());
  }

  // uint32 user_id = 2 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdadeProjectRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdadeProjectRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdadeProjectRoleRequest::GetClassData() const { return &_class_data_; }

void UpdadeProjectRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdadeProjectRoleRequest *>(to)->MergeFrom(
      static_cast<const UpdadeProjectRoleRequest &>(from));
}


void UpdadeProjectRoleRequest::MergeFrom(const UpdadeProjectRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_role_uuid().empty()) {
    _internal_set_role_uuid(from._internal_role_uuid());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdadeProjectRoleRequest::CopyFrom(const UpdadeProjectRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdadeProjectRoleRequest::IsInitialized() const {
  return true;
}

void UpdadeProjectRoleRequest::InternalSwap(UpdadeProjectRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &role_uuid_, GetArenaForAllocation(),
      &other->role_uuid_, other->GetArenaForAllocation()
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdadeProjectRoleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[6]);
}

// ===================================================================

class UpdadeProjectRoleResponse::_Internal {
 public:
};

UpdadeProjectRoleResponse::UpdadeProjectRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
}
UpdadeProjectRoleResponse::UpdadeProjectRoleResponse(const UpdadeProjectRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
}

inline void UpdadeProjectRoleResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdadeProjectRoleResponse::~UpdadeProjectRoleResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdadeProjectRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdadeProjectRoleResponse::ArenaDtor(void* object) {
  UpdadeProjectRoleResponse* _this = reinterpret_cast< UpdadeProjectRoleResponse* >(object);
  (void)_this;
}
void UpdadeProjectRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdadeProjectRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdadeProjectRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdadeProjectRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdadeProjectRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  return target;
}

size_t UpdadeProjectRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdadeProjectRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdadeProjectRoleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdadeProjectRoleResponse::GetClassData() const { return &_class_data_; }

void UpdadeProjectRoleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdadeProjectRoleResponse *>(to)->MergeFrom(
      static_cast<const UpdadeProjectRoleResponse &>(from));
}


void UpdadeProjectRoleResponse::MergeFrom(const UpdadeProjectRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdadeProjectRoleResponse::CopyFrom(const UpdadeProjectRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.UpdadeProjectRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdadeProjectRoleResponse::IsInitialized() const {
  return true;
}

void UpdadeProjectRoleResponse::InternalSwap(UpdadeProjectRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdadeProjectRoleResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[7]);
}

// ===================================================================

class MemberRol::_Internal {
 public:
};

MemberRol::MemberRol(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.MemberRol)
}
MemberRol::MemberRol(const MemberRol& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_admin_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_admin_));
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.MemberRol)
}

inline void MemberRol::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_admin_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_admin_));
}

MemberRol::~MemberRol() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.MemberRol)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemberRol::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MemberRol::ArenaDtor(void* object) {
  MemberRol* _this = reinterpret_cast< MemberRol* >(object);
  (void)_this;
}
void MemberRol::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemberRol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemberRol::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.MemberRol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  uid_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_admin_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_admin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemberRol::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.MemberRol.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_admin = 3 [json_name = "isAdmin"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_admin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uid = 4 [json_name = "uid"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.MemberRol.uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemberRol::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.MemberRol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.MemberRol.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bool is_admin = 3 [json_name = "isAdmin"];
  if (this->_internal_is_admin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_admin(), target);
  }

  // string uid = 4 [json_name = "uid"];
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.MemberRol.uid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.MemberRol)
  return target;
}

size_t MemberRol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.MemberRol)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string uid = 4 [json_name = "uid"];
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool is_admin = 3 [json_name = "isAdmin"];
  if (this->_internal_is_admin() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemberRol::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemberRol::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemberRol::GetClassData() const { return &_class_data_; }

void MemberRol::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<MemberRol *>(to)->MergeFrom(
      static_cast<const MemberRol &>(from));
}


void MemberRol::MergeFrom(const MemberRol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.MemberRol)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_is_admin() != 0) {
    _internal_set_is_admin(from._internal_is_admin());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemberRol::CopyFrom(const MemberRol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.MemberRol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberRol::IsInitialized() const {
  return true;
}

void MemberRol::InternalSwap(MemberRol* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid_, GetArenaForAllocation(),
      &other->uid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemberRol, is_admin_)
      + sizeof(MemberRol::is_admin_)
      - PROTOBUF_FIELD_OFFSET(MemberRol, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemberRol::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[8]);
}

// ===================================================================

class ProjectList::_Internal {
 public:
};

ProjectList::ProjectList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ProjectList)
}
ProjectList::ProjectList(const ProjectList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ProjectList)
}

inline void ProjectList::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProjectList::~ProjectList() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ProjectList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProjectList::ArenaDtor(void* object) {
  ProjectList* _this = reinterpret_cast< ProjectList* >(object);
  (void)_this;
}
void ProjectList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectList::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ProjectList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  image_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.ProjectList.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 2 [json_name = "image"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.ProjectList.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProjectList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ProjectList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.ProjectList.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string image = 2 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.ProjectList.image");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ProjectList)
  return target;
}

size_t ProjectList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ProjectList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string image = 2 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProjectList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProjectList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProjectList::GetClassData() const { return &_class_data_; }

void ProjectList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProjectList *>(to)->MergeFrom(
      static_cast<const ProjectList &>(from));
}


void ProjectList::MergeFrom(const ProjectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ProjectList)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_image().empty()) {
    _internal_set_image(from._internal_image());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectList::CopyFrom(const ProjectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ProjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectList::IsInitialized() const {
  return true;
}

void ProjectList::InternalSwap(ProjectList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &image_, GetArenaForAllocation(),
      &other->image_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[9]);
}

// ===================================================================

class CreateProjectResponse::_Internal {
 public:
};

CreateProjectResponse::CreateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.CreateProjectResponse)
}
CreateProjectResponse::CreateProjectResponse(const CreateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.CreateProjectResponse)
}

inline void CreateProjectResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateProjectResponse::~CreateProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateProjectResponse::ArenaDtor(void* object) {
  CreateProjectResponse* _this = reinterpret_cast< CreateProjectResponse* >(object);
  (void)_this;
}
void CreateProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 4 [json_name = "id"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.CreateProjectResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string id = 4 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.CreateProjectResponse.id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  return target;
}

size_t CreateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string id = 4 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectResponse::GetClassData() const { return &_class_data_; }

void CreateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateProjectResponse *>(to)->MergeFrom(
      static_cast<const CreateProjectResponse &>(from));
}


void CreateProjectResponse::MergeFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectResponse::CopyFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.CreateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectResponse::IsInitialized() const {
  return true;
}

void CreateProjectResponse::InternalSwap(CreateProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[10]);
}

// ===================================================================

class UpdateProjectResponse::_Internal {
 public:
};

UpdateProjectResponse::UpdateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
}
UpdateProjectResponse::UpdateProjectResponse(const UpdateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
}

inline void UpdateProjectResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateProjectResponse::~UpdateProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateProjectResponse::ArenaDtor(void* object) {
  UpdateProjectResponse* _this = reinterpret_cast< UpdateProjectResponse* >(object);
  (void)_this;
}
void UpdateProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UpdateProjectResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UpdateProjectResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  return target;
}

size_t UpdateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProjectResponse::GetClassData() const { return &_class_data_; }

void UpdateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateProjectResponse *>(to)->MergeFrom(
      static_cast<const UpdateProjectResponse &>(from));
}


void UpdateProjectResponse::MergeFrom(const UpdateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProjectResponse::CopyFrom(const UpdateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.UpdateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectResponse::IsInitialized() const {
  return true;
}

void UpdateProjectResponse::InternalSwap(UpdateProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[11]);
}

// ===================================================================

class DeleteProjectResponse::_Internal {
 public:
};

DeleteProjectResponse::DeleteProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
}
DeleteProjectResponse::DeleteProjectResponse(const DeleteProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
}

inline void DeleteProjectResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteProjectResponse::~DeleteProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteProjectResponse::ArenaDtor(void* object) {
  DeleteProjectResponse* _this = reinterpret_cast< DeleteProjectResponse* >(object);
  (void)_this;
}
void DeleteProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.DeleteProjectResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.DeleteProjectResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  return target;
}

size_t DeleteProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectResponse::GetClassData() const { return &_class_data_; }

void DeleteProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteProjectResponse *>(to)->MergeFrom(
      static_cast<const DeleteProjectResponse &>(from));
}


void DeleteProjectResponse::MergeFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectResponse::CopyFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.DeleteProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectResponse::IsInitialized() const {
  return true;
}

void DeleteProjectResponse::InternalSwap(DeleteProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[12]);
}

// ===================================================================

class GetOneProjectResponse::_Internal {
 public:
  static const ::accounts::v1alpha1::projects::v1::UserList& owner(const GetOneProjectResponse* msg);
};

const ::accounts::v1alpha1::projects::v1::UserList&
GetOneProjectResponse::_Internal::owner(const GetOneProjectResponse* msg) {
  return *msg->owner_;
}
void GetOneProjectResponse::clear_members() {
  members_.Clear();
}
GetOneProjectResponse::GetOneProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  members_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
}
GetOneProjectResponse::GetOneProjectResponse(const GetOneProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  created_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_created_at().empty()) {
    created_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_created_at(), 
      GetArenaForAllocation());
  }
  updated_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_updated_at().empty()) {
    updated_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_updated_at(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_owner()) {
    owner_ = new ::accounts::v1alpha1::projects::v1::UserList(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
}

inline void GetOneProjectResponse::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
created_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
updated_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
owner_ = nullptr;
}

GetOneProjectResponse::~GetOneProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetOneProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  updated_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete owner_;
}

void GetOneProjectResponse::ArenaDtor(void* object) {
  GetOneProjectResponse* _this = reinterpret_cast< GetOneProjectResponse* >(object);
  (void)_this;
}
void GetOneProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOneProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOneProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  name_.ClearToEmpty();
  image_.ClearToEmpty();
  description_.ClearToEmpty();
  created_at_.ClearToEmpty();
  updated_at_.ClearToEmpty();
  id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOneProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 3 [json_name = "image"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 5 [json_name = "description"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string created_at = 6 [json_name = "createdAt"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_created_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.created_at"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string updated_at = 7 [json_name = "updatedAt"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_updated_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.updated_at"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.MemberProject members = 8 [json_name = "members"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // .accounts.v1alpha1.projects.v1.UserList owner = 9 [json_name = "owner"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 10 [json_name = "id"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 11 [json_name = "organizationId"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.GetOneProjectResponse.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOneProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.image");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_image(), target);
  }

  // string description = 5 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // string created_at = 6 [json_name = "createdAt"];
  if (!this->_internal_created_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_created_at().data(), static_cast<int>(this->_internal_created_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.created_at");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_created_at(), target);
  }

  // string updated_at = 7 [json_name = "updatedAt"];
  if (!this->_internal_updated_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_updated_at().data(), static_cast<int>(this->_internal_updated_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.updated_at");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_updated_at(), target);
  }

  // repeated .accounts.v1alpha1.MemberProject members = 8 [json_name = "members"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_members(i), target, stream);
  }

  // .accounts.v1alpha1.projects.v1.UserList owner = 9 [json_name = "owner"];
  if (this->_internal_has_owner()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::owner(this), target, stream);
  }

  // string id = 10 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_id(), target);
  }

  // string organization_id = 11 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.GetOneProjectResponse.organization_id");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  return target;
}

size_t GetOneProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.MemberProject members = 8 [json_name = "members"];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // string description = 5 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string created_at = 6 [json_name = "createdAt"];
  if (!this->_internal_created_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_created_at());
  }

  // string updated_at = 7 [json_name = "updatedAt"];
  if (!this->_internal_updated_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_updated_at());
  }

  // string id = 10 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string organization_id = 11 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // .accounts.v1alpha1.projects.v1.UserList owner = 9 [json_name = "owner"];
  if (this->_internal_has_owner()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *owner_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOneProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOneProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOneProjectResponse::GetClassData() const { return &_class_data_; }

void GetOneProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetOneProjectResponse *>(to)->MergeFrom(
      static_cast<const GetOneProjectResponse &>(from));
}


void GetOneProjectResponse::MergeFrom(const GetOneProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_image().empty()) {
    _internal_set_image(from._internal_image());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_created_at().empty()) {
    _internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_updated_at().empty()) {
    _internal_set_updated_at(from._internal_updated_at());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_has_owner()) {
    _internal_mutable_owner()->::accounts::v1alpha1::projects::v1::UserList::MergeFrom(from._internal_owner());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOneProjectResponse::CopyFrom(const GetOneProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.GetOneProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOneProjectResponse::IsInitialized() const {
  return true;
}

void GetOneProjectResponse::InternalSwap(GetOneProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &image_, GetArenaForAllocation(),
      &other->image_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, GetArenaForAllocation(),
      &other->description_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &created_at_, GetArenaForAllocation(),
      &other->created_at_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &updated_at_, GetArenaForAllocation(),
      &other->updated_at_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  swap(owner_, other->owner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOneProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[13]);
}

// ===================================================================

class ListProjectByOrganizationResponse::_Internal {
 public:
};

void ListProjectByOrganizationResponse::clear_projects() {
  projects_.Clear();
}
ListProjectByOrganizationResponse::ListProjectByOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
}
ListProjectByOrganizationResponse::ListProjectByOrganizationResponse(const ListProjectByOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      projects_(from.projects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
}

inline void ListProjectByOrganizationResponse::SharedCtor() {
}

ListProjectByOrganizationResponse::~ListProjectByOrganizationResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectByOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListProjectByOrganizationResponse::ArenaDtor(void* object) {
  ListProjectByOrganizationResponse* _this = reinterpret_cast< ListProjectByOrganizationResponse* >(object);
  (void)_this;
}
void ListProjectByOrganizationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectByOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectByOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectByOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectByOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_projects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_projects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  return target;
}

size_t ListProjectByOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  total_size += 1UL * this->_internal_projects_size();
  for (const auto& msg : this->projects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectByOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectByOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectByOrganizationResponse::GetClassData() const { return &_class_data_; }

void ListProjectByOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectByOrganizationResponse *>(to)->MergeFrom(
      static_cast<const ListProjectByOrganizationResponse &>(from));
}


void ListProjectByOrganizationResponse::MergeFrom(const ListProjectByOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectByOrganizationResponse::CopyFrom(const ListProjectByOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectByOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectByOrganizationResponse::IsInitialized() const {
  return true;
}

void ListProjectByOrganizationResponse::InternalSwap(ListProjectByOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectByOrganizationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[14]);
}

// ===================================================================

class ListProjectResponse::_Internal {
 public:
};

void ListProjectResponse::clear_projects() {
  projects_.Clear();
}
ListProjectResponse::ListProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectResponse)
}
ListProjectResponse::ListProjectResponse(const ListProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      projects_(from.projects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectResponse)
}

inline void ListProjectResponse::SharedCtor() {
}

ListProjectResponse::~ListProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListProjectResponse::ArenaDtor(void* object) {
  ListProjectResponse* _this = reinterpret_cast< ListProjectResponse* >(object);
  (void)_this;
}
void ListProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_projects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_projects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectResponse)
  return target;
}

size_t ListProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  total_size += 1UL * this->_internal_projects_size();
  for (const auto& msg : this->projects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectResponse::GetClassData() const { return &_class_data_; }

void ListProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectResponse *>(to)->MergeFrom(
      static_cast<const ListProjectResponse &>(from));
}


void ListProjectResponse::MergeFrom(const ListProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectResponse::CopyFrom(const ListProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectResponse::IsInitialized() const {
  return true;
}

void ListProjectResponse::InternalSwap(ListProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[15]);
}

// ===================================================================

class ListProjectPaginationRequest::_Internal {
 public:
};

ListProjectPaginationRequest::ListProjectPaginationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
}
ListProjectPaginationRequest::ListProjectPaginationRequest(const ListProjectPaginationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
}

inline void ListProjectPaginationRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
}

ListProjectPaginationRequest::~ListProjectPaginationRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectPaginationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListProjectPaginationRequest::ArenaDtor(void* object) {
  ListProjectPaginationRequest* _this = reinterpret_cast< ListProjectPaginationRequest* >(object);
  (void)_this;
}
void ListProjectPaginationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectPaginationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectPaginationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectPaginationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 offset = 1 [json_name = "offset"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 limit = 2 [json_name = "limit"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectPaginationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 offset = 1 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_offset(), target);
  }

  // int32 limit = 2 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  return target;
}

size_t ListProjectPaginationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 offset = 1 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_offset());
  }

  // int32 limit = 2 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectPaginationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectPaginationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectPaginationRequest::GetClassData() const { return &_class_data_; }

void ListProjectPaginationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectPaginationRequest *>(to)->MergeFrom(
      static_cast<const ListProjectPaginationRequest &>(from));
}


void ListProjectPaginationRequest::MergeFrom(const ListProjectPaginationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectPaginationRequest::CopyFrom(const ListProjectPaginationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectPaginationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectPaginationRequest::IsInitialized() const {
  return true;
}

void ListProjectPaginationRequest::InternalSwap(ListProjectPaginationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListProjectPaginationRequest, limit_)
      + sizeof(ListProjectPaginationRequest::limit_)
      - PROTOBUF_FIELD_OFFSET(ListProjectPaginationRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectPaginationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[16]);
}

// ===================================================================

class ListProjectPaginationResponse::_Internal {
 public:
};

void ListProjectPaginationResponse::clear_projects() {
  projects_.Clear();
}
ListProjectPaginationResponse::ListProjectPaginationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
}
ListProjectPaginationResponse::ListProjectPaginationResponse(const ListProjectPaginationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      projects_(from.projects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_page_) -
    reinterpret_cast<char*>(&count_)) + sizeof(max_page_));
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
}

inline void ListProjectPaginationResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_page_) -
    reinterpret_cast<char*>(&count_)) + sizeof(max_page_));
}

ListProjectPaginationResponse::~ListProjectPaginationResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListProjectPaginationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListProjectPaginationResponse::ArenaDtor(void* object) {
  ListProjectPaginationResponse* _this = reinterpret_cast< ListProjectPaginationResponse* >(object);
  (void)_this;
}
void ListProjectPaginationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListProjectPaginationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListProjectPaginationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_page_) -
      reinterpret_cast<char*>(&count_)) + sizeof(max_page_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListProjectPaginationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 count = 2 [json_name = "count"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page = 3 [json_name = "page"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_page = 4 [json_name = "maxPage"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListProjectPaginationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_projects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_projects(i), target, stream);
  }

  // int32 count = 2 [json_name = "count"];
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_count(), target);
  }

  // int32 page = 3 [json_name = "page"];
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page(), target);
  }

  // int32 max_page = 4 [json_name = "maxPage"];
  if (this->_internal_max_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_max_page(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  return target;
}

size_t ListProjectPaginationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 1 [json_name = "projects"];
  total_size += 1UL * this->_internal_projects_size();
  for (const auto& msg : this->projects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 count = 2 [json_name = "count"];
  if (this->_internal_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  // int32 page = 3 [json_name = "page"];
  if (this->_internal_page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page());
  }

  // int32 max_page = 4 [json_name = "maxPage"];
  if (this->_internal_max_page() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_page());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListProjectPaginationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListProjectPaginationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListProjectPaginationResponse::GetClassData() const { return &_class_data_; }

void ListProjectPaginationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListProjectPaginationResponse *>(to)->MergeFrom(
      static_cast<const ListProjectPaginationResponse &>(from));
}


void ListProjectPaginationResponse::MergeFrom(const ListProjectPaginationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_page() != 0) {
    _internal_set_page(from._internal_page());
  }
  if (from._internal_max_page() != 0) {
    _internal_set_max_page(from._internal_max_page());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListProjectPaginationResponse::CopyFrom(const ListProjectPaginationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.ListProjectPaginationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListProjectPaginationResponse::IsInitialized() const {
  return true;
}

void ListProjectPaginationResponse::InternalSwap(ListProjectPaginationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListProjectPaginationResponse, max_page_)
      + sizeof(ListProjectPaginationResponse::max_page_)
      - PROTOBUF_FIELD_OFFSET(ListProjectPaginationResponse, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListProjectPaginationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[17]);
}

// ===================================================================

class UserList::_Internal {
 public:
};

UserList::UserList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.UserList)
}
UserList::UserList(const UserList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_first_name().empty()) {
    first_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_first_name(), 
      GetArenaForAllocation());
  }
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_name().empty()) {
    last_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_name(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_super_user_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_super_user_));
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.UserList)
}

inline void UserList::SharedCtor() {
first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_super_user_) -
    reinterpret_cast<char*>(&id_)) + sizeof(is_super_user_));
}

UserList::~UserList() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.UserList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  first_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserList::ArenaDtor(void* object) {
  UserList* _this = reinterpret_cast< UserList* >(object);
  (void)_this;
}
void UserList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserList::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.UserList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  first_name_.ClearToEmpty();
  last_name_.ClearToEmpty();
  email_.ClearToEmpty();
  user_id_.ClearToEmpty();
  image_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_super_user_) -
      reinterpret_cast<char*>(&id_)) + sizeof(is_super_user_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string first_name = 2 [json_name = "firstName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_first_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UserList.first_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_name = 3 [json_name = "lastName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UserList.last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 4 [json_name = "email"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UserList.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 5 [json_name = "userId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UserList.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_active = 6 [json_name = "isActive"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_super_user = 7 [json_name = "isSuperUser"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          is_super_user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 8 [json_name = "image"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.UserList.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.UserList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string first_name = 2 [json_name = "firstName"];
  if (!this->_internal_first_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UserList.first_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_first_name(), target);
  }

  // string last_name = 3 [json_name = "lastName"];
  if (!this->_internal_last_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UserList.last_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_last_name(), target);
  }

  // string email = 4 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UserList.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  // string user_id = 5 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UserList.user_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_user_id(), target);
  }

  // bool is_active = 6 [json_name = "isActive"];
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_active(), target);
  }

  // bool is_super_user = 7 [json_name = "isSuperUser"];
  if (this->_internal_is_super_user() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_is_super_user(), target);
  }

  // string image = 8 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.UserList.image");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_image(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.UserList)
  return target;
}

size_t UserList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.UserList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string first_name = 2 [json_name = "firstName"];
  if (!this->_internal_first_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string last_name = 3 [json_name = "lastName"];
  if (!this->_internal_last_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // string email = 4 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string user_id = 5 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string image = 8 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // uint32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool is_active = 6 [json_name = "isActive"];
  if (this->_internal_is_active() != 0) {
    total_size += 1 + 1;
  }

  // bool is_super_user = 7 [json_name = "isSuperUser"];
  if (this->_internal_is_super_user() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserList::GetClassData() const { return &_class_data_; }

void UserList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UserList *>(to)->MergeFrom(
      static_cast<const UserList &>(from));
}


void UserList::MergeFrom(const UserList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.UserList)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_first_name().empty()) {
    _internal_set_first_name(from._internal_first_name());
  }
  if (!from._internal_last_name().empty()) {
    _internal_set_last_name(from._internal_last_name());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_image().empty()) {
    _internal_set_image(from._internal_image());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_is_active() != 0) {
    _internal_set_is_active(from._internal_is_active());
  }
  if (from._internal_is_super_user() != 0) {
    _internal_set_is_super_user(from._internal_is_super_user());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserList::CopyFrom(const UserList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.UserList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserList::IsInitialized() const {
  return true;
}

void UserList::InternalSwap(UserList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &first_name_, GetArenaForAllocation(),
      &other->first_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &last_name_, GetArenaForAllocation(),
      &other->last_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &image_, GetArenaForAllocation(),
      &other->image_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserList, is_super_user_)
      + sizeof(UserList::is_super_user_)
      - PROTOBUF_FIELD_OFFSET(UserList, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[18]);
}

// ===================================================================

class DeleteUserByProjectRequest::_Internal {
 public:
};

DeleteUserByProjectRequest::DeleteUserByProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
}
DeleteUserByProjectRequest::DeleteUserByProjectRequest(const DeleteUserByProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
}

inline void DeleteUserByProjectRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_ = 0u;
}

DeleteUserByProjectRequest::~DeleteUserByProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteUserByProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteUserByProjectRequest::ArenaDtor(void* object) {
  DeleteUserByProjectRequest* _this = reinterpret_cast< DeleteUserByProjectRequest* >(object);
  (void)_this;
}
void DeleteUserByProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteUserByProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteUserByProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  user_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUserByProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 3 [json_name = "projectId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteUserByProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_user_id(), target);
  }

  // string project_id = 3 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  return target;
}

size_t DeleteUserByProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 3 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // uint32 user_id = 1 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUserByProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteUserByProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUserByProjectRequest::GetClassData() const { return &_class_data_; }

void DeleteUserByProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteUserByProjectRequest *>(to)->MergeFrom(
      static_cast<const DeleteUserByProjectRequest &>(from));
}


void DeleteUserByProjectRequest::MergeFrom(const DeleteUserByProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserByProjectRequest::CopyFrom(const DeleteUserByProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserByProjectRequest::IsInitialized() const {
  return true;
}

void DeleteUserByProjectRequest::InternalSwap(DeleteUserByProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUserByProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[19]);
}

// ===================================================================

class DeleteUserByProjectResponse::_Internal {
 public:
};

DeleteUserByProjectResponse::DeleteUserByProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
}
DeleteUserByProjectResponse::DeleteUserByProjectResponse(const DeleteUserByProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
}

inline void DeleteUserByProjectResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteUserByProjectResponse::~DeleteUserByProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteUserByProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteUserByProjectResponse::ArenaDtor(void* object) {
  DeleteUserByProjectResponse* _this = reinterpret_cast< DeleteUserByProjectResponse* >(object);
  (void)_this;
}
void DeleteUserByProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteUserByProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteUserByProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUserByProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteUserByProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  return target;
}

size_t DeleteUserByProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUserByProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteUserByProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUserByProjectResponse::GetClassData() const { return &_class_data_; }

void DeleteUserByProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteUserByProjectResponse *>(to)->MergeFrom(
      static_cast<const DeleteUserByProjectResponse &>(from));
}


void DeleteUserByProjectResponse::MergeFrom(const DeleteUserByProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserByProjectResponse::CopyFrom(const DeleteUserByProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.DeleteUserByProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserByProjectResponse::IsInitialized() const {
  return true;
}

void DeleteUserByProjectResponse::InternalSwap(DeleteUserByProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUserByProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[20]);
}

// ===================================================================

class EditRoleUserByProjectRequest::_Internal {
 public:
};

EditRoleUserByProjectRequest::EditRoleUserByProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
}
EditRoleUserByProjectRequest::EditRoleUserByProjectRequest(const EditRoleUserByProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  role_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_role_id().empty()) {
    role_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_id(), 
      GetArenaForAllocation());
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
}

inline void EditRoleUserByProjectRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
role_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_ = 0u;
}

EditRoleUserByProjectRequest::~EditRoleUserByProjectRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EditRoleUserByProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  role_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EditRoleUserByProjectRequest::ArenaDtor(void* object) {
  EditRoleUserByProjectRequest* _this = reinterpret_cast< EditRoleUserByProjectRequest* >(object);
  (void)_this;
}
void EditRoleUserByProjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EditRoleUserByProjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EditRoleUserByProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  role_id_.ClearToEmpty();
  user_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EditRoleUserByProjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 4 [json_name = "projectId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string role_id = 5 [json_name = "roleId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_role_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest.role_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EditRoleUserByProjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_user_id(), target);
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_project_id(), target);
  }

  // string role_id = 5 [json_name = "roleId"];
  if (!this->_internal_role_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role_id().data(), static_cast<int>(this->_internal_role_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest.role_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  return target;
}

size_t EditRoleUserByProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string role_id = 5 [json_name = "roleId"];
  if (!this->_internal_role_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role_id());
  }

  // uint32 user_id = 1 [json_name = "userId"];
  if (this->_internal_user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EditRoleUserByProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EditRoleUserByProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EditRoleUserByProjectRequest::GetClassData() const { return &_class_data_; }

void EditRoleUserByProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<EditRoleUserByProjectRequest *>(to)->MergeFrom(
      static_cast<const EditRoleUserByProjectRequest &>(from));
}


void EditRoleUserByProjectRequest::MergeFrom(const EditRoleUserByProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_role_id().empty()) {
    _internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EditRoleUserByProjectRequest::CopyFrom(const EditRoleUserByProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditRoleUserByProjectRequest::IsInitialized() const {
  return true;
}

void EditRoleUserByProjectRequest::InternalSwap(EditRoleUserByProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &role_id_, GetArenaForAllocation(),
      &other->role_id_, other->GetArenaForAllocation()
  );
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EditRoleUserByProjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[21]);
}

// ===================================================================

class EditRoleUserByProjectResponse::_Internal {
 public:
};

EditRoleUserByProjectResponse::EditRoleUserByProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
}
EditRoleUserByProjectResponse::EditRoleUserByProjectResponse(const EditRoleUserByProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
}

inline void EditRoleUserByProjectResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EditRoleUserByProjectResponse::~EditRoleUserByProjectResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EditRoleUserByProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EditRoleUserByProjectResponse::ArenaDtor(void* object) {
  EditRoleUserByProjectResponse* _this = reinterpret_cast< EditRoleUserByProjectResponse* >(object);
  (void)_this;
}
void EditRoleUserByProjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EditRoleUserByProjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EditRoleUserByProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EditRoleUserByProjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EditRoleUserByProjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  return target;
}

size_t EditRoleUserByProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EditRoleUserByProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EditRoleUserByProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EditRoleUserByProjectResponse::GetClassData() const { return &_class_data_; }

void EditRoleUserByProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<EditRoleUserByProjectResponse *>(to)->MergeFrom(
      static_cast<const EditRoleUserByProjectResponse &>(from));
}


void EditRoleUserByProjectResponse::MergeFrom(const EditRoleUserByProjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EditRoleUserByProjectResponse::CopyFrom(const EditRoleUserByProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.projects.v1.EditRoleUserByProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditRoleUserByProjectResponse::IsInitialized() const {
  return true;
}

void EditRoleUserByProjectResponse::InternalSwap(EditRoleUserByProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EditRoleUserByProjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2fprojects_2fprojects_2eproto[22]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace projects
}  // namespace v1alpha1
}  // namespace accounts
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::CreateProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::CreateProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::CreateProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::GetOneProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::GetOneProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::GetOneProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::DeleteProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::DeleteProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::DeleteProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::UpdateProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::UpdateProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::UpdateProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::UpdadeProjectRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::MemberRol* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::MemberRol >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::MemberRol >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ProjectList* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ProjectList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ProjectList >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::CreateProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::CreateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::CreateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::UpdateProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::UpdateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::UpdateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::DeleteProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::DeleteProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::DeleteProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::GetOneProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::GetOneProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::GetOneProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectByOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectPaginationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::ListProjectPaginationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::UserList* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::UserList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::UserList >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::DeleteUserByProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::DeleteUserByProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::projects::v1::EditRoleUserByProjectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
