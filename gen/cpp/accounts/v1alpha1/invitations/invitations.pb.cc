// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accounts/v1alpha1/invitations/invitations.proto

#include "accounts/v1alpha1/invitations/invitations.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace accounts {
namespace v1alpha1 {
namespace invitations {
namespace v1 {
constexpr SendInvitationUserRequest::SendInvitationUserRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roles_ids_()
  , permissions_ids_()
  , _permissions_ids_cached_byte_size_(0)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_admin_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SendInvitationUserRequestDefaultTypeInternal {
  constexpr SendInvitationUserRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendInvitationUserRequestDefaultTypeInternal() {}
  union {
    SendInvitationUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendInvitationUserRequestDefaultTypeInternal _SendInvitationUserRequest_default_instance_;
constexpr SendInvitationUserResponse::SendInvitationUserResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_()
  , roles_()
  , permissions_()
  , invitation_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_(nullptr){}
struct SendInvitationUserResponseDefaultTypeInternal {
  constexpr SendInvitationUserResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendInvitationUserResponseDefaultTypeInternal() {}
  union {
    SendInvitationUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendInvitationUserResponseDefaultTypeInternal _SendInvitationUserResponse_default_instance_;
constexpr GetInvitationUserRequest::GetInvitationUserRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invitation_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetInvitationUserRequestDefaultTypeInternal {
  constexpr GetInvitationUserRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInvitationUserRequestDefaultTypeInternal() {}
  union {
    GetInvitationUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInvitationUserRequestDefaultTypeInternal _GetInvitationUserRequest_default_instance_;
constexpr OrganizationInvitation::OrganizationInvitation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct OrganizationInvitationDefaultTypeInternal {
  constexpr OrganizationInvitationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OrganizationInvitationDefaultTypeInternal() {}
  union {
    OrganizationInvitation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OrganizationInvitationDefaultTypeInternal _OrganizationInvitation_default_instance_;
constexpr GetInvitationUserResponse::GetInvitationUserResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roles_()
  , permissions_()
  , invitation_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_(nullptr)
  , success_(false){}
struct GetInvitationUserResponseDefaultTypeInternal {
  constexpr GetInvitationUserResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInvitationUserResponseDefaultTypeInternal() {}
  union {
    GetInvitationUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInvitationUserResponseDefaultTypeInternal _GetInvitationUserResponse_default_instance_;
constexpr AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AgreeInvitationUserRequest_ProjectsEntry_DoNotUseDefaultTypeInternal {
  constexpr AgreeInvitationUserRequest_ProjectsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgreeInvitationUserRequest_ProjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AgreeInvitationUserRequest_ProjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgreeInvitationUserRequest_ProjectsEntry_DoNotUseDefaultTypeInternal _AgreeInvitationUserRequest_ProjectsEntry_DoNotUse_default_instance_;
constexpr AgreeInvitationUserRequest::AgreeInvitationUserRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : projects_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , invitation_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guest_user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , invitation_response_(0)
{}
struct AgreeInvitationUserRequestDefaultTypeInternal {
  constexpr AgreeInvitationUserRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgreeInvitationUserRequestDefaultTypeInternal() {}
  union {
    AgreeInvitationUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgreeInvitationUserRequestDefaultTypeInternal _AgreeInvitationUserRequest_default_instance_;
constexpr AgreeInvitationUserResponse::AgreeInvitationUserResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AgreeInvitationUserResponseDefaultTypeInternal {
  constexpr AgreeInvitationUserResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgreeInvitationUserResponseDefaultTypeInternal() {}
  union {
    AgreeInvitationUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgreeInvitationUserResponseDefaultTypeInternal _AgreeInvitationUserResponse_default_instance_;
constexpr ListInvitationSendRequest::ListInvitationSendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListInvitationSendRequestDefaultTypeInternal {
  constexpr ListInvitationSendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListInvitationSendRequestDefaultTypeInternal() {}
  union {
    ListInvitationSendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListInvitationSendRequestDefaultTypeInternal _ListInvitationSendRequest_default_instance_;
constexpr ListInvitationSendResponse::ListInvitationSendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invitation_user_(){}
struct ListInvitationSendResponseDefaultTypeInternal {
  constexpr ListInvitationSendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListInvitationSendResponseDefaultTypeInternal() {}
  union {
    ListInvitationSendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListInvitationSendResponseDefaultTypeInternal _ListInvitationSendResponse_default_instance_;
constexpr DeleteInvitationRequest::DeleteInvitationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invitation_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteInvitationRequestDefaultTypeInternal {
  constexpr DeleteInvitationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteInvitationRequestDefaultTypeInternal() {}
  union {
    DeleteInvitationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteInvitationRequestDefaultTypeInternal _DeleteInvitationRequest_default_instance_;
constexpr DeleteInvitationResponse::DeleteInvitationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteInvitationResponseDefaultTypeInternal {
  constexpr DeleteInvitationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteInvitationResponseDefaultTypeInternal() {}
  union {
    DeleteInvitationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteInvitationResponseDefaultTypeInternal _DeleteInvitationResponse_default_instance_;
}  // namespace v1
}  // namespace invitations
}  // namespace v1alpha1
}  // namespace accounts
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[12];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, email_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, user_id_admin_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, roles_ids_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, permissions_ids_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, organization_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, projects_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, invitation_code_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, result_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, roles_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest, invitation_code_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, name_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, image_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, description_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::OrganizationInvitation, projects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, invitation_code_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, roles_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, permissions_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, organization_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, email_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse, success_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, invitation_code_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, email_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, guest_user_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, invitation_response_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, projects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, owner_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse, invitation_user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest, invitation_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse, error_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest)},
  { 11, -1, sizeof(::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse)},
  { 22, -1, sizeof(::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest)},
  { 29, -1, sizeof(::accounts::v1alpha1::invitations::v1::OrganizationInvitation)},
  { 39, -1, sizeof(::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse)},
  { 51, 58, sizeof(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse)},
  { 60, -1, sizeof(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest)},
  { 70, -1, sizeof(::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse)},
  { 76, -1, sizeof(::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest)},
  { 85, -1, sizeof(::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse)},
  { 91, -1, sizeof(::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest)},
  { 99, -1, sizeof(::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_SendInvitationUserRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_SendInvitationUserResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_GetInvitationUserRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_OrganizationInvitation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_GetInvitationUserResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_AgreeInvitationUserRequest_ProjectsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_AgreeInvitationUserRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_AgreeInvitationUserResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_ListInvitationSendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_ListInvitationSendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_DeleteInvitationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::accounts::v1alpha1::invitations::v1::_DeleteInvitationResponse_default_instance_),
};

const char descriptor_table_protodef_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/accounts/v1alpha1/invitations/invitati"
  "ons.proto\022 accounts.v1alpha1.invitations"
  ".v1\032 accounts/v1alpha1/accounts.proto\"\330\001"
  "\n\031SendInvitationUserRequest\022\022\n\004name\030\001 \001("
  "\tR\004name\022\024\n\005email\030\002 \001(\tR\005email\022\"\n\ruser_id"
  "_admin\030\004 \001(\tR\013userIdAdmin\022\033\n\troles_ids\030\005"
  " \003(\tR\010rolesIds\022\'\n\017permissions_ids\030\006 \003(\rR"
  "\016permissionsIds\022\'\n\017organization_id\030\007 \001(\t"
  "R\016organizationId\"\312\002\n\032SendInvitationUserR"
  "esponse\022C\n\014organization\030\001 \001(\0132\037.accounts"
  ".v1alpha1.OrganizationR\014organization\0226\n\010"
  "projects\030\002 \003(\0132\032.accounts.v1alpha1.Proje"
  "ctR\010projects\022\'\n\017invitation_code\030\003 \001(\tR\016i"
  "nvitationCode\022\026\n\006result\030\004 \001(\tR\006result\022-\n"
  "\005roles\030\005 \003(\0132\027.accounts.v1alpha1.RoleR\005r"
  "oles\022\?\n\013permissions\030\006 \003(\0132\035.accounts.v1a"
  "lpha1.PermissionR\013permissions\"Y\n\030GetInvi"
  "tationUserRequest\022\'\n\017invitation_code\030\001 \001"
  "(\tR\016invitationCode\022\024\n\005email\030\002 \001(\tR\005email"
  "\"\254\001\n\026OrganizationInvitation\022\016\n\002id\030\006 \001(\tR"
  "\002id\022\022\n\004name\030\002 \001(\tR\004name\022\024\n\005image\030\003 \001(\tR\005"
  "image\022 \n\013description\030\004 \001(\tR\013description\022"
  "6\n\010projects\030\005 \003(\0132\032.accounts.v1alpha1.Pr"
  "ojectR\010projects\"\322\002\n\031GetInvitationUserRes"
  "ponse\022\016\n\002id\030\n \001(\tR\002id\022\'\n\017invitation_code"
  "\030\002 \001(\tR\016invitationCode\022-\n\005roles\030\004 \003(\0132\027."
  "accounts.v1alpha1.RoleR\005roles\022\?\n\013permiss"
  "ions\030\005 \003(\0132\035.accounts.v1alpha1.Permissio"
  "nR\013permissions\022\\\n\014organization\030\006 \001(\01328.a"
  "ccounts.v1alpha1.invitations.v1.Organiza"
  "tionInvitationR\014organization\022\024\n\005email\030\007 "
  "\001(\tR\005email\022\030\n\007success\030\010 \001(\010R\007success\"\213\003\n"
  "\032AgreeInvitationUserRequest\022\'\n\017invitatio"
  "n_code\030\001 \001(\tR\016invitationCode\022\024\n\005email\030\002 "
  "\001(\tR\005email\022\"\n\rguest_user_id\030\003 \001(\tR\013guest"
  "UserId\022e\n\023invitation_response\030\004 \001(\01624.ac"
  "counts.v1alpha1.invitations.v1.Invitatio"
  "nResponseR\022invitationResponse\022f\n\010project"
  "s\030\005 \003(\0132J.accounts.v1alpha1.invitations."
  "v1.AgreeInvitationUserRequest.ProjectsEn"
  "tryR\010projects\032;\n\rProjectsEntry\022\020\n\003key\030\001 "
  "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"5\n\033Ag"
  "reeInvitationUserResponse\022\026\n\006result\030\001 \001("
  "\tR\006result\"\224\001\n\031ListInvitationSendRequest\022"
  "\031\n\010owner_id\030\001 \001(\tR\007ownerId\022\035\n\nproject_id"
  "\030\002 \001(\tR\tprojectId\022\'\n\017organization_id\030\003 \001"
  "(\tR\016organizationId\022\024\n\005email\030\004 \001(\tR\005email"
  "\"\202\001\n\032ListInvitationSendResponse\022d\n\017invit"
  "ation_user\030\001 \003(\0132;.accounts.v1alpha1.inv"
  "itations.v1.GetInvitationUserResponseR\016i"
  "nvitationUser\"\200\001\n\027DeleteInvitationReques"
  "t\022#\n\rinvitation_id\030\001 \001(\tR\014invitationId\022\'"
  "\n\017organization_id\030\002 \001(\tR\016organizationId\022"
  "\027\n\007user_id\030\003 \001(\tR\006userId\"B\n\030DeleteInvita"
  "tionResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\024\n\005error\030"
  "\002 \001(\tR\005error*d\n\022InvitationResponse\022,\n(IN"
  "VITATION_RESPONSE_ACCEPTED_UNSPECIFIED\020\000"
  "\022 \n\034INVITATION_RESPONSE_REJECTED\020\001B@Z>gi"
  "thub.com/cuemby/ccp-sdk/gen/go/accounts/"
  "v1alpha1/invitationsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_deps[1] = {
  &::descriptor_table_accounts_2fv1alpha1_2faccounts_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto = {
  false, false, 2388, descriptor_table_protodef_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto, "accounts/v1alpha1/invitations/invitations.proto", 
  &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once, descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_deps, 1, 12,
  schemas, file_default_instances, TableStruct_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto::offsets,
  file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto, file_level_enum_descriptors_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto, file_level_service_descriptors_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter() {
  return &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto(&descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto);
namespace accounts {
namespace v1alpha1 {
namespace invitations {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InvitationResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto);
  return file_level_enum_descriptors_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[0];
}
bool InvitationResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SendInvitationUserRequest::_Internal {
 public:
};

SendInvitationUserRequest::SendInvitationUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roles_ids_(arena),
  permissions_ids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
}
SendInvitationUserRequest::SendInvitationUserRequest(const SendInvitationUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_ids_(from.roles_ids_),
      permissions_ids_(from.permissions_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  user_id_admin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id_admin().empty()) {
    user_id_admin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id_admin(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
}

inline void SendInvitationUserRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_admin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SendInvitationUserRequest::~SendInvitationUserRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendInvitationUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_admin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SendInvitationUserRequest::ArenaDtor(void* object) {
  SendInvitationUserRequest* _this = reinterpret_cast< SendInvitationUserRequest* >(object);
  (void)_this;
}
void SendInvitationUserRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendInvitationUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendInvitationUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_ids_.Clear();
  permissions_ids_.Clear();
  name_.ClearToEmpty();
  email_.ClearToEmpty();
  user_id_admin_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendInvitationUserRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id_admin = 4 [json_name = "userIdAdmin"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_user_id_admin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.user_id_admin"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string roles_ids = 5 [json_name = "rolesIds"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_roles_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.roles_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 permissions_ids = 6 [json_name = "permissionsIds"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_permissions_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48) {
          _internal_add_permissions_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 7 [json_name = "organizationId"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendInvitationUserRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // string user_id_admin = 4 [json_name = "userIdAdmin"];
  if (!this->_internal_user_id_admin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id_admin().data(), static_cast<int>(this->_internal_user_id_admin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.user_id_admin");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_user_id_admin(), target);
  }

  // repeated string roles_ids = 5 [json_name = "rolesIds"];
  for (int i = 0, n = this->_internal_roles_ids_size(); i < n; i++) {
    const auto& s = this->_internal_roles_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.roles_ids");
    target = stream->WriteString(5, s, target);
  }

  // repeated uint32 permissions_ids = 6 [json_name = "permissionsIds"];
  {
    int byte_size = _permissions_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          6, _internal_permissions_ids(), byte_size, target);
    }
  }

  // string organization_id = 7 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  return target;
}

size_t SendInvitationUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string roles_ids = 5 [json_name = "rolesIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(roles_ids_.size());
  for (int i = 0, n = roles_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      roles_ids_.Get(i));
  }

  // repeated uint32 permissions_ids = 6 [json_name = "permissionsIds"];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->permissions_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _permissions_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string user_id_admin = 4 [json_name = "userIdAdmin"];
  if (!this->_internal_user_id_admin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id_admin());
  }

  // string organization_id = 7 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendInvitationUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendInvitationUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendInvitationUserRequest::GetClassData() const { return &_class_data_; }

void SendInvitationUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendInvitationUserRequest *>(to)->MergeFrom(
      static_cast<const SendInvitationUserRequest &>(from));
}


void SendInvitationUserRequest::MergeFrom(const SendInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_ids_.MergeFrom(from.roles_ids_);
  permissions_ids_.MergeFrom(from.permissions_ids_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (!from._internal_user_id_admin().empty()) {
    _internal_set_user_id_admin(from._internal_user_id_admin());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendInvitationUserRequest::CopyFrom(const SendInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.SendInvitationUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendInvitationUserRequest::IsInitialized() const {
  return true;
}

void SendInvitationUserRequest::InternalSwap(SendInvitationUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roles_ids_.InternalSwap(&other->roles_ids_);
  permissions_ids_.InternalSwap(&other->permissions_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_admin_, GetArenaForAllocation(),
      &other->user_id_admin_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SendInvitationUserRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[0]);
}

// ===================================================================

class SendInvitationUserResponse::_Internal {
 public:
  static const ::accounts::v1alpha1::Organization& organization(const SendInvitationUserResponse* msg);
};

const ::accounts::v1alpha1::Organization&
SendInvitationUserResponse::_Internal::organization(const SendInvitationUserResponse* msg) {
  return *msg->organization_;
}
void SendInvitationUserResponse::clear_organization() {
  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
}
void SendInvitationUserResponse::clear_projects() {
  projects_.Clear();
}
void SendInvitationUserResponse::clear_roles() {
  roles_.Clear();
}
void SendInvitationUserResponse::clear_permissions() {
  permissions_.Clear();
}
SendInvitationUserResponse::SendInvitationUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena),
  roles_(arena),
  permissions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
}
SendInvitationUserResponse::SendInvitationUserResponse(const SendInvitationUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      projects_(from.projects_),
      roles_(from.roles_),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invitation_code().empty()) {
    invitation_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitation_code(), 
      GetArenaForAllocation());
  }
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_organization()) {
    organization_ = new ::accounts::v1alpha1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
}

inline void SendInvitationUserResponse::SharedCtor() {
invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_ = nullptr;
}

SendInvitationUserResponse::~SendInvitationUserResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendInvitationUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitation_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete organization_;
}

void SendInvitationUserResponse::ArenaDtor(void* object) {
  SendInvitationUserResponse* _this = reinterpret_cast< SendInvitationUserResponse* >(object);
  (void)_this;
}
void SendInvitationUserResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendInvitationUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendInvitationUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  roles_.Clear();
  permissions_.Clear();
  invitation_code_.ClearToEmpty();
  result_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendInvitationUserResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .accounts.v1alpha1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Project projects = 2 [json_name = "projects"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string invitation_code = 3 [json_name = "invitationCode"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_invitation_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.invitation_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string result = 4 [json_name = "result"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Role roles = 5 [json_name = "roles"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Permission permissions = 6 [json_name = "permissions"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendInvitationUserResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .accounts.v1alpha1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::organization(this), target, stream);
  }

  // repeated .accounts.v1alpha1.Project projects = 2 [json_name = "projects"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_projects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_projects(i), target, stream);
  }

  // string invitation_code = 3 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitation_code().data(), static_cast<int>(this->_internal_invitation_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.invitation_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_invitation_code(), target);
  }

  // string result = 4 [json_name = "result"];
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.SendInvitationUserResponse.result");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_result(), target);
  }

  // repeated .accounts.v1alpha1.Role roles = 5 [json_name = "roles"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_roles(i), target, stream);
  }

  // repeated .accounts.v1alpha1.Permission permissions = 6 [json_name = "permissions"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_permissions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  return target;
}

size_t SendInvitationUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 2 [json_name = "projects"];
  total_size += 1UL * this->_internal_projects_size();
  for (const auto& msg : this->projects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .accounts.v1alpha1.Role roles = 5 [json_name = "roles"];
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .accounts.v1alpha1.Permission permissions = 6 [json_name = "permissions"];
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string invitation_code = 3 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitation_code());
  }

  // string result = 4 [json_name = "result"];
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // .accounts.v1alpha1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendInvitationUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendInvitationUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendInvitationUserResponse::GetClassData() const { return &_class_data_; }

void SendInvitationUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendInvitationUserResponse *>(to)->MergeFrom(
      static_cast<const SendInvitationUserResponse &>(from));
}


void SendInvitationUserResponse::MergeFrom(const SendInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  roles_.MergeFrom(from.roles_);
  permissions_.MergeFrom(from.permissions_);
  if (!from._internal_invitation_code().empty()) {
    _internal_set_invitation_code(from._internal_invitation_code());
  }
  if (!from._internal_result().empty()) {
    _internal_set_result(from._internal_result());
  }
  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::accounts::v1alpha1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendInvitationUserResponse::CopyFrom(const SendInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.SendInvitationUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendInvitationUserResponse::IsInitialized() const {
  return true;
}

void SendInvitationUserResponse::InternalSwap(SendInvitationUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
  roles_.InternalSwap(&other->roles_);
  permissions_.InternalSwap(&other->permissions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitation_code_, GetArenaForAllocation(),
      &other->invitation_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &result_, GetArenaForAllocation(),
      &other->result_, other->GetArenaForAllocation()
  );
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendInvitationUserResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[1]);
}

// ===================================================================

class GetInvitationUserRequest::_Internal {
 public:
};

GetInvitationUserRequest::GetInvitationUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
}
GetInvitationUserRequest::GetInvitationUserRequest(const GetInvitationUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invitation_code().empty()) {
    invitation_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitation_code(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
}

inline void GetInvitationUserRequest::SharedCtor() {
invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetInvitationUserRequest::~GetInvitationUserRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInvitationUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitation_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetInvitationUserRequest::ArenaDtor(void* object) {
  GetInvitationUserRequest* _this = reinterpret_cast< GetInvitationUserRequest* >(object);
  (void)_this;
}
void GetInvitationUserRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInvitationUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInvitationUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitation_code_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInvitationUserRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invitation_code = 1 [json_name = "invitationCode"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invitation_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.invitation_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInvitationUserRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invitation_code = 1 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitation_code().data(), static_cast<int>(this->_internal_invitation_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.invitation_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invitation_code(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.GetInvitationUserRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  return target;
}

size_t GetInvitationUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invitation_code = 1 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitation_code());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInvitationUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInvitationUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInvitationUserRequest::GetClassData() const { return &_class_data_; }

void GetInvitationUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetInvitationUserRequest *>(to)->MergeFrom(
      static_cast<const GetInvitationUserRequest &>(from));
}


void GetInvitationUserRequest::MergeFrom(const GetInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invitation_code().empty()) {
    _internal_set_invitation_code(from._internal_invitation_code());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInvitationUserRequest::CopyFrom(const GetInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.GetInvitationUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvitationUserRequest::IsInitialized() const {
  return true;
}

void GetInvitationUserRequest::InternalSwap(GetInvitationUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitation_code_, GetArenaForAllocation(),
      &other->invitation_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInvitationUserRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[2]);
}

// ===================================================================

class OrganizationInvitation::_Internal {
 public:
};

void OrganizationInvitation::clear_projects() {
  projects_.Clear();
}
OrganizationInvitation::OrganizationInvitation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
}
OrganizationInvitation::OrganizationInvitation(const OrganizationInvitation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      projects_(from.projects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
}

inline void OrganizationInvitation::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OrganizationInvitation::~OrganizationInvitation() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OrganizationInvitation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OrganizationInvitation::ArenaDtor(void* object) {
  OrganizationInvitation* _this = reinterpret_cast< OrganizationInvitation* >(object);
  (void)_this;
}
void OrganizationInvitation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OrganizationInvitation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationInvitation::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  name_.ClearToEmpty();
  image_.ClearToEmpty();
  description_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationInvitation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.OrganizationInvitation.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 3 [json_name = "image"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.OrganizationInvitation.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4 [json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.OrganizationInvitation.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Project projects = 5 [json_name = "projects"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string id = 6 [json_name = "id"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.OrganizationInvitation.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OrganizationInvitation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.OrganizationInvitation.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.OrganizationInvitation.image");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_image(), target);
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.OrganizationInvitation.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated .accounts.v1alpha1.Project projects = 5 [json_name = "projects"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_projects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_projects(i), target, stream);
  }

  // string id = 6 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.OrganizationInvitation.id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  return target;
}

size_t OrganizationInvitation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Project projects = 5 [json_name = "projects"];
  total_size += 1UL * this->_internal_projects_size();
  for (const auto& msg : this->projects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string image = 3 [json_name = "image"];
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string id = 6 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationInvitation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationInvitation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationInvitation::GetClassData() const { return &_class_data_; }

void OrganizationInvitation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<OrganizationInvitation *>(to)->MergeFrom(
      static_cast<const OrganizationInvitation &>(from));
}


void OrganizationInvitation::MergeFrom(const OrganizationInvitation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_image().empty()) {
    _internal_set_image(from._internal_image());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationInvitation::CopyFrom(const OrganizationInvitation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.OrganizationInvitation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationInvitation::IsInitialized() const {
  return true;
}

void OrganizationInvitation::InternalSwap(OrganizationInvitation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &image_, GetArenaForAllocation(),
      &other->image_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, GetArenaForAllocation(),
      &other->description_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationInvitation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[3]);
}

// ===================================================================

class GetInvitationUserResponse::_Internal {
 public:
  static const ::accounts::v1alpha1::invitations::v1::OrganizationInvitation& organization(const GetInvitationUserResponse* msg);
};

const ::accounts::v1alpha1::invitations::v1::OrganizationInvitation&
GetInvitationUserResponse::_Internal::organization(const GetInvitationUserResponse* msg) {
  return *msg->organization_;
}
void GetInvitationUserResponse::clear_roles() {
  roles_.Clear();
}
void GetInvitationUserResponse::clear_permissions() {
  permissions_.Clear();
}
GetInvitationUserResponse::GetInvitationUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roles_(arena),
  permissions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
}
GetInvitationUserResponse::GetInvitationUserResponse(const GetInvitationUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_(from.roles_),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invitation_code().empty()) {
    invitation_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitation_code(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_organization()) {
    organization_ = new ::accounts::v1alpha1::invitations::v1::OrganizationInvitation(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
}

inline void GetInvitationUserResponse::SharedCtor() {
invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&organization_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&organization_)) + sizeof(success_));
}

GetInvitationUserResponse::~GetInvitationUserResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInvitationUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitation_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete organization_;
}

void GetInvitationUserResponse::ArenaDtor(void* object) {
  GetInvitationUserResponse* _this = reinterpret_cast< GetInvitationUserResponse* >(object);
  (void)_this;
}
void GetInvitationUserResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInvitationUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInvitationUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  permissions_.Clear();
  invitation_code_.ClearToEmpty();
  email_.ClearToEmpty();
  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInvitationUserResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invitation_code = 2 [json_name = "invitationCode"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_invitation_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.invitation_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Role roles = 4 [json_name = "roles"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .accounts.v1alpha1.Permission permissions = 5 [json_name = "permissions"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .accounts.v1alpha1.invitations.v1.OrganizationInvitation organization = 6 [json_name = "organization"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 7 [json_name = "email"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool success = 8 [json_name = "success"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 10 [json_name = "id"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInvitationUserResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invitation_code = 2 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitation_code().data(), static_cast<int>(this->_internal_invitation_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.invitation_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_invitation_code(), target);
  }

  // repeated .accounts.v1alpha1.Role roles = 4 [json_name = "roles"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_roles(i), target, stream);
  }

  // repeated .accounts.v1alpha1.Permission permissions = 5 [json_name = "permissions"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_permissions(i), target, stream);
  }

  // .accounts.v1alpha1.invitations.v1.OrganizationInvitation organization = 6 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::organization(this), target, stream);
  }

  // string email = 7 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.email");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_email(), target);
  }

  // bool success = 8 [json_name = "success"];
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_success(), target);
  }

  // string id = 10 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.GetInvitationUserResponse.id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  return target;
}

size_t GetInvitationUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.Role roles = 4 [json_name = "roles"];
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .accounts.v1alpha1.Permission permissions = 5 [json_name = "permissions"];
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string invitation_code = 2 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitation_code());
  }

  // string email = 7 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string id = 10 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .accounts.v1alpha1.invitations.v1.OrganizationInvitation organization = 6 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  // bool success = 8 [json_name = "success"];
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInvitationUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInvitationUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInvitationUserResponse::GetClassData() const { return &_class_data_; }

void GetInvitationUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetInvitationUserResponse *>(to)->MergeFrom(
      static_cast<const GetInvitationUserResponse &>(from));
}


void GetInvitationUserResponse::MergeFrom(const GetInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  permissions_.MergeFrom(from.permissions_);
  if (!from._internal_invitation_code().empty()) {
    _internal_set_invitation_code(from._internal_invitation_code());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::accounts::v1alpha1::invitations::v1::OrganizationInvitation::MergeFrom(from._internal_organization());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInvitationUserResponse::CopyFrom(const GetInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.GetInvitationUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvitationUserResponse::IsInitialized() const {
  return true;
}

void GetInvitationUserResponse::InternalSwap(GetInvitationUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
  permissions_.InternalSwap(&other->permissions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitation_code_, GetArenaForAllocation(),
      &other->invitation_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetInvitationUserResponse, success_)
      + sizeof(GetInvitationUserResponse::success_)
      - PROTOBUF_FIELD_OFFSET(GetInvitationUserResponse, organization_)>(
          reinterpret_cast<char*>(&organization_),
          reinterpret_cast<char*>(&other->organization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInvitationUserResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[4]);
}

// ===================================================================

AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse() {}
AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::MergeFrom(const AgreeInvitationUserRequest_ProjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[5]);
}

// ===================================================================

class AgreeInvitationUserRequest::_Internal {
 public:
};

AgreeInvitationUserRequest::AgreeInvitationUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  projects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
}
AgreeInvitationUserRequest::AgreeInvitationUserRequest(const AgreeInvitationUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  projects_.MergeFrom(from.projects_);
  invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invitation_code().empty()) {
    invitation_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitation_code(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  guest_user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_guest_user_id().empty()) {
    guest_user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guest_user_id(), 
      GetArenaForAllocation());
  }
  invitation_response_ = from.invitation_response_;
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
}

inline void AgreeInvitationUserRequest::SharedCtor() {
invitation_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guest_user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
invitation_response_ = 0;
}

AgreeInvitationUserRequest::~AgreeInvitationUserRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgreeInvitationUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitation_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guest_user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgreeInvitationUserRequest::ArenaDtor(void* object) {
  AgreeInvitationUserRequest* _this = reinterpret_cast< AgreeInvitationUserRequest* >(object);
  (void)_this;
  _this->projects_. ~MapField();
}
inline void AgreeInvitationUserRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AgreeInvitationUserRequest::ArenaDtor);
  }
}
void AgreeInvitationUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgreeInvitationUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  projects_.Clear();
  invitation_code_.ClearToEmpty();
  email_.ClearToEmpty();
  guest_user_id_.ClearToEmpty();
  invitation_response_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgreeInvitationUserRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invitation_code = 1 [json_name = "invitationCode"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invitation_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.invitation_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string guest_user_id = 3 [json_name = "guestUserId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_guest_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.guest_user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .accounts.v1alpha1.invitations.v1.InvitationResponse invitation_response = 4 [json_name = "invitationResponse"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_invitation_response(static_cast<::accounts::v1alpha1::invitations::v1::InvitationResponse>(val));
        } else goto handle_unusual;
        continue;
      // map<string, string> projects = 5 [json_name = "projects"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&projects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgreeInvitationUserRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invitation_code = 1 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitation_code().data(), static_cast<int>(this->_internal_invitation_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.invitation_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invitation_code(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // string guest_user_id = 3 [json_name = "guestUserId"];
  if (!this->_internal_guest_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_guest_user_id().data(), static_cast<int>(this->_internal_guest_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.guest_user_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_guest_user_id(), target);
  }

  // .accounts.v1alpha1.invitations.v1.InvitationResponse invitation_response = 4 [json_name = "invitationResponse"];
  if (this->_internal_invitation_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_invitation_response(), target);
  }

  // map<string, string> projects = 5 [json_name = "projects"];
  if (!this->_internal_projects().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.ProjectsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest.ProjectsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_projects().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_projects().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_projects().begin();
          it != this->_internal_projects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_projects().begin();
          it != this->_internal_projects().end(); ++it) {
        target = AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  return target;
}

size_t AgreeInvitationUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> projects = 5 [json_name = "projects"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_projects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_projects().begin();
      it != this->_internal_projects().end(); ++it) {
    total_size += AgreeInvitationUserRequest_ProjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string invitation_code = 1 [json_name = "invitationCode"];
  if (!this->_internal_invitation_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitation_code());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string guest_user_id = 3 [json_name = "guestUserId"];
  if (!this->_internal_guest_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guest_user_id());
  }

  // .accounts.v1alpha1.invitations.v1.InvitationResponse invitation_response = 4 [json_name = "invitationResponse"];
  if (this->_internal_invitation_response() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_invitation_response());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgreeInvitationUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgreeInvitationUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgreeInvitationUserRequest::GetClassData() const { return &_class_data_; }

void AgreeInvitationUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgreeInvitationUserRequest *>(to)->MergeFrom(
      static_cast<const AgreeInvitationUserRequest &>(from));
}


void AgreeInvitationUserRequest::MergeFrom(const AgreeInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projects_.MergeFrom(from.projects_);
  if (!from._internal_invitation_code().empty()) {
    _internal_set_invitation_code(from._internal_invitation_code());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (!from._internal_guest_user_id().empty()) {
    _internal_set_guest_user_id(from._internal_guest_user_id());
  }
  if (from._internal_invitation_response() != 0) {
    _internal_set_invitation_response(from._internal_invitation_response());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgreeInvitationUserRequest::CopyFrom(const AgreeInvitationUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeInvitationUserRequest::IsInitialized() const {
  return true;
}

void AgreeInvitationUserRequest::InternalSwap(AgreeInvitationUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  projects_.InternalSwap(&other->projects_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitation_code_, GetArenaForAllocation(),
      &other->invitation_code_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &guest_user_id_, GetArenaForAllocation(),
      &other->guest_user_id_, other->GetArenaForAllocation()
  );
  swap(invitation_response_, other->invitation_response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgreeInvitationUserRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[6]);
}

// ===================================================================

class AgreeInvitationUserResponse::_Internal {
 public:
};

AgreeInvitationUserResponse::AgreeInvitationUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
}
AgreeInvitationUserResponse::AgreeInvitationUserResponse(const AgreeInvitationUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
}

inline void AgreeInvitationUserResponse::SharedCtor() {
result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AgreeInvitationUserResponse::~AgreeInvitationUserResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgreeInvitationUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgreeInvitationUserResponse::ArenaDtor(void* object) {
  AgreeInvitationUserResponse* _this = reinterpret_cast< AgreeInvitationUserResponse* >(object);
  (void)_this;
}
void AgreeInvitationUserResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgreeInvitationUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgreeInvitationUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgreeInvitationUserResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1 [json_name = "result"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgreeInvitationUserResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1 [json_name = "result"];
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  return target;
}

size_t AgreeInvitationUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1 [json_name = "result"];
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgreeInvitationUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgreeInvitationUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgreeInvitationUserResponse::GetClassData() const { return &_class_data_; }

void AgreeInvitationUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgreeInvitationUserResponse *>(to)->MergeFrom(
      static_cast<const AgreeInvitationUserResponse &>(from));
}


void AgreeInvitationUserResponse::MergeFrom(const AgreeInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgreeInvitationUserResponse::CopyFrom(const AgreeInvitationUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.AgreeInvitationUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeInvitationUserResponse::IsInitialized() const {
  return true;
}

void AgreeInvitationUserResponse::InternalSwap(AgreeInvitationUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &result_, GetArenaForAllocation(),
      &other->result_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AgreeInvitationUserResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[7]);
}

// ===================================================================

class ListInvitationSendRequest::_Internal {
 public:
};

ListInvitationSendRequest::ListInvitationSendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
}
ListInvitationSendRequest::ListInvitationSendRequest(const ListInvitationSendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_owner_id().empty()) {
    owner_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_owner_id(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
}

inline void ListInvitationSendRequest::SharedCtor() {
owner_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListInvitationSendRequest::~ListInvitationSendRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListInvitationSendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListInvitationSendRequest::ArenaDtor(void* object) {
  ListInvitationSendRequest* _this = reinterpret_cast< ListInvitationSendRequest* >(object);
  (void)_this;
}
void ListInvitationSendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListInvitationSendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListInvitationSendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_id_.ClearToEmpty();
  project_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListInvitationSendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string owner_id = 1 [json_name = "ownerId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_owner_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.owner_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 2 [json_name = "projectId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 3 [json_name = "organizationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 4 [json_name = "email"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListInvitationSendRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string owner_id = 1 [json_name = "ownerId"];
  if (!this->_internal_owner_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner_id().data(), static_cast<int>(this->_internal_owner_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.owner_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_owner_id(), target);
  }

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_project_id(), target);
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_organization_id(), target);
  }

  // string email = 4 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.ListInvitationSendRequest.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  return target;
}

size_t ListInvitationSendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner_id = 1 [json_name = "ownerId"];
  if (!this->_internal_owner_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner_id());
  }

  // string project_id = 2 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 4 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListInvitationSendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListInvitationSendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListInvitationSendRequest::GetClassData() const { return &_class_data_; }

void ListInvitationSendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListInvitationSendRequest *>(to)->MergeFrom(
      static_cast<const ListInvitationSendRequest &>(from));
}


void ListInvitationSendRequest::MergeFrom(const ListInvitationSendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_id().empty()) {
    _internal_set_owner_id(from._internal_owner_id());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListInvitationSendRequest::CopyFrom(const ListInvitationSendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.ListInvitationSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInvitationSendRequest::IsInitialized() const {
  return true;
}

void ListInvitationSendRequest::InternalSwap(ListInvitationSendRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &owner_id_, GetArenaForAllocation(),
      &other->owner_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &email_, GetArenaForAllocation(),
      &other->email_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListInvitationSendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[8]);
}

// ===================================================================

class ListInvitationSendResponse::_Internal {
 public:
};

ListInvitationSendResponse::ListInvitationSendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  invitation_user_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
}
ListInvitationSendResponse::ListInvitationSendResponse(const ListInvitationSendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      invitation_user_(from.invitation_user_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
}

inline void ListInvitationSendResponse::SharedCtor() {
}

ListInvitationSendResponse::~ListInvitationSendResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListInvitationSendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListInvitationSendResponse::ArenaDtor(void* object) {
  ListInvitationSendResponse* _this = reinterpret_cast< ListInvitationSendResponse* >(object);
  (void)_this;
}
void ListInvitationSendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListInvitationSendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListInvitationSendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitation_user_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListInvitationSendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .accounts.v1alpha1.invitations.v1.GetInvitationUserResponse invitation_user = 1 [json_name = "invitationUser"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invitation_user(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListInvitationSendResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.invitations.v1.GetInvitationUserResponse invitation_user = 1 [json_name = "invitationUser"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_invitation_user_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_invitation_user(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  return target;
}

size_t ListInvitationSendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .accounts.v1alpha1.invitations.v1.GetInvitationUserResponse invitation_user = 1 [json_name = "invitationUser"];
  total_size += 1UL * this->_internal_invitation_user_size();
  for (const auto& msg : this->invitation_user_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListInvitationSendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListInvitationSendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListInvitationSendResponse::GetClassData() const { return &_class_data_; }

void ListInvitationSendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListInvitationSendResponse *>(to)->MergeFrom(
      static_cast<const ListInvitationSendResponse &>(from));
}


void ListInvitationSendResponse::MergeFrom(const ListInvitationSendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitation_user_.MergeFrom(from.invitation_user_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListInvitationSendResponse::CopyFrom(const ListInvitationSendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.ListInvitationSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInvitationSendResponse::IsInitialized() const {
  return true;
}

void ListInvitationSendResponse::InternalSwap(ListInvitationSendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  invitation_user_.InternalSwap(&other->invitation_user_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListInvitationSendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[9]);
}

// ===================================================================

class DeleteInvitationRequest::_Internal {
 public:
};

DeleteInvitationRequest::DeleteInvitationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
}
DeleteInvitationRequest::DeleteInvitationRequest(const DeleteInvitationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invitation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_invitation_id().empty()) {
    invitation_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitation_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
}

inline void DeleteInvitationRequest::SharedCtor() {
invitation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteInvitationRequest::~DeleteInvitationRequest() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteInvitationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitation_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteInvitationRequest::ArenaDtor(void* object) {
  DeleteInvitationRequest* _this = reinterpret_cast< DeleteInvitationRequest* >(object);
  (void)_this;
}
void DeleteInvitationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteInvitationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteInvitationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitation_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteInvitationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invitation_id = 1 [json_name = "invitationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_invitation_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.invitation_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 3 [json_name = "userId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteInvitationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string invitation_id = 1 [json_name = "invitationId"];
  if (!this->_internal_invitation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitation_id().data(), static_cast<int>(this->_internal_invitation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.invitation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invitation_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.DeleteInvitationRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  return target;
}

size_t DeleteInvitationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invitation_id = 1 [json_name = "invitationId"];
  if (!this->_internal_invitation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitation_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteInvitationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteInvitationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteInvitationRequest::GetClassData() const { return &_class_data_; }

void DeleteInvitationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteInvitationRequest *>(to)->MergeFrom(
      static_cast<const DeleteInvitationRequest &>(from));
}


void DeleteInvitationRequest::MergeFrom(const DeleteInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invitation_id().empty()) {
    _internal_set_invitation_id(from._internal_invitation_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteInvitationRequest::CopyFrom(const DeleteInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.DeleteInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInvitationRequest::IsInitialized() const {
  return true;
}

void DeleteInvitationRequest::InternalSwap(DeleteInvitationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitation_id_, GetArenaForAllocation(),
      &other->invitation_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteInvitationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[10]);
}

// ===================================================================

class DeleteInvitationResponse::_Internal {
 public:
};

DeleteInvitationResponse::DeleteInvitationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
}
DeleteInvitationResponse::DeleteInvitationResponse(const DeleteInvitationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
}

inline void DeleteInvitationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteInvitationResponse::~DeleteInvitationResponse() {
  // @@protoc_insertion_point(destructor:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteInvitationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteInvitationResponse::ArenaDtor(void* object) {
  DeleteInvitationResponse* _this = reinterpret_cast< DeleteInvitationResponse* >(object);
  (void)_this;
}
void DeleteInvitationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteInvitationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteInvitationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteInvitationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteInvitationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "accounts.v1alpha1.invitations.v1.DeleteInvitationResponse.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  return target;
}

size_t DeleteInvitationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteInvitationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteInvitationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteInvitationResponse::GetClassData() const { return &_class_data_; }

void DeleteInvitationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteInvitationResponse *>(to)->MergeFrom(
      static_cast<const DeleteInvitationResponse &>(from));
}


void DeleteInvitationResponse::MergeFrom(const DeleteInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteInvitationResponse::CopyFrom(const DeleteInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounts.v1alpha1.invitations.v1.DeleteInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInvitationResponse::IsInitialized() const {
  return true;
}

void DeleteInvitationResponse::InternalSwap(DeleteInvitationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, GetArenaForAllocation(),
      &other->error_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteInvitationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_getter, &descriptor_table_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto_once,
      file_level_metadata_accounts_2fv1alpha1_2finvitations_2finvitations_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace invitations
}  // namespace v1alpha1
}  // namespace accounts
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::OrganizationInvitation* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::OrganizationInvitation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::OrganizationInvitation >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest_ProjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* Arena::CreateMaybeMessage< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
