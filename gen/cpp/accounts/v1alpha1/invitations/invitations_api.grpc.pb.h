// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: accounts/v1alpha1/invitations/invitations_api.proto
#ifndef GRPC_accounts_2fv1alpha1_2finvitations_2finvitations_5fapi_2eproto__INCLUDED
#define GRPC_accounts_2fv1alpha1_2finvitations_2finvitations_5fapi_2eproto__INCLUDED

#include "accounts/v1alpha1/invitations/invitations_api.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace accounts {
namespace v1alpha1 {
namespace invitations {
namespace v1 {

class InvitationService final {
 public:
  static constexpr char const* service_full_name() {
    return "accounts.v1alpha1.invitations.v1.InvitationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // invitation
    virtual ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>> AsyncListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>>(AsyncListInvitationSendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>> PrepareAsyncListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>>(PrepareAsyncListInvitationSendRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // invitation
      virtual void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* AsyncListInvitationSendRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* PrepareAsyncListInvitationSendRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status ListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>> AsyncListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>>(AsyncListInvitationSendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>> PrepareAsyncListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>>(PrepareAsyncListInvitationSendRaw(context, request, cq));
    }
    ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListInvitationSend(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteInvitation(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* AsyncListInvitationSendRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* PrepareAsyncListInvitationSendRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AgreeInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInvitationSend_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInvitation_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // invitation
    virtual ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response);
    virtual ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response);
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response);
    virtual ::grpc::Status ListInvitationSend(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response);
    virtual ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInvitationSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInvitationSend() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListInvitationSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationSend(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationSend(::grpc::ServerContext* context, ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendInvitationUser<WithAsyncMethod_GetInvitationUser<WithAsyncMethod_AgreeInvitationUser<WithAsyncMethod_ListInvitationSend<WithAsyncMethod_DeleteInvitation<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInvitationSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInvitationSend() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListInvitationSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationSend(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInvitationSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListInvitationSend() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListInvitationSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationSend(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationSend(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_SendInvitationUser<BaseClass>::StreamedSendInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::invitations::v1::SendInvitationUserRequest,::accounts::v1alpha1::invitations::v1::SendInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_GetInvitationUser<BaseClass>::StreamedGetInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::invitations::v1::GetInvitationUserRequest,::accounts::v1alpha1::invitations::v1::GetInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_AgreeInvitationUser<BaseClass>::StreamedAgreeInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::invitations::v1::AgreeInvitationUserRequest,::accounts::v1alpha1::invitations::v1::AgreeInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInvitationSend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInvitationSend() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>(std::bind(&WithStreamedUnaryMethod_ListInvitationSend<BaseClass>::StreamedListInvitationSend, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInvitationSend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInvitationSend(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest* request, ::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInvitationSend(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::invitations::v1::ListInvitationSendRequest,::accounts::v1alpha1::invitations::v1::ListInvitationSendResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteInvitation<BaseClass>::StreamedDeleteInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest* request, ::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::invitations::v1::DeleteInvitationRequest,::accounts::v1alpha1::invitations::v1::DeleteInvitationResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationSend<WithStreamedUnaryMethod_DeleteInvitation<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationSend<WithStreamedUnaryMethod_DeleteInvitation<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace invitations
}  // namespace v1alpha1
}  // namespace accounts


#endif  // GRPC_accounts_2fv1alpha1_2finvitations_2finvitations_5fapi_2eproto__INCLUDED
