// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: accounts/v1alpha1/accounts.proto
#ifndef GRPC_accounts_2fv1alpha1_2faccounts_2eproto__INCLUDED
#define GRPC_accounts_2fv1alpha1_2faccounts_2eproto__INCLUDED

#include "accounts/v1alpha1/accounts.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace accounts {
namespace v1alpha1 {

class AccountService final {
 public:
  static constexpr char const* service_full_name() {
    return "accounts.v1alpha1.AccountService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // /AUTH
    virtual ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::accounts::v1alpha1::CreateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::accounts::v1alpha1::ListUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>> AsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>>(AsyncListUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>> PrepareAsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>>(PrepareAsyncListUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::accounts::v1alpha1::GetOneUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>> AsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>>(AsyncGetOneUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>> PrepareAsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>>(PrepareAsyncGetOneUserRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::accounts::v1alpha1::UpdateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::accounts::v1alpha1::DeleteUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::accounts::v1alpha1::ListUserPaginationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>> AsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>>(AsyncListUserPaginationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>> PrepareAsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>>(PrepareAsyncListUserPaginationRaw(context, request, cq));
    }
    virtual ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::accounts::v1alpha1::SendInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::accounts::v1alpha1::GetInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::accounts::v1alpha1::ListInvitationUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>> AsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>>(AsyncListInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>> PrepareAsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>>(PrepareAsyncListInvitationUserRaw(context, request, cq));
    }
    virtual ::grpc::Status EnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>> AsyncEnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>>(AsyncEnableOrDisableMFARaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>> PrepareAsyncEnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>>(PrepareAsyncEnableOrDisableMFARaw(context, request, cq));
    }
    // /PERMISSION
    virtual ::grpc::Status CreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::accounts::v1alpha1::CreatePermissionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>> AsyncCreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>>(AsyncCreatePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>> PrepareAsyncCreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>>(PrepareAsyncCreatePermissionRaw(context, request, cq));
    }
    virtual ::grpc::Status ListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::accounts::v1alpha1::ListPermissionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>> AsyncListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>>(AsyncListPermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>> PrepareAsyncListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>>(PrepareAsyncListPermissionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::accounts::v1alpha1::GetOnePermissionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>> AsyncGetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>>(AsyncGetOnePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>> PrepareAsyncGetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>>(PrepareAsyncGetOnePermissionRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::accounts::v1alpha1::UpdatePermissionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>> AsyncUpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>>(AsyncUpdatePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>> PrepareAsyncUpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>>(PrepareAsyncUpdatePermissionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::accounts::v1alpha1::DeletePermissionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>> AsyncDeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>>(AsyncDeletePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>> PrepareAsyncDeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>>(PrepareAsyncDeletePermissionRaw(context, request, cq));
    }
    // /Organization
    virtual ::grpc::Status CreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::accounts::v1alpha1::CreateOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>> AsyncCreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>>(AsyncCreateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>> PrepareAsyncCreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>>(PrepareAsyncCreateOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status ListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::accounts::v1alpha1::ListOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>> AsyncListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>>(AsyncListOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>> PrepareAsyncListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>>(PrepareAsyncListOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>> AsyncGetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>>(AsyncGetOneOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>> PrepareAsyncGetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>>(PrepareAsyncGetOneOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>> AsyncUpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>>(AsyncUpdateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>> PrepareAsyncUpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>>(PrepareAsyncUpdateOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>> AsyncDeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>>(AsyncDeleteOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>> PrepareAsyncDeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>>(PrepareAsyncDeleteOrganizationRaw(context, request, cq));
    }
    // Roles 
    virtual ::grpc::Status CreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::accounts::v1alpha1::CreateRoleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>> AsyncCreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>>(AsyncCreateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>> PrepareAsyncCreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>>(PrepareAsyncCreateRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status ListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::accounts::v1alpha1::ListRolesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>> AsyncListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>>(AsyncListRolesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>> PrepareAsyncListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>>(PrepareAsyncListRolesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::accounts::v1alpha1::UpdateRoleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>> AsyncUpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>>(AsyncUpdateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>> PrepareAsyncUpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>>(PrepareAsyncUpdateRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::accounts::v1alpha1::GetOneRoleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>> AsyncGetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>>(AsyncGetOneRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>> PrepareAsyncGetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>>(PrepareAsyncGetOneRoleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::accounts::v1alpha1::GetRolesByUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>> AsyncGetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>>(AsyncGetRolesByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>> PrepareAsyncGetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>>(PrepareAsyncGetRolesByUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>> AsyncGetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>>(AsyncGetRolesByOrgUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>> PrepareAsyncGetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>>(PrepareAsyncGetRolesByOrgUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::accounts::v1alpha1::DeleteRoleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>> AsyncDeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>>(AsyncDeleteRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>> PrepareAsyncDeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>>(PrepareAsyncDeleteRoleRaw(context, request, cq));
    }
    // CRUD Project
    virtual ::grpc::Status CreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::accounts::v1alpha1::CreateProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>> AsyncCreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>>(AsyncCreateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>> PrepareAsyncCreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>>(PrepareAsyncCreateProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::accounts::v1alpha1::GetOneProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>> AsyncGetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>>(AsyncGetOneProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>> PrepareAsyncGetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>>(PrepareAsyncGetOneProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::accounts::v1alpha1::UpdateProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>> AsyncUpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>>(AsyncUpdateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>> PrepareAsyncUpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>>(PrepareAsyncUpdateProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::accounts::v1alpha1::DeleteProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>> AsyncDeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>>(AsyncDeleteProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>> PrepareAsyncDeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>>(PrepareAsyncDeleteProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status ListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::accounts::v1alpha1::ListProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>> AsyncListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>>(AsyncListProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>> PrepareAsyncListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>>(PrepareAsyncListProjectRaw(context, request, cq));
    }
    // Get Users Dex
    virtual ::grpc::Status GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::accounts::v1alpha1::GetListUserDexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>> AsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>>(AsyncGetListUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>> PrepareAsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>>(PrepareAsyncGetListUserDexRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::accounts::v1alpha1::GetOneUserDexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>> AsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>>(AsyncGetOneUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>> PrepareAsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>>(PrepareAsyncGetOneUserDexRaw(context, request, cq));
    }
    virtual ::grpc::Status CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::accounts::v1alpha1::CheckUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>> AsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>>(AsyncCheckUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>> PrepareAsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>>(PrepareAsyncCheckUserRaw(context, request, cq));
    }
    // Send Verification
    virtual ::grpc::Status SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>> AsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>>(AsyncSendVerificationEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>> PrepareAsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>>(PrepareAsyncSendVerificationEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::accounts::v1alpha1::VerifyEmailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    //  Countries
    virtual ::grpc::Status ListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::accounts::v1alpha1::ListCountriesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>> AsyncListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>>(AsyncListCountriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>> PrepareAsyncListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>>(PrepareAsyncListCountriesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::accounts::v1alpha1::GetOneCountryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>> AsyncGetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>>(AsyncGetOneCountryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>> PrepareAsyncGetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>>(PrepareAsyncGetOneCountryRaw(context, request, cq));
    }
    // Api Keys
    virtual ::grpc::Status CreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::accounts::v1alpha1::CreateApiKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>> AsyncCreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>>(AsyncCreateApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>> PrepareAsyncCreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>>(PrepareAsyncCreateApiKeyRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>> AsyncGetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>>(AsyncGetOneApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>> PrepareAsyncGetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>>(PrepareAsyncGetOneApiKeyRaw(context, request, cq));
    }
    virtual ::grpc::Status ListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::accounts::v1alpha1::ListApiKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>> AsyncListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>>(AsyncListApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>> PrepareAsyncListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>>(PrepareAsyncListApiKeyRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>> AsyncUpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>>(AsyncUpdateApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>> PrepareAsyncUpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>>(PrepareAsyncUpdateApiKeyRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>> AsyncDeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>>(AsyncDeleteApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>> PrepareAsyncDeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>>(PrepareAsyncDeleteApiKeyRaw(context, request, cq));
    }
    // TOKEN CCP
    virtual ::grpc::Status CreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>> AsyncCreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>>(AsyncCreateTokenCCPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>> PrepareAsyncCreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>>(PrepareAsyncCreateTokenCCPRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>> AsyncGetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>>(AsyncGetOneTokenCCPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>> PrepareAsyncGetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>>(PrepareAsyncGetOneTokenCCPRaw(context, request, cq));
    }
    // Get Users Email filter
    virtual ::grpc::Status GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>> AsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>>(AsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>> PrepareAsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>>(PrepareAsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    // Logs 
    virtual ::grpc::Status Logs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::accounts::v1alpha1::LogsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>> AsyncLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>>(AsyncLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>> PrepareAsyncLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>>(PrepareAsyncLogsRaw(context, request, cq));
    }
    virtual ::grpc::Status SaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::accounts::v1alpha1::SaveLogsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>> AsyncSaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>>(AsyncSaveLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>> PrepareAsyncSaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>>(PrepareAsyncSaveLogsRaw(context, request, cq));
    }
    virtual ::grpc::Status MFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::accounts::v1alpha1::MFAResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>> AsyncMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>>(AsyncMFARaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>> PrepareAsyncMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>>(PrepareAsyncMFARaw(context, request, cq));
    }
    // EDITTS AND DELETE USERS
    virtual ::grpc::Status DeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>> AsyncDeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>>(AsyncDeleteUserByProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>> PrepareAsyncDeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>>(PrepareAsyncDeleteUserByProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status EditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>> AsyncEditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>>(AsyncEditRoleUserByProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>> PrepareAsyncEditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>>(PrepareAsyncEditRoleUserByProjectRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // /AUTH
      virtual void CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response, std::function<void(::grpc::Status)>) = 0;
      // /PERMISSION
      virtual void CreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response, std::function<void(::grpc::Status)>) = 0;
      // /Organization
      virtual void CreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Roles 
      virtual void CreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response, std::function<void(::grpc::Status)>) = 0;
      // CRUD Project
      virtual void CreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Get Users Dex
      virtual void GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Send Verification
      virtual void SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) = 0;
      //  Countries
      virtual void ListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Api Keys
      virtual void CreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      // TOKEN CCP
      virtual void CreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Get Users Email filter
      virtual void GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response, std::function<void(::grpc::Status)>) = 0;
      // Logs 
      virtual void Logs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response, std::function<void(::grpc::Status)>) = 0;
      // EDITTS AND DELETE USERS
      virtual void DeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>* AsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserResponse>* PrepareAsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>* AsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserResponse>* PrepareAsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>* AsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListUserPaginationResponse>* PrepareAsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>* AsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListInvitationUserResponse>* PrepareAsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>* AsyncEnableOrDisableMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EnableOrDisableMFAResponse>* PrepareAsyncEnableOrDisableMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>* AsyncCreatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreatePermissionResponse>* PrepareAsyncCreatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>* AsyncListPermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListPermissionResponse>* PrepareAsyncListPermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>* AsyncGetOnePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOnePermissionResponse>* PrepareAsyncGetOnePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>* AsyncUpdatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdatePermissionResponse>* PrepareAsyncUpdatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>* AsyncDeletePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeletePermissionResponse>* PrepareAsyncDeletePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>* AsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateOrganizationResponse>* PrepareAsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>* AsyncListOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListOrganizationResponse>* PrepareAsyncListOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>* AsyncGetOneOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneOrganizationResponse>* PrepareAsyncGetOneOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>* AsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateOrganizationResponse>* PrepareAsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>* AsyncDeleteOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteOrganizationResponse>* PrepareAsyncDeleteOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>* AsyncCreateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateRoleResponse>* PrepareAsyncCreateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>* AsyncListRolesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListRolesResponse>* PrepareAsyncListRolesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>* AsyncUpdateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateRoleResponse>* PrepareAsyncUpdateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>* AsyncGetOneRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneRoleResponse>* PrepareAsyncGetOneRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>* AsyncGetRolesByUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByUserResponse>* PrepareAsyncGetRolesByUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>* AsyncGetRolesByOrgUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetRolesByOrgUserResponse>* PrepareAsyncGetRolesByOrgUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>* AsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteRoleResponse>* PrepareAsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>* AsyncCreateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateProjectResponse>* PrepareAsyncCreateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>* AsyncGetOneProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneProjectResponse>* PrepareAsyncGetOneProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>* AsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateProjectResponse>* PrepareAsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>* AsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteProjectResponse>* PrepareAsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>* AsyncListProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListProjectResponse>* PrepareAsyncListProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>* AsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetListUserDexResponse>* PrepareAsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>* AsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneUserDexResponse>* PrepareAsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>* AsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CheckUserResponse>* PrepareAsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>* AsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SendVerificationEmailResponse>* PrepareAsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>* AsyncListCountriesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListCountriesResponse>* PrepareAsyncListCountriesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>* AsyncGetOneCountryRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneCountryResponse>* PrepareAsyncGetOneCountryRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>* AsyncCreateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateApiKeyResponse>* PrepareAsyncCreateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>* AsyncGetOneApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneApiKeyResponse>* PrepareAsyncGetOneApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>* AsyncListApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::ListApiKeyResponse>* PrepareAsyncListApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>* AsyncUpdateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::UpdateApiKeyResponse>* PrepareAsyncUpdateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>* AsyncDeleteApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteApiKeyResponse>* PrepareAsyncDeleteApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>* AsyncCreateTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::CreateTokenCCPResponse>* PrepareAsyncCreateTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>* AsyncGetOneTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetOneTokenCCPResponse>* PrepareAsyncGetOneTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>* AsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::GetUsersEmailFilterResponse>* PrepareAsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>* AsyncLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::LogsResponse>* PrepareAsyncLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>* AsyncSaveLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::SaveLogsResponse>* PrepareAsyncSaveLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>* AsyncMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::MFAResponse>* PrepareAsyncMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>* AsyncDeleteUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::DeleteUserByProjectResponse>* PrepareAsyncDeleteUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>* AsyncEditRoleUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::accounts::v1alpha1::EditRoleUserByProjectResponse>* PrepareAsyncEditRoleUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::accounts::v1alpha1::CreateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    ::grpc::Status ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::accounts::v1alpha1::ListUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>> AsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>>(AsyncListUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>> PrepareAsyncListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>>(PrepareAsyncListUserRaw(context, request, cq));
    }
    ::grpc::Status GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::accounts::v1alpha1::GetOneUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>> AsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>>(AsyncGetOneUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>> PrepareAsyncGetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>>(PrepareAsyncGetOneUserRaw(context, request, cq));
    }
    ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::accounts::v1alpha1::UpdateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::accounts::v1alpha1::DeleteUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    ::grpc::Status ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::accounts::v1alpha1::ListUserPaginationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>> AsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>>(AsyncListUserPaginationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>> PrepareAsyncListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>>(PrepareAsyncListUserPaginationRaw(context, request, cq));
    }
    ::grpc::Status SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::accounts::v1alpha1::SendInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>> AsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>>(AsyncSendInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>> PrepareAsyncSendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>>(PrepareAsyncSendInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::accounts::v1alpha1::GetInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>> AsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>>(AsyncGetInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>> PrepareAsyncGetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>>(PrepareAsyncGetInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>> AsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>>(AsyncAgreeInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>> PrepareAsyncAgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>>(PrepareAsyncAgreeInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::accounts::v1alpha1::ListInvitationUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>> AsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>>(AsyncListInvitationUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>> PrepareAsyncListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>>(PrepareAsyncListInvitationUserRaw(context, request, cq));
    }
    ::grpc::Status EnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>> AsyncEnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>>(AsyncEnableOrDisableMFARaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>> PrepareAsyncEnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>>(PrepareAsyncEnableOrDisableMFARaw(context, request, cq));
    }
    ::grpc::Status CreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::accounts::v1alpha1::CreatePermissionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>> AsyncCreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>>(AsyncCreatePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>> PrepareAsyncCreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>>(PrepareAsyncCreatePermissionRaw(context, request, cq));
    }
    ::grpc::Status ListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::accounts::v1alpha1::ListPermissionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>> AsyncListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>>(AsyncListPermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>> PrepareAsyncListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>>(PrepareAsyncListPermissionRaw(context, request, cq));
    }
    ::grpc::Status GetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::accounts::v1alpha1::GetOnePermissionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>> AsyncGetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>>(AsyncGetOnePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>> PrepareAsyncGetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>>(PrepareAsyncGetOnePermissionRaw(context, request, cq));
    }
    ::grpc::Status UpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::accounts::v1alpha1::UpdatePermissionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>> AsyncUpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>>(AsyncUpdatePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>> PrepareAsyncUpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>>(PrepareAsyncUpdatePermissionRaw(context, request, cq));
    }
    ::grpc::Status DeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::accounts::v1alpha1::DeletePermissionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>> AsyncDeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>>(AsyncDeletePermissionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>> PrepareAsyncDeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>>(PrepareAsyncDeletePermissionRaw(context, request, cq));
    }
    ::grpc::Status CreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::accounts::v1alpha1::CreateOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>> AsyncCreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>>(AsyncCreateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>> PrepareAsyncCreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>>(PrepareAsyncCreateOrganizationRaw(context, request, cq));
    }
    ::grpc::Status ListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::accounts::v1alpha1::ListOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>> AsyncListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>>(AsyncListOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>> PrepareAsyncListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>>(PrepareAsyncListOrganizationRaw(context, request, cq));
    }
    ::grpc::Status GetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>> AsyncGetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>>(AsyncGetOneOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>> PrepareAsyncGetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>>(PrepareAsyncGetOneOrganizationRaw(context, request, cq));
    }
    ::grpc::Status UpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>> AsyncUpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>>(AsyncUpdateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>> PrepareAsyncUpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>>(PrepareAsyncUpdateOrganizationRaw(context, request, cq));
    }
    ::grpc::Status DeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>> AsyncDeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>>(AsyncDeleteOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>> PrepareAsyncDeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>>(PrepareAsyncDeleteOrganizationRaw(context, request, cq));
    }
    ::grpc::Status CreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::accounts::v1alpha1::CreateRoleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>> AsyncCreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>>(AsyncCreateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>> PrepareAsyncCreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>>(PrepareAsyncCreateRoleRaw(context, request, cq));
    }
    ::grpc::Status ListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::accounts::v1alpha1::ListRolesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>> AsyncListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>>(AsyncListRolesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>> PrepareAsyncListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>>(PrepareAsyncListRolesRaw(context, request, cq));
    }
    ::grpc::Status UpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::accounts::v1alpha1::UpdateRoleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>> AsyncUpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>>(AsyncUpdateRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>> PrepareAsyncUpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>>(PrepareAsyncUpdateRoleRaw(context, request, cq));
    }
    ::grpc::Status GetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::accounts::v1alpha1::GetOneRoleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>> AsyncGetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>>(AsyncGetOneRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>> PrepareAsyncGetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>>(PrepareAsyncGetOneRoleRaw(context, request, cq));
    }
    ::grpc::Status GetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::accounts::v1alpha1::GetRolesByUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>> AsyncGetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>>(AsyncGetRolesByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>> PrepareAsyncGetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>>(PrepareAsyncGetRolesByUserRaw(context, request, cq));
    }
    ::grpc::Status GetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>> AsyncGetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>>(AsyncGetRolesByOrgUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>> PrepareAsyncGetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>>(PrepareAsyncGetRolesByOrgUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::accounts::v1alpha1::DeleteRoleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>> AsyncDeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>>(AsyncDeleteRoleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>> PrepareAsyncDeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>>(PrepareAsyncDeleteRoleRaw(context, request, cq));
    }
    ::grpc::Status CreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::accounts::v1alpha1::CreateProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>> AsyncCreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>>(AsyncCreateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>> PrepareAsyncCreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>>(PrepareAsyncCreateProjectRaw(context, request, cq));
    }
    ::grpc::Status GetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::accounts::v1alpha1::GetOneProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>> AsyncGetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>>(AsyncGetOneProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>> PrepareAsyncGetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>>(PrepareAsyncGetOneProjectRaw(context, request, cq));
    }
    ::grpc::Status UpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::accounts::v1alpha1::UpdateProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>> AsyncUpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>>(AsyncUpdateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>> PrepareAsyncUpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>>(PrepareAsyncUpdateProjectRaw(context, request, cq));
    }
    ::grpc::Status DeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::accounts::v1alpha1::DeleteProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>> AsyncDeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>>(AsyncDeleteProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>> PrepareAsyncDeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>>(PrepareAsyncDeleteProjectRaw(context, request, cq));
    }
    ::grpc::Status ListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::accounts::v1alpha1::ListProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>> AsyncListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>>(AsyncListProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>> PrepareAsyncListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>>(PrepareAsyncListProjectRaw(context, request, cq));
    }
    ::grpc::Status GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::accounts::v1alpha1::GetListUserDexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>> AsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>>(AsyncGetListUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>> PrepareAsyncGetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>>(PrepareAsyncGetListUserDexRaw(context, request, cq));
    }
    ::grpc::Status GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::accounts::v1alpha1::GetOneUserDexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>> AsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>>(AsyncGetOneUserDexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>> PrepareAsyncGetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>>(PrepareAsyncGetOneUserDexRaw(context, request, cq));
    }
    ::grpc::Status CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::accounts::v1alpha1::CheckUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>> AsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>>(AsyncCheckUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>> PrepareAsyncCheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>>(PrepareAsyncCheckUserRaw(context, request, cq));
    }
    ::grpc::Status SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>> AsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>>(AsyncSendVerificationEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>> PrepareAsyncSendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>>(PrepareAsyncSendVerificationEmailRaw(context, request, cq));
    }
    ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::accounts::v1alpha1::VerifyEmailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    ::grpc::Status ListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::accounts::v1alpha1::ListCountriesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>> AsyncListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>>(AsyncListCountriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>> PrepareAsyncListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>>(PrepareAsyncListCountriesRaw(context, request, cq));
    }
    ::grpc::Status GetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::accounts::v1alpha1::GetOneCountryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>> AsyncGetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>>(AsyncGetOneCountryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>> PrepareAsyncGetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>>(PrepareAsyncGetOneCountryRaw(context, request, cq));
    }
    ::grpc::Status CreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::accounts::v1alpha1::CreateApiKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>> AsyncCreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>>(AsyncCreateApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>> PrepareAsyncCreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>>(PrepareAsyncCreateApiKeyRaw(context, request, cq));
    }
    ::grpc::Status GetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>> AsyncGetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>>(AsyncGetOneApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>> PrepareAsyncGetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>>(PrepareAsyncGetOneApiKeyRaw(context, request, cq));
    }
    ::grpc::Status ListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::accounts::v1alpha1::ListApiKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>> AsyncListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>>(AsyncListApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>> PrepareAsyncListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>>(PrepareAsyncListApiKeyRaw(context, request, cq));
    }
    ::grpc::Status UpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>> AsyncUpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>>(AsyncUpdateApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>> PrepareAsyncUpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>>(PrepareAsyncUpdateApiKeyRaw(context, request, cq));
    }
    ::grpc::Status DeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>> AsyncDeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>>(AsyncDeleteApiKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>> PrepareAsyncDeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>>(PrepareAsyncDeleteApiKeyRaw(context, request, cq));
    }
    ::grpc::Status CreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>> AsyncCreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>>(AsyncCreateTokenCCPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>> PrepareAsyncCreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>>(PrepareAsyncCreateTokenCCPRaw(context, request, cq));
    }
    ::grpc::Status GetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>> AsyncGetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>>(AsyncGetOneTokenCCPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>> PrepareAsyncGetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>>(PrepareAsyncGetOneTokenCCPRaw(context, request, cq));
    }
    ::grpc::Status GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>> AsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>>(AsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>> PrepareAsyncGetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>>(PrepareAsyncGetUsersEmailFilterRaw(context, request, cq));
    }
    ::grpc::Status Logs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::accounts::v1alpha1::LogsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>> AsyncLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>>(AsyncLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>> PrepareAsyncLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>>(PrepareAsyncLogsRaw(context, request, cq));
    }
    ::grpc::Status SaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::accounts::v1alpha1::SaveLogsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>> AsyncSaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>>(AsyncSaveLogsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>> PrepareAsyncSaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>>(PrepareAsyncSaveLogsRaw(context, request, cq));
    }
    ::grpc::Status MFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::accounts::v1alpha1::MFAResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>> AsyncMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>>(AsyncMFARaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>> PrepareAsyncMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>>(PrepareAsyncMFARaw(context, request, cq));
    }
    ::grpc::Status DeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>> AsyncDeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>>(AsyncDeleteUserByProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>> PrepareAsyncDeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>>(PrepareAsyncDeleteUserByProjectRaw(context, request, cq));
    }
    ::grpc::Status EditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>> AsyncEditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>>(AsyncEditRoleUserByProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>> PrepareAsyncEditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>>(PrepareAsyncEditRoleUserByProjectRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListUserPagination(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response, std::function<void(::grpc::Status)>) override;
      void SendInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void AgreeInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void ListInvitationUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response, std::function<void(::grpc::Status)>) override;
      void EnableOrDisableMFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response, std::function<void(::grpc::Status)>) override;
      void CreatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response, std::function<void(::grpc::Status)>) override;
      void ListPermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOnePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdatePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response, std::function<void(::grpc::Status)>) override;
      void DeletePermission(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void ListOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteOrganization(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRoles(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRolesByUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRolesByOrgUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRole(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void ListProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void GetListUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneUserDex(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckUser(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response, std::function<void(::grpc::Status)>) override;
      void SendVerificationEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response, std::function<void(::grpc::Status)>) override;
      void VerifyEmail(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCountries(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneCountry(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void ListApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteApiKey(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOneTokenCCP(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUsersEmailFilter(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response, std::function<void(::grpc::Status)>) override;
      void Logs(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response, std::function<void(::grpc::Status)>) override;
      void SaveLogs(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response, std::function<void(::grpc::Status)>) override;
      void MFA(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void EditRoleUserByProject(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>* AsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserResponse>* PrepareAsyncListUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>* AsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserResponse>* PrepareAsyncGetOneUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>* AsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListUserPaginationResponse>* PrepareAsyncListUserPaginationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>* AsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendInvitationUserResponse>* PrepareAsyncSendInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>* AsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetInvitationUserResponse>* PrepareAsyncGetInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>* AsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::AgreeInvitationUserResponse>* PrepareAsyncAgreeInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>* AsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListInvitationUserResponse>* PrepareAsyncListInvitationUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>* AsyncEnableOrDisableMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EnableOrDisableMFAResponse>* PrepareAsyncEnableOrDisableMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>* AsyncCreatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreatePermissionResponse>* PrepareAsyncCreatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreatePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>* AsyncListPermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListPermissionResponse>* PrepareAsyncListPermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListPermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>* AsyncGetOnePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOnePermissionResponse>* PrepareAsyncGetOnePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>* AsyncUpdatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdatePermissionResponse>* PrepareAsyncUpdatePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>* AsyncDeletePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeletePermissionResponse>* PrepareAsyncDeletePermissionRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeletePermissionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>* AsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateOrganizationResponse>* PrepareAsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>* AsyncListOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListOrganizationResponse>* PrepareAsyncListOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>* AsyncGetOneOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneOrganizationResponse>* PrepareAsyncGetOneOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>* AsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateOrganizationResponse>* PrepareAsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>* AsyncDeleteOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteOrganizationResponse>* PrepareAsyncDeleteOrganizationRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>* AsyncCreateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateRoleResponse>* PrepareAsyncCreateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>* AsyncListRolesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListRolesResponse>* PrepareAsyncListRolesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListRolesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>* AsyncUpdateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateRoleResponse>* PrepareAsyncUpdateRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>* AsyncGetOneRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneRoleResponse>* PrepareAsyncGetOneRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>* AsyncGetRolesByUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByUserResponse>* PrepareAsyncGetRolesByUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>* AsyncGetRolesByOrgUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetRolesByOrgUserResponse>* PrepareAsyncGetRolesByOrgUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>* AsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteRoleResponse>* PrepareAsyncDeleteRoleRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteRoleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>* AsyncCreateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateProjectResponse>* PrepareAsyncCreateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>* AsyncGetOneProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneProjectResponse>* PrepareAsyncGetOneProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>* AsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateProjectResponse>* PrepareAsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>* AsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteProjectResponse>* PrepareAsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>* AsyncListProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListProjectResponse>* PrepareAsyncListProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>* AsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetListUserDexResponse>* PrepareAsyncGetListUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetListUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>* AsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneUserDexResponse>* PrepareAsyncGetOneUserDexRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>* AsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CheckUserResponse>* PrepareAsyncCheckUserRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CheckUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>* AsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SendVerificationEmailResponse>* PrepareAsyncSendVerificationEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>* AsyncListCountriesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListCountriesResponse>* PrepareAsyncListCountriesRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListCountriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>* AsyncGetOneCountryRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneCountryResponse>* PrepareAsyncGetOneCountryRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneCountryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>* AsyncCreateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateApiKeyResponse>* PrepareAsyncCreateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>* AsyncGetOneApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneApiKeyResponse>* PrepareAsyncGetOneApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>* AsyncListApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::ListApiKeyResponse>* PrepareAsyncListApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::ListApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>* AsyncUpdateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::UpdateApiKeyResponse>* PrepareAsyncUpdateApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>* AsyncDeleteApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteApiKeyResponse>* PrepareAsyncDeleteApiKeyRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>* AsyncCreateTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::CreateTokenCCPResponse>* PrepareAsyncCreateTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>* AsyncGetOneTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetOneTokenCCPResponse>* PrepareAsyncGetOneTokenCCPRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>* AsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::GetUsersEmailFilterResponse>* PrepareAsyncGetUsersEmailFilterRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>* AsyncLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::LogsResponse>* PrepareAsyncLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::LogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>* AsyncSaveLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::SaveLogsResponse>* PrepareAsyncSaveLogsRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::SaveLogsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>* AsyncMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::MFAResponse>* PrepareAsyncMFARaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::MFARequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>* AsyncDeleteUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::DeleteUserByProjectResponse>* PrepareAsyncDeleteUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>* AsyncEditRoleUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::accounts::v1alpha1::EditRoleUserByProjectResponse>* PrepareAsyncEditRoleUserByProjectRaw(::grpc::ClientContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUserPagination_;
    const ::grpc::internal::RpcMethod rpcmethod_SendInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AgreeInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInvitationUser_;
    const ::grpc::internal::RpcMethod rpcmethod_EnableOrDisableMFA_;
    const ::grpc::internal::RpcMethod rpcmethod_CreatePermission_;
    const ::grpc::internal::RpcMethod rpcmethod_ListPermission_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOnePermission_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdatePermission_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePermission_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_ListOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRole_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRoles_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRole_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneRole_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRolesByUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRolesByOrgUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRole_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneProject_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProject_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProject_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetListUserDex_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneUserDex_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckUser_;
    const ::grpc::internal::RpcMethod rpcmethod_SendVerificationEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCountries_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneCountry_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateApiKey_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneApiKey_;
    const ::grpc::internal::RpcMethod rpcmethod_ListApiKey_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateApiKey_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteApiKey_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateTokenCCP_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOneTokenCCP_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUsersEmailFilter_;
    const ::grpc::internal::RpcMethod rpcmethod_Logs_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveLogs_;
    const ::grpc::internal::RpcMethod rpcmethod_MFA_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUserByProject_;
    const ::grpc::internal::RpcMethod rpcmethod_EditRoleUserByProject_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // /AUTH
    virtual ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response);
    virtual ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response);
    virtual ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response);
    virtual ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response);
    virtual ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response);
    virtual ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response);
    virtual ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response);
    virtual ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response);
    virtual ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response);
    virtual ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response);
    virtual ::grpc::Status EnableOrDisableMFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response);
    // /PERMISSION
    virtual ::grpc::Status CreatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response);
    virtual ::grpc::Status ListPermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response);
    virtual ::grpc::Status GetOnePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response);
    virtual ::grpc::Status UpdatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response);
    virtual ::grpc::Status DeletePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response);
    // /Organization
    virtual ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response);
    virtual ::grpc::Status ListOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response);
    virtual ::grpc::Status GetOneOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response);
    virtual ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response);
    virtual ::grpc::Status DeleteOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response);
    // Roles 
    virtual ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response);
    virtual ::grpc::Status ListRoles(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response);
    virtual ::grpc::Status UpdateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response);
    virtual ::grpc::Status GetOneRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response);
    virtual ::grpc::Status GetRolesByUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response);
    virtual ::grpc::Status GetRolesByOrgUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response);
    virtual ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response);
    // CRUD Project
    virtual ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response);
    virtual ::grpc::Status GetOneProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response);
    virtual ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response);
    virtual ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response);
    virtual ::grpc::Status ListProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response);
    // Get Users Dex
    virtual ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response);
    virtual ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response);
    virtual ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response);
    // Send Verification
    virtual ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response);
    virtual ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response);
    //  Countries
    virtual ::grpc::Status ListCountries(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response);
    virtual ::grpc::Status GetOneCountry(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response);
    // Api Keys
    virtual ::grpc::Status CreateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response);
    virtual ::grpc::Status GetOneApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response);
    virtual ::grpc::Status ListApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response);
    virtual ::grpc::Status UpdateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response);
    virtual ::grpc::Status DeleteApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response);
    // TOKEN CCP
    virtual ::grpc::Status CreateTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response);
    virtual ::grpc::Status GetOneTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response);
    // Get Users Email filter
    virtual ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response);
    // Logs 
    virtual ::grpc::Status Logs(::grpc::ServerContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response);
    virtual ::grpc::Status SaveLogs(::grpc::ServerContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response);
    virtual ::grpc::Status MFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response);
    // EDITTS AND DELETE USERS
    virtual ::grpc::Status DeleteUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response);
    virtual ::grpc::Status EditRoleUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUser(::grpc::ServerContext* context, ::accounts::v1alpha1::ListUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUser(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserPagination(::grpc::ServerContext* context, ::accounts::v1alpha1::ListUserPaginationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListUserPaginationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::SendInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::SendInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::GetInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::AgreeInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationUser(::grpc::ServerContext* context, ::accounts::v1alpha1::ListInvitationUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListInvitationUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnableOrDisableMFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnableOrDisableMFA() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_EnableOrDisableMFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableOrDisableMFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableOrDisableMFA(::grpc::ServerContext* context, ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::EnableOrDisableMFAResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreatePermission() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_CreatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePermission(::grpc::ServerContext* context, ::accounts::v1alpha1::CreatePermissionRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreatePermissionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListPermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListPermission() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ListPermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListPermission(::grpc::ServerContext* context, ::accounts::v1alpha1::ListPermissionRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListPermissionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOnePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOnePermission() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetOnePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOnePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOnePermission(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOnePermissionRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOnePermissionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdatePermission() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_UpdatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePermission(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdatePermissionRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdatePermissionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeletePermission() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeletePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermission(::grpc::ServerContext* context, ::accounts::v1alpha1::DeletePermissionRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeletePermissionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrganization(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListOrganization() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_ListOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrganization(::grpc::ServerContext* context, ::accounts::v1alpha1::ListOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneOrganization() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetOneOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneOrganization(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrganization(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdateOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteOrganization() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_DeleteOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteOrganization(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateRole() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRole(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateRoleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListRoles() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_ListRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoles(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoles(::grpc::ServerContext* context, ::accounts::v1alpha1::ListRolesRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListRolesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateRole() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_UpdateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRole(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdateRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdateRoleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneRole() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_GetOneRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneRole(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneRoleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRolesByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRolesByUser() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_GetRolesByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesByUser(::grpc::ServerContext* context, ::accounts::v1alpha1::GetRolesByUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetRolesByUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRolesByOrgUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRolesByOrgUser() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetRolesByOrgUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByOrgUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesByOrgUser(::grpc::ServerContext* context, ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetRolesByOrgUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteRole() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRole(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteRoleRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteRoleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateProject() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProject(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneProject() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_GetOneProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneProject(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateProject() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProject(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdateProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdateProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteProject() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProject(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListProject() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_ListProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProject(::grpc::ServerContext* context, ::accounts::v1alpha1::ListProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListUserDex(::grpc::ServerContext* context, ::accounts::v1alpha1::GetListUserDexRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetListUserDexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUserDex(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneUserDexRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneUserDexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CheckUser() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckUser(::grpc::ServerContext* context, ::accounts::v1alpha1::CheckUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CheckUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendVerificationEmail(::grpc::ServerContext* context, ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::SendVerificationEmailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::accounts::v1alpha1::VerifyEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::VerifyEmailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCountries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListCountries() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_ListCountries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCountries(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCountries(::grpc::ServerContext* context, ::accounts::v1alpha1::ListCountriesRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListCountriesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneCountry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneCountry() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_GetOneCountry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneCountry(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneCountry(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneCountryRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneCountryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateApiKey() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_CreateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateApiKey(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateApiKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateApiKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneApiKey() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_GetOneApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneApiKey(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneApiKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListApiKey() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_ListApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApiKey(::grpc::ServerContext* context, ::accounts::v1alpha1::ListApiKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::ListApiKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateApiKey() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_UpdateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateApiKey(::grpc::ServerContext* context, ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::UpdateApiKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteApiKey() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_DeleteApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApiKey(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteApiKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateTokenCCP() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_CreateTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTokenCCP(::grpc::ServerContext* context, ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::CreateTokenCCPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOneTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetOneTokenCCP() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_GetOneTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneTokenCCP(::grpc::ServerContext* context, ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetOneTokenCCPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUsersEmailFilter(::grpc::ServerContext* context, ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::GetUsersEmailFilterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Logs() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogs(::grpc::ServerContext* context, ::accounts::v1alpha1::LogsRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::LogsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveLogs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SaveLogs() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_SaveLogs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLogs(::grpc::ServerContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLogs(::grpc::ServerContext* context, ::accounts::v1alpha1::SaveLogsRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::SaveLogsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MFA() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_MFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMFA(::grpc::ServerContext* context, ::accounts::v1alpha1::MFARequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::MFAResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteUserByProject() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_DeleteUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUserByProject(::grpc::ServerContext* context, ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::DeleteUserByProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditRoleUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EditRoleUserByProject() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_EditRoleUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRoleUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditRoleUserByProject(::grpc::ServerContext* context, ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::accounts::v1alpha1::EditRoleUserByProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateUser<WithAsyncMethod_ListUser<WithAsyncMethod_GetOneUser<WithAsyncMethod_UpdateUser<WithAsyncMethod_DeleteUser<WithAsyncMethod_ListUserPagination<WithAsyncMethod_SendInvitationUser<WithAsyncMethod_GetInvitationUser<WithAsyncMethod_AgreeInvitationUser<WithAsyncMethod_ListInvitationUser<WithAsyncMethod_EnableOrDisableMFA<WithAsyncMethod_CreatePermission<WithAsyncMethod_ListPermission<WithAsyncMethod_GetOnePermission<WithAsyncMethod_UpdatePermission<WithAsyncMethod_DeletePermission<WithAsyncMethod_CreateOrganization<WithAsyncMethod_ListOrganization<WithAsyncMethod_GetOneOrganization<WithAsyncMethod_UpdateOrganization<WithAsyncMethod_DeleteOrganization<WithAsyncMethod_CreateRole<WithAsyncMethod_ListRoles<WithAsyncMethod_UpdateRole<WithAsyncMethod_GetOneRole<WithAsyncMethod_GetRolesByUser<WithAsyncMethod_GetRolesByOrgUser<WithAsyncMethod_DeleteRole<WithAsyncMethod_CreateProject<WithAsyncMethod_GetOneProject<WithAsyncMethod_UpdateProject<WithAsyncMethod_DeleteProject<WithAsyncMethod_ListProject<WithAsyncMethod_GetListUserDex<WithAsyncMethod_GetOneUserDex<WithAsyncMethod_CheckUser<WithAsyncMethod_SendVerificationEmail<WithAsyncMethod_VerifyEmail<WithAsyncMethod_ListCountries<WithAsyncMethod_GetOneCountry<WithAsyncMethod_CreateApiKey<WithAsyncMethod_GetOneApiKey<WithAsyncMethod_ListApiKey<WithAsyncMethod_UpdateApiKey<WithAsyncMethod_DeleteApiKey<WithAsyncMethod_CreateTokenCCP<WithAsyncMethod_GetOneTokenCCP<WithAsyncMethod_GetUsersEmailFilter<WithAsyncMethod_Logs<WithAsyncMethod_SaveLogs<WithAsyncMethod_MFA<WithAsyncMethod_DeleteUserByProject<WithAsyncMethod_EditRoleUserByProject<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnableOrDisableMFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnableOrDisableMFA() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_EnableOrDisableMFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableOrDisableMFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreatePermission() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_CreatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListPermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListPermission() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ListPermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOnePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOnePermission() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetOnePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOnePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdatePermission() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_UpdatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeletePermission() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeletePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListOrganization() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_ListOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneOrganization() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetOneOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteOrganization() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_DeleteOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateRole() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListRoles() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_ListRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoles(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateRole() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_UpdateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneRole() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_GetOneRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRolesByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRolesByUser() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_GetRolesByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRolesByOrgUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRolesByOrgUser() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetRolesByOrgUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByOrgUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteRole() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateProject() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneProject() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_GetOneProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateProject() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteProject() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListProject() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_ListProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CheckUser() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCountries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListCountries() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_ListCountries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCountries(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneCountry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneCountry() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_GetOneCountry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneCountry(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateApiKey() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_CreateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneApiKey() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_GetOneApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListApiKey() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_ListApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateApiKey() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_UpdateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteApiKey() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_DeleteApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateTokenCCP() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_CreateTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOneTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetOneTokenCCP() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_GetOneTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Logs() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveLogs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SaveLogs() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_SaveLogs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLogs(::grpc::ServerContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MFA() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_MFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteUserByProject() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_DeleteUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditRoleUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EditRoleUserByProject() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_EditRoleUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRoleUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUserPagination(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInvitationUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EnableOrDisableMFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_EnableOrDisableMFA() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_EnableOrDisableMFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableOrDisableMFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableOrDisableMFA(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreatePermission() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_CreatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePermission(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListPermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListPermission() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ListPermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListPermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListPermission(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOnePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOnePermission() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetOnePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOnePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOnePermission(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdatePermission() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_UpdatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePermission(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeletePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeletePermission() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeletePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermission(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListOrganization() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_ListOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneOrganization() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetOneOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteOrganization() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_DeleteOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateRole() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListRoles() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_ListRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoles(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoles(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateRole() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_UpdateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneRole() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_GetOneRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRolesByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetRolesByUser() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_GetRolesByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesByUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRolesByOrgUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetRolesByOrgUser() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetRolesByOrgUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRolesByOrgUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRolesByOrgUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteRole() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRole(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateProject() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneProject() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_GetOneProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateProject() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteProject() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListProject() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_ListProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListUserDex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneUserDex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CheckUser() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendVerificationEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCountries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListCountries() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_ListCountries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCountries(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCountries(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneCountry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneCountry() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_GetOneCountry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneCountry(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneCountry(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateApiKey() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_CreateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateApiKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneApiKey() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_GetOneApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneApiKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListApiKey() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_ListApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApiKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateApiKey() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_UpdateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateApiKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteApiKey() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_DeleteApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApiKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateTokenCCP() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_CreateTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTokenCCP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOneTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetOneTokenCCP() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_GetOneTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOneTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOneTokenCCP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUsersEmailFilter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_Logs() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Logs(::grpc::ServerContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveLogs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SaveLogs() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_SaveLogs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLogs(::grpc::ServerContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLogs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_MFA() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_MFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMFA(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteUserByProject() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_DeleteUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUserByProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditRoleUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_EditRoleUserByProject() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_EditRoleUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditRoleUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditRoleUserByProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateUserRequest, ::accounts::v1alpha1::CreateUserResponse>(std::bind(&WithStreamedUnaryMethod_CreateUser<BaseClass>::StreamedCreateUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateUserRequest* request, ::accounts::v1alpha1::CreateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateUserRequest,::accounts::v1alpha1::CreateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListUserRequest, ::accounts::v1alpha1::ListUserResponse>(std::bind(&WithStreamedUnaryMethod_ListUser<BaseClass>::StreamedListUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserRequest* request, ::accounts::v1alpha1::ListUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListUserRequest,::accounts::v1alpha1::ListUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneUserRequest, ::accounts::v1alpha1::GetOneUserResponse>(std::bind(&WithStreamedUnaryMethod_GetOneUser<BaseClass>::StreamedGetOneUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserRequest* request, ::accounts::v1alpha1::GetOneUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneUserRequest,::accounts::v1alpha1::GetOneUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdateUserRequest, ::accounts::v1alpha1::UpdateUserResponse>(std::bind(&WithStreamedUnaryMethod_UpdateUser<BaseClass>::StreamedUpdateUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateUserRequest* request, ::accounts::v1alpha1::UpdateUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdateUserRequest,::accounts::v1alpha1::UpdateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteUserRequest, ::accounts::v1alpha1::DeleteUserResponse>(std::bind(&WithStreamedUnaryMethod_DeleteUser<BaseClass>::StreamedDeleteUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserRequest* request, ::accounts::v1alpha1::DeleteUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteUserRequest,::accounts::v1alpha1::DeleteUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUserPagination : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListUserPagination() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListUserPaginationRequest, ::accounts::v1alpha1::ListUserPaginationResponse>(std::bind(&WithStreamedUnaryMethod_ListUserPagination<BaseClass>::StreamedListUserPagination, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListUserPagination() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUserPagination(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListUserPaginationRequest* request, ::accounts::v1alpha1::ListUserPaginationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUserPagination(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListUserPaginationRequest,::accounts::v1alpha1::ListUserPaginationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::SendInvitationUserRequest, ::accounts::v1alpha1::SendInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_SendInvitationUser<BaseClass>::StreamedSendInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendInvitationUserRequest* request, ::accounts::v1alpha1::SendInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::SendInvitationUserRequest,::accounts::v1alpha1::SendInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetInvitationUserRequest, ::accounts::v1alpha1::GetInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_GetInvitationUser<BaseClass>::StreamedGetInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetInvitationUserRequest* request, ::accounts::v1alpha1::GetInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetInvitationUserRequest,::accounts::v1alpha1::GetInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AgreeInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AgreeInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::AgreeInvitationUserRequest, ::accounts::v1alpha1::AgreeInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_AgreeInvitationUser<BaseClass>::StreamedAgreeInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AgreeInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AgreeInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::AgreeInvitationUserRequest* request, ::accounts::v1alpha1::AgreeInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAgreeInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::AgreeInvitationUserRequest,::accounts::v1alpha1::AgreeInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInvitationUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListInvitationUser() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListInvitationUserRequest, ::accounts::v1alpha1::ListInvitationUserResponse>(std::bind(&WithStreamedUnaryMethod_ListInvitationUser<BaseClass>::StreamedListInvitationUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListInvitationUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInvitationUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListInvitationUserRequest* request, ::accounts::v1alpha1::ListInvitationUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInvitationUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListInvitationUserRequest,::accounts::v1alpha1::ListInvitationUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnableOrDisableMFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnableOrDisableMFA() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::EnableOrDisableMFARequest, ::accounts::v1alpha1::EnableOrDisableMFAResponse>(std::bind(&WithStreamedUnaryMethod_EnableOrDisableMFA<BaseClass>::StreamedEnableOrDisableMFA, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnableOrDisableMFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnableOrDisableMFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::EnableOrDisableMFARequest* request, ::accounts::v1alpha1::EnableOrDisableMFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnableOrDisableMFA(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::EnableOrDisableMFARequest,::accounts::v1alpha1::EnableOrDisableMFAResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreatePermission() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreatePermissionRequest, ::accounts::v1alpha1::CreatePermissionResponse>(std::bind(&WithStreamedUnaryMethod_CreatePermission<BaseClass>::StreamedCreatePermission, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreatePermissionRequest* request, ::accounts::v1alpha1::CreatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreatePermission(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreatePermissionRequest,::accounts::v1alpha1::CreatePermissionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListPermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListPermission() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListPermissionRequest, ::accounts::v1alpha1::ListPermissionResponse>(std::bind(&WithStreamedUnaryMethod_ListPermission<BaseClass>::StreamedListPermission, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListPermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListPermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListPermissionRequest* request, ::accounts::v1alpha1::ListPermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListPermission(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListPermissionRequest,::accounts::v1alpha1::ListPermissionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOnePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOnePermission() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOnePermissionRequest, ::accounts::v1alpha1::GetOnePermissionResponse>(std::bind(&WithStreamedUnaryMethod_GetOnePermission<BaseClass>::StreamedGetOnePermission, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOnePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOnePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOnePermissionRequest* request, ::accounts::v1alpha1::GetOnePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOnePermission(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOnePermissionRequest,::accounts::v1alpha1::GetOnePermissionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdatePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdatePermission() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdatePermissionRequest, ::accounts::v1alpha1::UpdatePermissionResponse>(std::bind(&WithStreamedUnaryMethod_UpdatePermission<BaseClass>::StreamedUpdatePermission, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdatePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdatePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdatePermissionRequest* request, ::accounts::v1alpha1::UpdatePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdatePermission(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdatePermissionRequest,::accounts::v1alpha1::UpdatePermissionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePermission : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeletePermission() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeletePermissionRequest, ::accounts::v1alpha1::DeletePermissionResponse>(std::bind(&WithStreamedUnaryMethod_DeletePermission<BaseClass>::StreamedDeletePermission, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeletePermission() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePermission(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeletePermissionRequest* request, ::accounts::v1alpha1::DeletePermissionResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePermission(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeletePermissionRequest,::accounts::v1alpha1::DeletePermissionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateOrganizationRequest, ::accounts::v1alpha1::CreateOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_CreateOrganization<BaseClass>::StreamedCreateOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateOrganizationRequest* request, ::accounts::v1alpha1::CreateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateOrganizationRequest,::accounts::v1alpha1::CreateOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListOrganization() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListOrganizationRequest, ::accounts::v1alpha1::ListOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_ListOrganization<BaseClass>::StreamedListOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListOrganizationRequest* request, ::accounts::v1alpha1::ListOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListOrganizationRequest,::accounts::v1alpha1::ListOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneOrganization() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneOrganizationRequest, ::accounts::v1alpha1::GetOneOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_GetOneOrganization<BaseClass>::StreamedGetOneOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneOrganizationRequest* request, ::accounts::v1alpha1::GetOneOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneOrganizationRequest,::accounts::v1alpha1::GetOneOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdateOrganizationRequest, ::accounts::v1alpha1::UpdateOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_UpdateOrganization<BaseClass>::StreamedUpdateOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateOrganizationRequest* request, ::accounts::v1alpha1::UpdateOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdateOrganizationRequest,::accounts::v1alpha1::UpdateOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteOrganization() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteOrganizationRequest, ::accounts::v1alpha1::DeleteOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteOrganization<BaseClass>::StreamedDeleteOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteOrganization(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteOrganizationRequest* request, ::accounts::v1alpha1::DeleteOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteOrganizationRequest,::accounts::v1alpha1::DeleteOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateRole() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateRoleRequest, ::accounts::v1alpha1::CreateRoleResponse>(std::bind(&WithStreamedUnaryMethod_CreateRole<BaseClass>::StreamedCreateRole, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateRoleRequest* request, ::accounts::v1alpha1::CreateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateRoleRequest,::accounts::v1alpha1::CreateRoleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRoles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListRoles() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListRolesRequest, ::accounts::v1alpha1::ListRolesResponse>(std::bind(&WithStreamedUnaryMethod_ListRoles<BaseClass>::StreamedListRoles, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListRoles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRoles(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListRolesRequest* request, ::accounts::v1alpha1::ListRolesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRoles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListRolesRequest,::accounts::v1alpha1::ListRolesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateRole() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdateRoleRequest, ::accounts::v1alpha1::UpdateRoleResponse>(std::bind(&WithStreamedUnaryMethod_UpdateRole<BaseClass>::StreamedUpdateRole, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateRoleRequest* request, ::accounts::v1alpha1::UpdateRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdateRoleRequest,::accounts::v1alpha1::UpdateRoleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneRole() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneRoleRequest, ::accounts::v1alpha1::GetOneRoleResponse>(std::bind(&WithStreamedUnaryMethod_GetOneRole<BaseClass>::StreamedGetOneRole, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneRoleRequest* request, ::accounts::v1alpha1::GetOneRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneRoleRequest,::accounts::v1alpha1::GetOneRoleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRolesByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRolesByUser() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetRolesByUserRequest, ::accounts::v1alpha1::GetRolesByUserResponse>(std::bind(&WithStreamedUnaryMethod_GetRolesByUser<BaseClass>::StreamedGetRolesByUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRolesByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRolesByUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByUserRequest* request, ::accounts::v1alpha1::GetRolesByUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRolesByUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetRolesByUserRequest,::accounts::v1alpha1::GetRolesByUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRolesByOrgUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRolesByOrgUser() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetRolesByOrgUserRequest, ::accounts::v1alpha1::GetRolesByOrgUserResponse>(std::bind(&WithStreamedUnaryMethod_GetRolesByOrgUser<BaseClass>::StreamedGetRolesByOrgUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRolesByOrgUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRolesByOrgUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetRolesByOrgUserRequest* request, ::accounts::v1alpha1::GetRolesByOrgUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRolesByOrgUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetRolesByOrgUserRequest,::accounts::v1alpha1::GetRolesByOrgUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRole : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteRole() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteRoleRequest, ::accounts::v1alpha1::DeleteRoleResponse>(std::bind(&WithStreamedUnaryMethod_DeleteRole<BaseClass>::StreamedDeleteRole, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteRole() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRole(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteRoleRequest* request, ::accounts::v1alpha1::DeleteRoleResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRole(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteRoleRequest,::accounts::v1alpha1::DeleteRoleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateProject() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateProjectRequest, ::accounts::v1alpha1::CreateProjectResponse>(std::bind(&WithStreamedUnaryMethod_CreateProject<BaseClass>::StreamedCreateProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateProjectRequest* request, ::accounts::v1alpha1::CreateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateProjectRequest,::accounts::v1alpha1::CreateProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneProject() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneProjectRequest, ::accounts::v1alpha1::GetOneProjectResponse>(std::bind(&WithStreamedUnaryMethod_GetOneProject<BaseClass>::StreamedGetOneProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneProjectRequest* request, ::accounts::v1alpha1::GetOneProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneProjectRequest,::accounts::v1alpha1::GetOneProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateProject() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdateProjectRequest, ::accounts::v1alpha1::UpdateProjectResponse>(std::bind(&WithStreamedUnaryMethod_UpdateProject<BaseClass>::StreamedUpdateProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateProjectRequest* request, ::accounts::v1alpha1::UpdateProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdateProjectRequest,::accounts::v1alpha1::UpdateProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteProject() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteProjectRequest, ::accounts::v1alpha1::DeleteProjectResponse>(std::bind(&WithStreamedUnaryMethod_DeleteProject<BaseClass>::StreamedDeleteProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteProjectRequest* request, ::accounts::v1alpha1::DeleteProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteProjectRequest,::accounts::v1alpha1::DeleteProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListProject() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListProjectRequest, ::accounts::v1alpha1::ListProjectResponse>(std::bind(&WithStreamedUnaryMethod_ListProject<BaseClass>::StreamedListProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListProjectRequest* request, ::accounts::v1alpha1::ListProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListProjectRequest,::accounts::v1alpha1::ListProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetListUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetListUserDex() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetListUserDexRequest, ::accounts::v1alpha1::GetListUserDexResponse>(std::bind(&WithStreamedUnaryMethod_GetListUserDex<BaseClass>::StreamedGetListUserDex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetListUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetListUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetListUserDexRequest* request, ::accounts::v1alpha1::GetListUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetListUserDex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetListUserDexRequest,::accounts::v1alpha1::GetListUserDexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneUserDex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneUserDex() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneUserDexRequest, ::accounts::v1alpha1::GetOneUserDexResponse>(std::bind(&WithStreamedUnaryMethod_GetOneUserDex<BaseClass>::StreamedGetOneUserDex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneUserDex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneUserDex(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneUserDexRequest* request, ::accounts::v1alpha1::GetOneUserDexResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneUserDex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneUserDexRequest,::accounts::v1alpha1::GetOneUserDexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CheckUser() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CheckUserRequest, ::accounts::v1alpha1::CheckUserResponse>(std::bind(&WithStreamedUnaryMethod_CheckUser<BaseClass>::StreamedCheckUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CheckUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckUser(::grpc::ServerContext* context, const ::accounts::v1alpha1::CheckUserRequest* request, ::accounts::v1alpha1::CheckUserResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CheckUserRequest,::accounts::v1alpha1::CheckUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendVerificationEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendVerificationEmail() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::SendVerificationEmailRequest, ::accounts::v1alpha1::SendVerificationEmailResponse>(std::bind(&WithStreamedUnaryMethod_SendVerificationEmail<BaseClass>::StreamedSendVerificationEmail, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendVerificationEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendVerificationEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::SendVerificationEmailRequest* request, ::accounts::v1alpha1::SendVerificationEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendVerificationEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::SendVerificationEmailRequest,::accounts::v1alpha1::SendVerificationEmailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::VerifyEmailRequest, ::accounts::v1alpha1::VerifyEmailResponse>(std::bind(&WithStreamedUnaryMethod_VerifyEmail<BaseClass>::StreamedVerifyEmail, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::accounts::v1alpha1::VerifyEmailRequest* request, ::accounts::v1alpha1::VerifyEmailResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::VerifyEmailRequest,::accounts::v1alpha1::VerifyEmailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCountries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListCountries() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListCountriesRequest, ::accounts::v1alpha1::ListCountriesResponse>(std::bind(&WithStreamedUnaryMethod_ListCountries<BaseClass>::StreamedListCountries, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListCountries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCountries(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListCountriesRequest* request, ::accounts::v1alpha1::ListCountriesResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCountries(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListCountriesRequest,::accounts::v1alpha1::ListCountriesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneCountry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneCountry() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneCountryRequest, ::accounts::v1alpha1::GetOneCountryResponse>(std::bind(&WithStreamedUnaryMethod_GetOneCountry<BaseClass>::StreamedGetOneCountry, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneCountry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneCountry(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneCountryRequest* request, ::accounts::v1alpha1::GetOneCountryResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneCountry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneCountryRequest,::accounts::v1alpha1::GetOneCountryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateApiKey() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateApiKeyRequest, ::accounts::v1alpha1::CreateApiKeyResponse>(std::bind(&WithStreamedUnaryMethod_CreateApiKey<BaseClass>::StreamedCreateApiKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateApiKeyRequest* request, ::accounts::v1alpha1::CreateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateApiKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateApiKeyRequest,::accounts::v1alpha1::CreateApiKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneApiKey() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneApiKeyRequest, ::accounts::v1alpha1::GetOneApiKeyResponse>(std::bind(&WithStreamedUnaryMethod_GetOneApiKey<BaseClass>::StreamedGetOneApiKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneApiKeyRequest* request, ::accounts::v1alpha1::GetOneApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneApiKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneApiKeyRequest,::accounts::v1alpha1::GetOneApiKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListApiKey() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::ListApiKeyRequest, ::accounts::v1alpha1::ListApiKeyResponse>(std::bind(&WithStreamedUnaryMethod_ListApiKey<BaseClass>::StreamedListApiKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::ListApiKeyRequest* request, ::accounts::v1alpha1::ListApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListApiKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::ListApiKeyRequest,::accounts::v1alpha1::ListApiKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateApiKey() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::UpdateApiKeyRequest, ::accounts::v1alpha1::UpdateApiKeyResponse>(std::bind(&WithStreamedUnaryMethod_UpdateApiKey<BaseClass>::StreamedUpdateApiKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::UpdateApiKeyRequest* request, ::accounts::v1alpha1::UpdateApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateApiKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::UpdateApiKeyRequest,::accounts::v1alpha1::UpdateApiKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteApiKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteApiKey() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteApiKeyRequest, ::accounts::v1alpha1::DeleteApiKeyResponse>(std::bind(&WithStreamedUnaryMethod_DeleteApiKey<BaseClass>::StreamedDeleteApiKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteApiKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteApiKey(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteApiKeyRequest* request, ::accounts::v1alpha1::DeleteApiKeyResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteApiKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteApiKeyRequest,::accounts::v1alpha1::DeleteApiKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateTokenCCP() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::CreateTokenCCPRequest, ::accounts::v1alpha1::CreateTokenCCPResponse>(std::bind(&WithStreamedUnaryMethod_CreateTokenCCP<BaseClass>::StreamedCreateTokenCCP, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::CreateTokenCCPRequest* request, ::accounts::v1alpha1::CreateTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTokenCCP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::CreateTokenCCPRequest,::accounts::v1alpha1::CreateTokenCCPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOneTokenCCP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetOneTokenCCP() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetOneTokenCCPRequest, ::accounts::v1alpha1::GetOneTokenCCPResponse>(std::bind(&WithStreamedUnaryMethod_GetOneTokenCCP<BaseClass>::StreamedGetOneTokenCCP, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetOneTokenCCP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOneTokenCCP(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetOneTokenCCPRequest* request, ::accounts::v1alpha1::GetOneTokenCCPResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOneTokenCCP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetOneTokenCCPRequest,::accounts::v1alpha1::GetOneTokenCCPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUsersEmailFilter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUsersEmailFilter() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::GetUsersEmailFilterRequest, ::accounts::v1alpha1::GetUsersEmailFilterResponse>(std::bind(&WithStreamedUnaryMethod_GetUsersEmailFilter<BaseClass>::StreamedGetUsersEmailFilter, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUsersEmailFilter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUsersEmailFilter(::grpc::ServerContext* context, const ::accounts::v1alpha1::GetUsersEmailFilterRequest* request, ::accounts::v1alpha1::GetUsersEmailFilterResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUsersEmailFilter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::GetUsersEmailFilterRequest,::accounts::v1alpha1::GetUsersEmailFilterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Logs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Logs() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::LogsRequest, ::accounts::v1alpha1::LogsResponse>(std::bind(&WithStreamedUnaryMethod_Logs<BaseClass>::StreamedLogs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Logs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Logs(::grpc::ServerContext* context, const ::accounts::v1alpha1::LogsRequest* request, ::accounts::v1alpha1::LogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::LogsRequest,::accounts::v1alpha1::LogsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveLogs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SaveLogs() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::SaveLogsRequest, ::accounts::v1alpha1::SaveLogsResponse>(std::bind(&WithStreamedUnaryMethod_SaveLogs<BaseClass>::StreamedSaveLogs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SaveLogs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveLogs(::grpc::ServerContext* context, const ::accounts::v1alpha1::SaveLogsRequest* request, ::accounts::v1alpha1::SaveLogsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveLogs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::SaveLogsRequest,::accounts::v1alpha1::SaveLogsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MFA : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MFA() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::MFARequest, ::accounts::v1alpha1::MFAResponse>(std::bind(&WithStreamedUnaryMethod_MFA<BaseClass>::StreamedMFA, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MFA() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MFA(::grpc::ServerContext* context, const ::accounts::v1alpha1::MFARequest* request, ::accounts::v1alpha1::MFAResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMFA(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::MFARequest,::accounts::v1alpha1::MFAResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteUserByProject() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::DeleteUserByProjectRequest, ::accounts::v1alpha1::DeleteUserByProjectResponse>(std::bind(&WithStreamedUnaryMethod_DeleteUserByProject<BaseClass>::StreamedDeleteUserByProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::DeleteUserByProjectRequest* request, ::accounts::v1alpha1::DeleteUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUserByProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::DeleteUserByProjectRequest,::accounts::v1alpha1::DeleteUserByProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditRoleUserByProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EditRoleUserByProject() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler< ::accounts::v1alpha1::EditRoleUserByProjectRequest, ::accounts::v1alpha1::EditRoleUserByProjectResponse>(std::bind(&WithStreamedUnaryMethod_EditRoleUserByProject<BaseClass>::StreamedEditRoleUserByProject, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EditRoleUserByProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditRoleUserByProject(::grpc::ServerContext* context, const ::accounts::v1alpha1::EditRoleUserByProjectRequest* request, ::accounts::v1alpha1::EditRoleUserByProjectResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditRoleUserByProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::accounts::v1alpha1::EditRoleUserByProjectRequest,::accounts::v1alpha1::EditRoleUserByProjectResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_ListUser<WithStreamedUnaryMethod_GetOneUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_ListUserPagination<WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationUser<WithStreamedUnaryMethod_EnableOrDisableMFA<WithStreamedUnaryMethod_CreatePermission<WithStreamedUnaryMethod_ListPermission<WithStreamedUnaryMethod_GetOnePermission<WithStreamedUnaryMethod_UpdatePermission<WithStreamedUnaryMethod_DeletePermission<WithStreamedUnaryMethod_CreateOrganization<WithStreamedUnaryMethod_ListOrganization<WithStreamedUnaryMethod_GetOneOrganization<WithStreamedUnaryMethod_UpdateOrganization<WithStreamedUnaryMethod_DeleteOrganization<WithStreamedUnaryMethod_CreateRole<WithStreamedUnaryMethod_ListRoles<WithStreamedUnaryMethod_UpdateRole<WithStreamedUnaryMethod_GetOneRole<WithStreamedUnaryMethod_GetRolesByUser<WithStreamedUnaryMethod_GetRolesByOrgUser<WithStreamedUnaryMethod_DeleteRole<WithStreamedUnaryMethod_CreateProject<WithStreamedUnaryMethod_GetOneProject<WithStreamedUnaryMethod_UpdateProject<WithStreamedUnaryMethod_DeleteProject<WithStreamedUnaryMethod_ListProject<WithStreamedUnaryMethod_GetListUserDex<WithStreamedUnaryMethod_GetOneUserDex<WithStreamedUnaryMethod_CheckUser<WithStreamedUnaryMethod_SendVerificationEmail<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_ListCountries<WithStreamedUnaryMethod_GetOneCountry<WithStreamedUnaryMethod_CreateApiKey<WithStreamedUnaryMethod_GetOneApiKey<WithStreamedUnaryMethod_ListApiKey<WithStreamedUnaryMethod_UpdateApiKey<WithStreamedUnaryMethod_DeleteApiKey<WithStreamedUnaryMethod_CreateTokenCCP<WithStreamedUnaryMethod_GetOneTokenCCP<WithStreamedUnaryMethod_GetUsersEmailFilter<WithStreamedUnaryMethod_Logs<WithStreamedUnaryMethod_SaveLogs<WithStreamedUnaryMethod_MFA<WithStreamedUnaryMethod_DeleteUserByProject<WithStreamedUnaryMethod_EditRoleUserByProject<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_ListUser<WithStreamedUnaryMethod_GetOneUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_ListUserPagination<WithStreamedUnaryMethod_SendInvitationUser<WithStreamedUnaryMethod_GetInvitationUser<WithStreamedUnaryMethod_AgreeInvitationUser<WithStreamedUnaryMethod_ListInvitationUser<WithStreamedUnaryMethod_EnableOrDisableMFA<WithStreamedUnaryMethod_CreatePermission<WithStreamedUnaryMethod_ListPermission<WithStreamedUnaryMethod_GetOnePermission<WithStreamedUnaryMethod_UpdatePermission<WithStreamedUnaryMethod_DeletePermission<WithStreamedUnaryMethod_CreateOrganization<WithStreamedUnaryMethod_ListOrganization<WithStreamedUnaryMethod_GetOneOrganization<WithStreamedUnaryMethod_UpdateOrganization<WithStreamedUnaryMethod_DeleteOrganization<WithStreamedUnaryMethod_CreateRole<WithStreamedUnaryMethod_ListRoles<WithStreamedUnaryMethod_UpdateRole<WithStreamedUnaryMethod_GetOneRole<WithStreamedUnaryMethod_GetRolesByUser<WithStreamedUnaryMethod_GetRolesByOrgUser<WithStreamedUnaryMethod_DeleteRole<WithStreamedUnaryMethod_CreateProject<WithStreamedUnaryMethod_GetOneProject<WithStreamedUnaryMethod_UpdateProject<WithStreamedUnaryMethod_DeleteProject<WithStreamedUnaryMethod_ListProject<WithStreamedUnaryMethod_GetListUserDex<WithStreamedUnaryMethod_GetOneUserDex<WithStreamedUnaryMethod_CheckUser<WithStreamedUnaryMethod_SendVerificationEmail<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_ListCountries<WithStreamedUnaryMethod_GetOneCountry<WithStreamedUnaryMethod_CreateApiKey<WithStreamedUnaryMethod_GetOneApiKey<WithStreamedUnaryMethod_ListApiKey<WithStreamedUnaryMethod_UpdateApiKey<WithStreamedUnaryMethod_DeleteApiKey<WithStreamedUnaryMethod_CreateTokenCCP<WithStreamedUnaryMethod_GetOneTokenCCP<WithStreamedUnaryMethod_GetUsersEmailFilter<WithStreamedUnaryMethod_Logs<WithStreamedUnaryMethod_SaveLogs<WithStreamedUnaryMethod_MFA<WithStreamedUnaryMethod_DeleteUserByProject<WithStreamedUnaryMethod_EditRoleUserByProject<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace accounts


#endif  // GRPC_accounts_2fv1alpha1_2faccounts_2eproto__INCLUDED
