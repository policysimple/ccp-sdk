// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: application/v1alpha1/application.proto
#ifndef GRPC_application_2fv1alpha1_2fapplication_2eproto__INCLUDED
#define GRPC_application_2fv1alpha1_2fapplication_2eproto__INCLUDED

#include "application/v1alpha1/application.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace application {
namespace v1alpha1 {

class ApplicationService final {
 public:
  static constexpr char const* service_full_name() {
    return "application.v1alpha1.ApplicationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Application
    virtual ::grpc::Status CreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::application::v1alpha1::CreateApplicationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>> AsyncCreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>>(AsyncCreateApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>> PrepareAsyncCreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>>(PrepareAsyncCreateApplicationRaw(context, request, cq));
    }
    virtual ::grpc::Status ListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::application::v1alpha1::ListApplicationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>> AsyncListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>>(AsyncListApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>> PrepareAsyncListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>>(PrepareAsyncListApplicationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::application::v1alpha1::GetApplicationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>> AsyncGetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>>(AsyncGetApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>> PrepareAsyncGetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>>(PrepareAsyncGetApplicationRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::application::v1alpha1::DeleteApplicationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>> AsyncDeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>>(AsyncDeleteApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>> PrepareAsyncDeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>>(PrepareAsyncDeleteApplicationRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::application::v1alpha1::UpdateApplicationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>> AsyncUpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>>(AsyncUpdateApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>> PrepareAsyncUpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>>(PrepareAsyncUpdateApplicationRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>> AsyncDeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>>(AsyncDeleteApplicationsByOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>> PrepareAsyncDeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>>(PrepareAsyncDeleteApplicationsByOrganizationRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Application
      virtual void CreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>* AsyncCreateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::CreateApplicationResponse>* PrepareAsyncCreateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>* AsyncListApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::ListApplicationResponse>* PrepareAsyncListApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>* AsyncGetApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::GetApplicationResponse>* PrepareAsyncGetApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>* AsyncDeleteApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationResponse>* PrepareAsyncDeleteApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>* AsyncUpdateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::UpdateApplicationResponse>* PrepareAsyncUpdateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* AsyncDeleteApplicationsByOrganizationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* PrepareAsyncDeleteApplicationsByOrganizationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::application::v1alpha1::CreateApplicationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>> AsyncCreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>>(AsyncCreateApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>> PrepareAsyncCreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>>(PrepareAsyncCreateApplicationRaw(context, request, cq));
    }
    ::grpc::Status ListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::application::v1alpha1::ListApplicationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>> AsyncListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>>(AsyncListApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>> PrepareAsyncListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>>(PrepareAsyncListApplicationRaw(context, request, cq));
    }
    ::grpc::Status GetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::application::v1alpha1::GetApplicationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>> AsyncGetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>>(AsyncGetApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>> PrepareAsyncGetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>>(PrepareAsyncGetApplicationRaw(context, request, cq));
    }
    ::grpc::Status DeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::application::v1alpha1::DeleteApplicationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>> AsyncDeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>>(AsyncDeleteApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>> PrepareAsyncDeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>>(PrepareAsyncDeleteApplicationRaw(context, request, cq));
    }
    ::grpc::Status UpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::application::v1alpha1::UpdateApplicationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>> AsyncUpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>>(AsyncUpdateApplicationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>> PrepareAsyncUpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>>(PrepareAsyncUpdateApplicationRaw(context, request, cq));
    }
    ::grpc::Status DeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>> AsyncDeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>>(AsyncDeleteApplicationsByOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>> PrepareAsyncDeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>>(PrepareAsyncDeleteApplicationsByOrganizationRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response, std::function<void(::grpc::Status)>) override;
      void ListApplication(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetApplication(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteApplication(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateApplication(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteApplicationsByOrganization(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>* AsyncCreateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::CreateApplicationResponse>* PrepareAsyncCreateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::CreateApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>* AsyncListApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::ListApplicationResponse>* PrepareAsyncListApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::ListApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>* AsyncGetApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::GetApplicationResponse>* PrepareAsyncGetApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::GetApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>* AsyncDeleteApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationResponse>* PrepareAsyncDeleteApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>* AsyncUpdateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::UpdateApplicationResponse>* PrepareAsyncUpdateApplicationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::UpdateApplicationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* AsyncDeleteApplicationsByOrganizationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* PrepareAsyncDeleteApplicationsByOrganizationRaw(::grpc::ClientContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateApplication_;
    const ::grpc::internal::RpcMethod rpcmethod_ListApplication_;
    const ::grpc::internal::RpcMethod rpcmethod_GetApplication_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteApplication_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateApplication_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteApplicationsByOrganization_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Application
    virtual ::grpc::Status CreateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response);
    virtual ::grpc::Status ListApplication(::grpc::ServerContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response);
    virtual ::grpc::Status GetApplication(::grpc::ServerContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response);
    virtual ::grpc::Status DeleteApplication(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response);
    virtual ::grpc::Status UpdateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response);
    virtual ::grpc::Status DeleteApplicationsByOrganization(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateApplication() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateApplication(::grpc::ServerContext* context, ::application::v1alpha1::CreateApplicationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::CreateApplicationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListApplication() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApplication(::grpc::ServerContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApplication(::grpc::ServerContext* context, ::application::v1alpha1::ListApplicationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::ListApplicationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetApplication() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplication(::grpc::ServerContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetApplication(::grpc::ServerContext* context, ::application::v1alpha1::GetApplicationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::GetApplicationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteApplication() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplication(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApplication(::grpc::ServerContext* context, ::application::v1alpha1::DeleteApplicationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::DeleteApplicationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateApplication() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateApplication(::grpc::ServerContext* context, ::application::v1alpha1::UpdateApplicationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::UpdateApplicationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteApplicationsByOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteApplicationsByOrganization() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteApplicationsByOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplicationsByOrganization(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApplicationsByOrganization(::grpc::ServerContext* context, ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateApplication<WithAsyncMethod_ListApplication<WithAsyncMethod_GetApplication<WithAsyncMethod_DeleteApplication<WithAsyncMethod_UpdateApplication<WithAsyncMethod_DeleteApplicationsByOrganization<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateApplication() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListApplication() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApplication(::grpc::ServerContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetApplication() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplication(::grpc::ServerContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteApplication() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplication(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateApplication() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteApplicationsByOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteApplicationsByOrganization() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteApplicationsByOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplicationsByOrganization(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateApplication() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateApplication(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListApplication() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApplication(::grpc::ServerContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApplication(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetApplication() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplication(::grpc::ServerContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetApplication(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteApplication() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplication(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApplication(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateApplication() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateApplication(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteApplicationsByOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteApplicationsByOrganization() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteApplicationsByOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteApplicationsByOrganization(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteApplicationsByOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateApplication() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::CreateApplicationRequest, ::application::v1alpha1::CreateApplicationResponse>(std::bind(&WithStreamedUnaryMethod_CreateApplication<BaseClass>::StreamedCreateApplication, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::CreateApplicationRequest* request, ::application::v1alpha1::CreateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateApplication(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::CreateApplicationRequest,::application::v1alpha1::CreateApplicationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListApplication() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::ListApplicationRequest, ::application::v1alpha1::ListApplicationResponse>(std::bind(&WithStreamedUnaryMethod_ListApplication<BaseClass>::StreamedListApplication, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListApplication(::grpc::ServerContext* context, const ::application::v1alpha1::ListApplicationRequest* request, ::application::v1alpha1::ListApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListApplication(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::ListApplicationRequest,::application::v1alpha1::ListApplicationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetApplication() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::GetApplicationRequest, ::application::v1alpha1::GetApplicationResponse>(std::bind(&WithStreamedUnaryMethod_GetApplication<BaseClass>::StreamedGetApplication, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetApplication(::grpc::ServerContext* context, const ::application::v1alpha1::GetApplicationRequest* request, ::application::v1alpha1::GetApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetApplication(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::GetApplicationRequest,::application::v1alpha1::GetApplicationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteApplication() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::DeleteApplicationRequest, ::application::v1alpha1::DeleteApplicationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteApplication<BaseClass>::StreamedDeleteApplication, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteApplication(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationRequest* request, ::application::v1alpha1::DeleteApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteApplication(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::DeleteApplicationRequest,::application::v1alpha1::DeleteApplicationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateApplication : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateApplication() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::UpdateApplicationRequest, ::application::v1alpha1::UpdateApplicationResponse>(std::bind(&WithStreamedUnaryMethod_UpdateApplication<BaseClass>::StreamedUpdateApplication, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateApplication() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateApplication(::grpc::ServerContext* context, const ::application::v1alpha1::UpdateApplicationRequest* request, ::application::v1alpha1::UpdateApplicationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateApplication(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::UpdateApplicationRequest,::application::v1alpha1::UpdateApplicationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteApplicationsByOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteApplicationsByOrganization() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::application::v1alpha1::DeleteApplicationsByOrganizationRequest, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteApplicationsByOrganization<BaseClass>::StreamedDeleteApplicationsByOrganization, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteApplicationsByOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteApplicationsByOrganization(::grpc::ServerContext* context, const ::application::v1alpha1::DeleteApplicationsByOrganizationRequest* request, ::application::v1alpha1::DeleteApplicationsByOrganizationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteApplicationsByOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::application::v1alpha1::DeleteApplicationsByOrganizationRequest,::application::v1alpha1::DeleteApplicationsByOrganizationResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateApplication<WithStreamedUnaryMethod_ListApplication<WithStreamedUnaryMethod_GetApplication<WithStreamedUnaryMethod_DeleteApplication<WithStreamedUnaryMethod_UpdateApplication<WithStreamedUnaryMethod_DeleteApplicationsByOrganization<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateApplication<WithStreamedUnaryMethod_ListApplication<WithStreamedUnaryMethod_GetApplication<WithStreamedUnaryMethod_DeleteApplication<WithStreamedUnaryMethod_UpdateApplication<WithStreamedUnaryMethod_DeleteApplicationsByOrganization<Service > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace application


#endif  // GRPC_application_2fv1alpha1_2fapplication_2eproto__INCLUDED
