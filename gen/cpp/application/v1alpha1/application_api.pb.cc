// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: application/v1alpha1/application_api.proto

#include "application/v1alpha1/application_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace application {
namespace v1alpha1 {
constexpr DeleteApplicationsByIntegrationRequest::DeleteApplicationsByIntegrationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : integration_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteApplicationsByIntegrationRequestDefaultTypeInternal {
  constexpr DeleteApplicationsByIntegrationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationsByIntegrationRequestDefaultTypeInternal() {}
  union {
    DeleteApplicationsByIntegrationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationsByIntegrationRequestDefaultTypeInternal _DeleteApplicationsByIntegrationRequest_default_instance_;
constexpr DeleteApplicationsByIntegrationResponse::DeleteApplicationsByIntegrationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteApplicationsByIntegrationResponseDefaultTypeInternal {
  constexpr DeleteApplicationsByIntegrationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationsByIntegrationResponseDefaultTypeInternal() {}
  union {
    DeleteApplicationsByIntegrationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationsByIntegrationResponseDefaultTypeInternal _DeleteApplicationsByIntegrationResponse_default_instance_;
constexpr CreateApplicationRequest::CreateApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : application_(nullptr){}
struct CreateApplicationRequestDefaultTypeInternal {
  constexpr CreateApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateApplicationRequestDefaultTypeInternal() {}
  union {
    CreateApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateApplicationRequestDefaultTypeInternal _CreateApplicationRequest_default_instance_;
constexpr CreateApplicationResponse::CreateApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateApplicationResponseDefaultTypeInternal {
  constexpr CreateApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateApplicationResponseDefaultTypeInternal() {}
  union {
    CreateApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateApplicationResponseDefaultTypeInternal _CreateApplicationResponse_default_instance_;
constexpr ListApplicationRequest::ListApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListApplicationRequestDefaultTypeInternal {
  constexpr ListApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListApplicationRequestDefaultTypeInternal() {}
  union {
    ListApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListApplicationRequestDefaultTypeInternal _ListApplicationRequest_default_instance_;
constexpr ListApplicationResponse::ListApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applications_(){}
struct ListApplicationResponseDefaultTypeInternal {
  constexpr ListApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListApplicationResponseDefaultTypeInternal() {}
  union {
    ListApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListApplicationResponseDefaultTypeInternal _ListApplicationResponse_default_instance_;
constexpr GetApplicationRequest::GetApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetApplicationRequestDefaultTypeInternal {
  constexpr GetApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationRequestDefaultTypeInternal() {}
  union {
    GetApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationRequestDefaultTypeInternal _GetApplicationRequest_default_instance_;
constexpr GetApplicationResponse::GetApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : application_(nullptr){}
struct GetApplicationResponseDefaultTypeInternal {
  constexpr GetApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetApplicationResponseDefaultTypeInternal() {}
  union {
    GetApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetApplicationResponseDefaultTypeInternal _GetApplicationResponse_default_instance_;
constexpr DeleteApplicationRequest::DeleteApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , integration_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteApplicationRequestDefaultTypeInternal {
  constexpr DeleteApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationRequestDefaultTypeInternal() {}
  union {
    DeleteApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationRequestDefaultTypeInternal _DeleteApplicationRequest_default_instance_;
constexpr DeleteApplicationResponse::DeleteApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteApplicationResponseDefaultTypeInternal {
  constexpr DeleteApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteApplicationResponseDefaultTypeInternal() {}
  union {
    DeleteApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteApplicationResponseDefaultTypeInternal _DeleteApplicationResponse_default_instance_;
constexpr UpdateApplicationRequest::UpdateApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , application_(nullptr){}
struct UpdateApplicationRequestDefaultTypeInternal {
  constexpr UpdateApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateApplicationRequestDefaultTypeInternal() {}
  union {
    UpdateApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateApplicationRequestDefaultTypeInternal _UpdateApplicationRequest_default_instance_;
constexpr UpdateApplicationResponse::UpdateApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateApplicationResponseDefaultTypeInternal {
  constexpr UpdateApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateApplicationResponseDefaultTypeInternal() {}
  union {
    UpdateApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateApplicationResponseDefaultTypeInternal _UpdateApplicationResponse_default_instance_;
constexpr ListApplicationsByOrganizationRequest::ListApplicationsByOrganizationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListApplicationsByOrganizationRequestDefaultTypeInternal {
  constexpr ListApplicationsByOrganizationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListApplicationsByOrganizationRequestDefaultTypeInternal() {}
  union {
    ListApplicationsByOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListApplicationsByOrganizationRequestDefaultTypeInternal _ListApplicationsByOrganizationRequest_default_instance_;
constexpr ListApplicationsByOrganizationResponse::ListApplicationsByOrganizationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applications_(){}
struct ListApplicationsByOrganizationResponseDefaultTypeInternal {
  constexpr ListApplicationsByOrganizationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListApplicationsByOrganizationResponseDefaultTypeInternal() {}
  union {
    ListApplicationsByOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListApplicationsByOrganizationResponseDefaultTypeInternal _ListApplicationsByOrganizationResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace application
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_application_2fv1alpha1_2fapplication_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_application_2fv1alpha1_2fapplication_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_application_2fv1alpha1_2fapplication_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationsByIntegrationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationsByIntegrationRequest, integration_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationsByIntegrationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationsByIntegrationResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::CreateApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::CreateApplicationRequest, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::CreateApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::CreateApplicationResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::CreateApplicationResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationRequest, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationResponse, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::GetApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::GetApplicationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::GetApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::GetApplicationResponse, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, id_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, integration_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::DeleteApplicationResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::UpdateApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::UpdateApplicationRequest, id_),
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::UpdateApplicationRequest, application_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::UpdateApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::UpdateApplicationResponse, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationsByOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationsByOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationsByOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::application::v1alpha1::ListApplicationsByOrganizationResponse, applications_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::application::v1alpha1::DeleteApplicationsByIntegrationRequest)},
  { 6, -1, sizeof(::application::v1alpha1::DeleteApplicationsByIntegrationResponse)},
  { 12, -1, sizeof(::application::v1alpha1::CreateApplicationRequest)},
  { 18, -1, sizeof(::application::v1alpha1::CreateApplicationResponse)},
  { 25, -1, sizeof(::application::v1alpha1::ListApplicationRequest)},
  { 31, -1, sizeof(::application::v1alpha1::ListApplicationResponse)},
  { 37, -1, sizeof(::application::v1alpha1::GetApplicationRequest)},
  { 43, -1, sizeof(::application::v1alpha1::GetApplicationResponse)},
  { 49, -1, sizeof(::application::v1alpha1::DeleteApplicationRequest)},
  { 59, -1, sizeof(::application::v1alpha1::DeleteApplicationResponse)},
  { 65, -1, sizeof(::application::v1alpha1::UpdateApplicationRequest)},
  { 72, -1, sizeof(::application::v1alpha1::UpdateApplicationResponse)},
  { 78, -1, sizeof(::application::v1alpha1::ListApplicationsByOrganizationRequest)},
  { 84, -1, sizeof(::application::v1alpha1::ListApplicationsByOrganizationResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_DeleteApplicationsByIntegrationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_DeleteApplicationsByIntegrationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_CreateApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_CreateApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_ListApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_ListApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_GetApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_GetApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_DeleteApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_DeleteApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_UpdateApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_UpdateApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_ListApplicationsByOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::application::v1alpha1::_ListApplicationsByOrganizationResponse_default_instance_),
};

const char descriptor_table_protodef_application_2fv1alpha1_2fapplication_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*application/v1alpha1/application_api.p"
  "roto\022\024application.v1alpha1\032&application/"
  "v1alpha1/application.proto\"O\n&DeleteAppl"
  "icationsByIntegrationRequest\022%\n\016integrat"
  "ion_id\030\001 \001(\tR\rintegrationId\";\n\'DeleteApp"
  "licationsByIntegrationResponse\022\020\n\003msg\030\001 "
  "\001(\tR\003msg\"_\n\030CreateApplicationRequest\022C\n\013"
  "application\030\001 \001(\0132!.application.v1alpha1"
  ".ApplicationR\013application\"=\n\031CreateAppli"
  "cationResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\016\n\002id\030\003"
  " \001(\tR\002id\"7\n\026ListApplicationRequest\022\035\n\npr"
  "oject_id\030\001 \001(\tR\tprojectId\"d\n\027ListApplica"
  "tionResponse\022I\n\014applications\030\001 \003(\0132%.app"
  "lication.v1alpha1.ListApplicationR\014appli"
  "cations\"\'\n\025GetApplicationRequest\022\016\n\002id\030\001"
  " \001(\tR\002id\"]\n\026GetApplicationResponse\022C\n\013ap"
  "plication\030\001 \001(\0132!.application.v1alpha1.A"
  "pplicationR\013application\"\250\001\n\030DeleteApplic"
  "ationRequest\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001"
  "(\tR\004name\022 \n\013integration\030\003 \001(\tR\013integrati"
  "on\022\035\n\nproject_id\030\004 \001(\tR\tprojectId\022\'\n\017org"
  "anization_id\030\005 \001(\tR\016organizationId\"-\n\031De"
  "leteApplicationResponse\022\020\n\003msg\030\001 \001(\tR\003ms"
  "g\"|\n\030UpdateApplicationRequest\022\016\n\002id\030\001 \001("
  "\tR\002id\022P\n\013application\030\002 \001(\0132..application"
  ".v1alpha1.CreateApplicationRequestR\013appl"
  "ication\"-\n\031UpdateApplicationResponse\022\020\n\003"
  "msg\030\001 \001(\tR\003msg\"P\n%ListApplicationsByOrga"
  "nizationRequest\022\'\n\017organization_id\030\001 \001(\t"
  "R\016organizationId\"o\n&ListApplicationsByOr"
  "ganizationResponse\022E\n\014applications\030\001 \003(\013"
  "2!.application.v1alpha1.ApplicationR\014app"
  "lications2\222\007\n\022ApplicationService\022t\n\021Crea"
  "teApplication\022..application.v1alpha1.Cre"
  "ateApplicationRequest\032/.application.v1al"
  "pha1.CreateApplicationResponse\022n\n\017ListAp"
  "plication\022,.application.v1alpha1.ListApp"
  "licationRequest\032-.application.v1alpha1.L"
  "istApplicationResponse\022k\n\016GetApplication"
  "\022+.application.v1alpha1.GetApplicationRe"
  "quest\032,.application.v1alpha1.GetApplicat"
  "ionResponse\022t\n\021DeleteApplication\022..appli"
  "cation.v1alpha1.DeleteApplicationRequest"
  "\032/.application.v1alpha1.DeleteApplicatio"
  "nResponse\022t\n\021UpdateApplication\022..applica"
  "tion.v1alpha1.UpdateApplicationRequest\032/"
  ".application.v1alpha1.UpdateApplicationR"
  "esponse\022\236\001\n\037DeleteApplicationsByIntegrat"
  "ion\022<.application.v1alpha1.DeleteApplica"
  "tionsByIntegrationRequest\032=.application."
  "v1alpha1.DeleteApplicationsByIntegration"
  "Response\022\233\001\n\036ListApplicationsByOrganizat"
  "ion\022;.application.v1alpha1.ListApplicati"
  "onsByOrganizationRequest\032<.application.v"
  "1alpha1.ListApplicationsByOrganizationRe"
  "sponseB7Z5github.com/cuemby/ccp-sdk/gen/"
  "go/application/v1alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_deps[1] = {
  &::descriptor_table_application_2fv1alpha1_2fapplication_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto = {
  false, false, 2271, descriptor_table_protodef_application_2fv1alpha1_2fapplication_5fapi_2eproto, "application/v1alpha1/application_api.proto", 
  &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once, descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_deps, 1, 14,
  schemas, file_default_instances, TableStruct_application_2fv1alpha1_2fapplication_5fapi_2eproto::offsets,
  file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto, file_level_enum_descriptors_application_2fv1alpha1_2fapplication_5fapi_2eproto, file_level_service_descriptors_application_2fv1alpha1_2fapplication_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter() {
  return &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_application_2fv1alpha1_2fapplication_5fapi_2eproto(&descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto);
namespace application {
namespace v1alpha1 {

// ===================================================================

class DeleteApplicationsByIntegrationRequest::_Internal {
 public:
};

DeleteApplicationsByIntegrationRequest::DeleteApplicationsByIntegrationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
}
DeleteApplicationsByIntegrationRequest::DeleteApplicationsByIntegrationRequest(const DeleteApplicationsByIntegrationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_integration_id().empty()) {
    integration_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_integration_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
}

inline void DeleteApplicationsByIntegrationRequest::SharedCtor() {
integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationsByIntegrationRequest::~DeleteApplicationsByIntegrationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteApplicationsByIntegrationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  integration_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationsByIntegrationRequest::ArenaDtor(void* object) {
  DeleteApplicationsByIntegrationRequest* _this = reinterpret_cast< DeleteApplicationsByIntegrationRequest* >(object);
  (void)_this;
}
void DeleteApplicationsByIntegrationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationsByIntegrationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationsByIntegrationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  integration_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationsByIntegrationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string integration_id = 1 [json_name = "integrationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_integration_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationsByIntegrationRequest.integration_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationsByIntegrationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string integration_id = 1 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_integration_id().data(), static_cast<int>(this->_internal_integration_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationsByIntegrationRequest.integration_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_integration_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  return target;
}

size_t DeleteApplicationsByIntegrationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string integration_id = 1 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_integration_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteApplicationsByIntegrationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteApplicationsByIntegrationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteApplicationsByIntegrationRequest::GetClassData() const { return &_class_data_; }

void DeleteApplicationsByIntegrationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteApplicationsByIntegrationRequest *>(to)->MergeFrom(
      static_cast<const DeleteApplicationsByIntegrationRequest &>(from));
}


void DeleteApplicationsByIntegrationRequest::MergeFrom(const DeleteApplicationsByIntegrationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_integration_id().empty()) {
    _internal_set_integration_id(from._internal_integration_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteApplicationsByIntegrationRequest::CopyFrom(const DeleteApplicationsByIntegrationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.DeleteApplicationsByIntegrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationsByIntegrationRequest::IsInitialized() const {
  return true;
}

void DeleteApplicationsByIntegrationRequest::InternalSwap(DeleteApplicationsByIntegrationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &integration_id_, GetArenaForAllocation(),
      &other->integration_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationsByIntegrationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[0]);
}

// ===================================================================

class DeleteApplicationsByIntegrationResponse::_Internal {
 public:
};

DeleteApplicationsByIntegrationResponse::DeleteApplicationsByIntegrationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
}
DeleteApplicationsByIntegrationResponse::DeleteApplicationsByIntegrationResponse(const DeleteApplicationsByIntegrationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
}

inline void DeleteApplicationsByIntegrationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationsByIntegrationResponse::~DeleteApplicationsByIntegrationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteApplicationsByIntegrationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationsByIntegrationResponse::ArenaDtor(void* object) {
  DeleteApplicationsByIntegrationResponse* _this = reinterpret_cast< DeleteApplicationsByIntegrationResponse* >(object);
  (void)_this;
}
void DeleteApplicationsByIntegrationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationsByIntegrationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationsByIntegrationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationsByIntegrationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationsByIntegrationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationsByIntegrationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationsByIntegrationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  return target;
}

size_t DeleteApplicationsByIntegrationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteApplicationsByIntegrationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteApplicationsByIntegrationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteApplicationsByIntegrationResponse::GetClassData() const { return &_class_data_; }

void DeleteApplicationsByIntegrationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteApplicationsByIntegrationResponse *>(to)->MergeFrom(
      static_cast<const DeleteApplicationsByIntegrationResponse &>(from));
}


void DeleteApplicationsByIntegrationResponse::MergeFrom(const DeleteApplicationsByIntegrationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteApplicationsByIntegrationResponse::CopyFrom(const DeleteApplicationsByIntegrationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.DeleteApplicationsByIntegrationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationsByIntegrationResponse::IsInitialized() const {
  return true;
}

void DeleteApplicationsByIntegrationResponse::InternalSwap(DeleteApplicationsByIntegrationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationsByIntegrationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[1]);
}

// ===================================================================

class CreateApplicationRequest::_Internal {
 public:
  static const ::application::v1alpha1::Application& application(const CreateApplicationRequest* msg);
};

const ::application::v1alpha1::Application&
CreateApplicationRequest::_Internal::application(const CreateApplicationRequest* msg) {
  return *msg->application_;
}
void CreateApplicationRequest::clear_application() {
  if (GetArenaForAllocation() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
}
CreateApplicationRequest::CreateApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.CreateApplicationRequest)
}
CreateApplicationRequest::CreateApplicationRequest(const CreateApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_application()) {
    application_ = new ::application::v1alpha1::Application(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.CreateApplicationRequest)
}

inline void CreateApplicationRequest::SharedCtor() {
application_ = nullptr;
}

CreateApplicationRequest::~CreateApplicationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.CreateApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete application_;
}

void CreateApplicationRequest::ArenaDtor(void* object) {
  CreateApplicationRequest* _this = reinterpret_cast< CreateApplicationRequest* >(object);
  (void)_this;
}
void CreateApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.CreateApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .application.v1alpha1.Application application = 1 [json_name = "application"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.CreateApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .application.v1alpha1.Application application = 1 [json_name = "application"];
  if (this->_internal_has_application()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.CreateApplicationRequest)
  return target;
}

size_t CreateApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.CreateApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .application.v1alpha1.Application application = 1 [json_name = "application"];
  if (this->_internal_has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateApplicationRequest::GetClassData() const { return &_class_data_; }

void CreateApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateApplicationRequest *>(to)->MergeFrom(
      static_cast<const CreateApplicationRequest &>(from));
}


void CreateApplicationRequest::MergeFrom(const CreateApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.CreateApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_application()) {
    _internal_mutable_application()->::application::v1alpha1::Application::MergeFrom(from._internal_application());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateApplicationRequest::CopyFrom(const CreateApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.CreateApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationRequest::IsInitialized() const {
  return true;
}

void CreateApplicationRequest::InternalSwap(CreateApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[2]);
}

// ===================================================================

class CreateApplicationResponse::_Internal {
 public:
};

CreateApplicationResponse::CreateApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.CreateApplicationResponse)
}
CreateApplicationResponse::CreateApplicationResponse(const CreateApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.CreateApplicationResponse)
}

inline void CreateApplicationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateApplicationResponse::~CreateApplicationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.CreateApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateApplicationResponse::ArenaDtor(void* object) {
  CreateApplicationResponse* _this = reinterpret_cast< CreateApplicationResponse* >(object);
  (void)_this;
}
void CreateApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.CreateApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.CreateApplicationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3 [json_name = "id"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.CreateApplicationResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.CreateApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.CreateApplicationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string id = 3 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.CreateApplicationResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.CreateApplicationResponse)
  return target;
}

size_t CreateApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.CreateApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string id = 3 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateApplicationResponse::GetClassData() const { return &_class_data_; }

void CreateApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateApplicationResponse *>(to)->MergeFrom(
      static_cast<const CreateApplicationResponse &>(from));
}


void CreateApplicationResponse::MergeFrom(const CreateApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.CreateApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateApplicationResponse::CopyFrom(const CreateApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.CreateApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateApplicationResponse::IsInitialized() const {
  return true;
}

void CreateApplicationResponse::InternalSwap(CreateApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[3]);
}

// ===================================================================

class ListApplicationRequest::_Internal {
 public:
};

ListApplicationRequest::ListApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.ListApplicationRequest)
}
ListApplicationRequest::ListApplicationRequest(const ListApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.ListApplicationRequest)
}

inline void ListApplicationRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListApplicationRequest::~ListApplicationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.ListApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListApplicationRequest::ArenaDtor(void* object) {
  ListApplicationRequest* _this = reinterpret_cast< ListApplicationRequest* >(object);
  (void)_this;
}
void ListApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.ListApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string project_id = 1 [json_name = "projectId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.ListApplicationRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.ListApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.ListApplicationRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.ListApplicationRequest)
  return target;
}

size_t ListApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.ListApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListApplicationRequest::GetClassData() const { return &_class_data_; }

void ListApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListApplicationRequest *>(to)->MergeFrom(
      static_cast<const ListApplicationRequest &>(from));
}


void ListApplicationRequest::MergeFrom(const ListApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.ListApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListApplicationRequest::CopyFrom(const ListApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.ListApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListApplicationRequest::IsInitialized() const {
  return true;
}

void ListApplicationRequest::InternalSwap(ListApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[4]);
}

// ===================================================================

class ListApplicationResponse::_Internal {
 public:
};

void ListApplicationResponse::clear_applications() {
  applications_.Clear();
}
ListApplicationResponse::ListApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  applications_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.ListApplicationResponse)
}
ListApplicationResponse::ListApplicationResponse(const ListApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.ListApplicationResponse)
}

inline void ListApplicationResponse::SharedCtor() {
}

ListApplicationResponse::~ListApplicationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.ListApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListApplicationResponse::ArenaDtor(void* object) {
  ListApplicationResponse* _this = reinterpret_cast< ListApplicationResponse* >(object);
  (void)_this;
}
void ListApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.ListApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .application.v1alpha1.ListApplication applications = 1 [json_name = "applications"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.ListApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .application.v1alpha1.ListApplication applications = 1 [json_name = "applications"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_applications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.ListApplicationResponse)
  return target;
}

size_t ListApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.ListApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .application.v1alpha1.ListApplication applications = 1 [json_name = "applications"];
  total_size += 1UL * this->_internal_applications_size();
  for (const auto& msg : this->applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListApplicationResponse::GetClassData() const { return &_class_data_; }

void ListApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListApplicationResponse *>(to)->MergeFrom(
      static_cast<const ListApplicationResponse &>(from));
}


void ListApplicationResponse::MergeFrom(const ListApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.ListApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListApplicationResponse::CopyFrom(const ListApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.ListApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListApplicationResponse::IsInitialized() const {
  return true;
}

void ListApplicationResponse::InternalSwap(ListApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  applications_.InternalSwap(&other->applications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[5]);
}

// ===================================================================

class GetApplicationRequest::_Internal {
 public:
};

GetApplicationRequest::GetApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.GetApplicationRequest)
}
GetApplicationRequest::GetApplicationRequest(const GetApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.GetApplicationRequest)
}

inline void GetApplicationRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetApplicationRequest::~GetApplicationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.GetApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetApplicationRequest::ArenaDtor(void* object) {
  GetApplicationRequest* _this = reinterpret_cast< GetApplicationRequest* >(object);
  (void)_this;
}
void GetApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.GetApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.GetApplicationRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.GetApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.GetApplicationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.GetApplicationRequest)
  return target;
}

size_t GetApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.GetApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetApplicationRequest::GetClassData() const { return &_class_data_; }

void GetApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetApplicationRequest *>(to)->MergeFrom(
      static_cast<const GetApplicationRequest &>(from));
}


void GetApplicationRequest::MergeFrom(const GetApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.GetApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetApplicationRequest::CopyFrom(const GetApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.GetApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationRequest::IsInitialized() const {
  return true;
}

void GetApplicationRequest::InternalSwap(GetApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[6]);
}

// ===================================================================

class GetApplicationResponse::_Internal {
 public:
  static const ::application::v1alpha1::Application& application(const GetApplicationResponse* msg);
};

const ::application::v1alpha1::Application&
GetApplicationResponse::_Internal::application(const GetApplicationResponse* msg) {
  return *msg->application_;
}
void GetApplicationResponse::clear_application() {
  if (GetArenaForAllocation() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
}
GetApplicationResponse::GetApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.GetApplicationResponse)
}
GetApplicationResponse::GetApplicationResponse(const GetApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_application()) {
    application_ = new ::application::v1alpha1::Application(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.GetApplicationResponse)
}

inline void GetApplicationResponse::SharedCtor() {
application_ = nullptr;
}

GetApplicationResponse::~GetApplicationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.GetApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete application_;
}

void GetApplicationResponse::ArenaDtor(void* object) {
  GetApplicationResponse* _this = reinterpret_cast< GetApplicationResponse* >(object);
  (void)_this;
}
void GetApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.GetApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .application.v1alpha1.Application application = 1 [json_name = "application"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.GetApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .application.v1alpha1.Application application = 1 [json_name = "application"];
  if (this->_internal_has_application()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.GetApplicationResponse)
  return target;
}

size_t GetApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.GetApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .application.v1alpha1.Application application = 1 [json_name = "application"];
  if (this->_internal_has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetApplicationResponse::GetClassData() const { return &_class_data_; }

void GetApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetApplicationResponse *>(to)->MergeFrom(
      static_cast<const GetApplicationResponse &>(from));
}


void GetApplicationResponse::MergeFrom(const GetApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.GetApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_application()) {
    _internal_mutable_application()->::application::v1alpha1::Application::MergeFrom(from._internal_application());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetApplicationResponse::CopyFrom(const GetApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.GetApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationResponse::IsInitialized() const {
  return true;
}

void GetApplicationResponse::InternalSwap(GetApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[7]);
}

// ===================================================================

class DeleteApplicationRequest::_Internal {
 public:
};

DeleteApplicationRequest::DeleteApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.DeleteApplicationRequest)
}
DeleteApplicationRequest::DeleteApplicationRequest(const DeleteApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  integration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_integration().empty()) {
    integration_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_integration(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.DeleteApplicationRequest)
}

inline void DeleteApplicationRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
integration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationRequest::~DeleteApplicationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.DeleteApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  integration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationRequest::ArenaDtor(void* object) {
  DeleteApplicationRequest* _this = reinterpret_cast< DeleteApplicationRequest* >(object);
  (void)_this;
}
void DeleteApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.DeleteApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  integration_.ClearToEmpty();
  project_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string integration = 3 [json_name = "integration"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_integration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationRequest.integration"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 4 [json_name = "projectId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 5 [json_name = "organizationId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.DeleteApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string integration = 3 [json_name = "integration"];
  if (!this->_internal_integration().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_integration().data(), static_cast<int>(this->_internal_integration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationRequest.integration");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_integration(), target);
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_project_id(), target);
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.DeleteApplicationRequest)
  return target;
}

size_t DeleteApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.DeleteApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string integration = 3 [json_name = "integration"];
  if (!this->_internal_integration().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_integration());
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteApplicationRequest::GetClassData() const { return &_class_data_; }

void DeleteApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteApplicationRequest *>(to)->MergeFrom(
      static_cast<const DeleteApplicationRequest &>(from));
}


void DeleteApplicationRequest::MergeFrom(const DeleteApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.DeleteApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_integration().empty()) {
    _internal_set_integration(from._internal_integration());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteApplicationRequest::CopyFrom(const DeleteApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.DeleteApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationRequest::IsInitialized() const {
  return true;
}

void DeleteApplicationRequest::InternalSwap(DeleteApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &integration_, GetArenaForAllocation(),
      &other->integration_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[8]);
}

// ===================================================================

class DeleteApplicationResponse::_Internal {
 public:
};

DeleteApplicationResponse::DeleteApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.DeleteApplicationResponse)
}
DeleteApplicationResponse::DeleteApplicationResponse(const DeleteApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.DeleteApplicationResponse)
}

inline void DeleteApplicationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteApplicationResponse::~DeleteApplicationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.DeleteApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteApplicationResponse::ArenaDtor(void* object) {
  DeleteApplicationResponse* _this = reinterpret_cast< DeleteApplicationResponse* >(object);
  (void)_this;
}
void DeleteApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.DeleteApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.DeleteApplicationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.DeleteApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.DeleteApplicationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.DeleteApplicationResponse)
  return target;
}

size_t DeleteApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.DeleteApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteApplicationResponse::GetClassData() const { return &_class_data_; }

void DeleteApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteApplicationResponse *>(to)->MergeFrom(
      static_cast<const DeleteApplicationResponse &>(from));
}


void DeleteApplicationResponse::MergeFrom(const DeleteApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.DeleteApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteApplicationResponse::CopyFrom(const DeleteApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.DeleteApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteApplicationResponse::IsInitialized() const {
  return true;
}

void DeleteApplicationResponse::InternalSwap(DeleteApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[9]);
}

// ===================================================================

class UpdateApplicationRequest::_Internal {
 public:
  static const ::application::v1alpha1::CreateApplicationRequest& application(const UpdateApplicationRequest* msg);
};

const ::application::v1alpha1::CreateApplicationRequest&
UpdateApplicationRequest::_Internal::application(const UpdateApplicationRequest* msg) {
  return *msg->application_;
}
UpdateApplicationRequest::UpdateApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.UpdateApplicationRequest)
}
UpdateApplicationRequest::UpdateApplicationRequest(const UpdateApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_application()) {
    application_ = new ::application::v1alpha1::CreateApplicationRequest(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.UpdateApplicationRequest)
}

inline void UpdateApplicationRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
application_ = nullptr;
}

UpdateApplicationRequest::~UpdateApplicationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.UpdateApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete application_;
}

void UpdateApplicationRequest::ArenaDtor(void* object) {
  UpdateApplicationRequest* _this = reinterpret_cast< UpdateApplicationRequest* >(object);
  (void)_this;
}
void UpdateApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.UpdateApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.UpdateApplicationRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .application.v1alpha1.CreateApplicationRequest application = 2 [json_name = "application"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.UpdateApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.UpdateApplicationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .application.v1alpha1.CreateApplicationRequest application = 2 [json_name = "application"];
  if (this->_internal_has_application()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.UpdateApplicationRequest)
  return target;
}

size_t UpdateApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.UpdateApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .application.v1alpha1.CreateApplicationRequest application = 2 [json_name = "application"];
  if (this->_internal_has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateApplicationRequest::GetClassData() const { return &_class_data_; }

void UpdateApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateApplicationRequest *>(to)->MergeFrom(
      static_cast<const UpdateApplicationRequest &>(from));
}


void UpdateApplicationRequest::MergeFrom(const UpdateApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.UpdateApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_application()) {
    _internal_mutable_application()->::application::v1alpha1::CreateApplicationRequest::MergeFrom(from._internal_application());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateApplicationRequest::CopyFrom(const UpdateApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.UpdateApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationRequest::IsInitialized() const {
  return true;
}

void UpdateApplicationRequest::InternalSwap(UpdateApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[10]);
}

// ===================================================================

class UpdateApplicationResponse::_Internal {
 public:
};

UpdateApplicationResponse::UpdateApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.UpdateApplicationResponse)
}
UpdateApplicationResponse::UpdateApplicationResponse(const UpdateApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.UpdateApplicationResponse)
}

inline void UpdateApplicationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateApplicationResponse::~UpdateApplicationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.UpdateApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateApplicationResponse::ArenaDtor(void* object) {
  UpdateApplicationResponse* _this = reinterpret_cast< UpdateApplicationResponse* >(object);
  (void)_this;
}
void UpdateApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.UpdateApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.UpdateApplicationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.UpdateApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.UpdateApplicationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.UpdateApplicationResponse)
  return target;
}

size_t UpdateApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.UpdateApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateApplicationResponse::GetClassData() const { return &_class_data_; }

void UpdateApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateApplicationResponse *>(to)->MergeFrom(
      static_cast<const UpdateApplicationResponse &>(from));
}


void UpdateApplicationResponse::MergeFrom(const UpdateApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.UpdateApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateApplicationResponse::CopyFrom(const UpdateApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.UpdateApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateApplicationResponse::IsInitialized() const {
  return true;
}

void UpdateApplicationResponse::InternalSwap(UpdateApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[11]);
}

// ===================================================================

class ListApplicationsByOrganizationRequest::_Internal {
 public:
};

ListApplicationsByOrganizationRequest::ListApplicationsByOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.ListApplicationsByOrganizationRequest)
}
ListApplicationsByOrganizationRequest::ListApplicationsByOrganizationRequest(const ListApplicationsByOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.ListApplicationsByOrganizationRequest)
}

inline void ListApplicationsByOrganizationRequest::SharedCtor() {
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListApplicationsByOrganizationRequest::~ListApplicationsByOrganizationRequest() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.ListApplicationsByOrganizationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListApplicationsByOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListApplicationsByOrganizationRequest::ArenaDtor(void* object) {
  ListApplicationsByOrganizationRequest* _this = reinterpret_cast< ListApplicationsByOrganizationRequest* >(object);
  (void)_this;
}
void ListApplicationsByOrganizationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListApplicationsByOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListApplicationsByOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.ListApplicationsByOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListApplicationsByOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "application.v1alpha1.ListApplicationsByOrganizationRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListApplicationsByOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.ListApplicationsByOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "application.v1alpha1.ListApplicationsByOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.ListApplicationsByOrganizationRequest)
  return target;
}

size_t ListApplicationsByOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.ListApplicationsByOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListApplicationsByOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListApplicationsByOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListApplicationsByOrganizationRequest::GetClassData() const { return &_class_data_; }

void ListApplicationsByOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListApplicationsByOrganizationRequest *>(to)->MergeFrom(
      static_cast<const ListApplicationsByOrganizationRequest &>(from));
}


void ListApplicationsByOrganizationRequest::MergeFrom(const ListApplicationsByOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.ListApplicationsByOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListApplicationsByOrganizationRequest::CopyFrom(const ListApplicationsByOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.ListApplicationsByOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListApplicationsByOrganizationRequest::IsInitialized() const {
  return true;
}

void ListApplicationsByOrganizationRequest::InternalSwap(ListApplicationsByOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListApplicationsByOrganizationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[12]);
}

// ===================================================================

class ListApplicationsByOrganizationResponse::_Internal {
 public:
};

void ListApplicationsByOrganizationResponse::clear_applications() {
  applications_.Clear();
}
ListApplicationsByOrganizationResponse::ListApplicationsByOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  applications_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:application.v1alpha1.ListApplicationsByOrganizationResponse)
}
ListApplicationsByOrganizationResponse::ListApplicationsByOrganizationResponse(const ListApplicationsByOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:application.v1alpha1.ListApplicationsByOrganizationResponse)
}

inline void ListApplicationsByOrganizationResponse::SharedCtor() {
}

ListApplicationsByOrganizationResponse::~ListApplicationsByOrganizationResponse() {
  // @@protoc_insertion_point(destructor:application.v1alpha1.ListApplicationsByOrganizationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListApplicationsByOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListApplicationsByOrganizationResponse::ArenaDtor(void* object) {
  ListApplicationsByOrganizationResponse* _this = reinterpret_cast< ListApplicationsByOrganizationResponse* >(object);
  (void)_this;
}
void ListApplicationsByOrganizationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListApplicationsByOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListApplicationsByOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:application.v1alpha1.ListApplicationsByOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListApplicationsByOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .application.v1alpha1.Application applications = 1 [json_name = "applications"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListApplicationsByOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:application.v1alpha1.ListApplicationsByOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .application.v1alpha1.Application applications = 1 [json_name = "applications"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_applications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:application.v1alpha1.ListApplicationsByOrganizationResponse)
  return target;
}

size_t ListApplicationsByOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:application.v1alpha1.ListApplicationsByOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .application.v1alpha1.Application applications = 1 [json_name = "applications"];
  total_size += 1UL * this->_internal_applications_size();
  for (const auto& msg : this->applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListApplicationsByOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListApplicationsByOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListApplicationsByOrganizationResponse::GetClassData() const { return &_class_data_; }

void ListApplicationsByOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListApplicationsByOrganizationResponse *>(to)->MergeFrom(
      static_cast<const ListApplicationsByOrganizationResponse &>(from));
}


void ListApplicationsByOrganizationResponse::MergeFrom(const ListApplicationsByOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:application.v1alpha1.ListApplicationsByOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListApplicationsByOrganizationResponse::CopyFrom(const ListApplicationsByOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:application.v1alpha1.ListApplicationsByOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListApplicationsByOrganizationResponse::IsInitialized() const {
  return true;
}

void ListApplicationsByOrganizationResponse::InternalSwap(ListApplicationsByOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  applications_.InternalSwap(&other->applications_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListApplicationsByOrganizationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_getter, &descriptor_table_application_2fv1alpha1_2fapplication_5fapi_2eproto_once,
      file_level_metadata_application_2fv1alpha1_2fapplication_5fapi_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace application
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::application::v1alpha1::DeleteApplicationsByIntegrationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::DeleteApplicationsByIntegrationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::DeleteApplicationsByIntegrationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::DeleteApplicationsByIntegrationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::DeleteApplicationsByIntegrationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::DeleteApplicationsByIntegrationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::CreateApplicationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::CreateApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::CreateApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::CreateApplicationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::CreateApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::CreateApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::ListApplicationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::ListApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::ListApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::ListApplicationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::ListApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::ListApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::GetApplicationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::GetApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::GetApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::GetApplicationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::GetApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::GetApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::DeleteApplicationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::DeleteApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::DeleteApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::DeleteApplicationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::DeleteApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::DeleteApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::UpdateApplicationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::UpdateApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::UpdateApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::UpdateApplicationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::UpdateApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::UpdateApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::ListApplicationsByOrganizationRequest* Arena::CreateMaybeMessage< ::application::v1alpha1::ListApplicationsByOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::ListApplicationsByOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::application::v1alpha1::ListApplicationsByOrganizationResponse* Arena::CreateMaybeMessage< ::application::v1alpha1::ListApplicationsByOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::application::v1alpha1::ListApplicationsByOrganizationResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
