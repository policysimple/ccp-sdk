// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pipelines/runtime/v1alpha1/runtime_api.proto

#include "pipelines/runtime/v1alpha1/runtime_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pipelines {
namespace runtime {
namespace v1alpha1 {
constexpr CreateRuntimeRequest::CreateRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct CreateRuntimeRequestDefaultTypeInternal {
  constexpr CreateRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRuntimeRequestDefaultTypeInternal() {}
  union {
    CreateRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRuntimeRequestDefaultTypeInternal _CreateRuntimeRequest_default_instance_;
constexpr CreateRuntimeResponse::CreateRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct CreateRuntimeResponseDefaultTypeInternal {
  constexpr CreateRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRuntimeResponseDefaultTypeInternal() {}
  union {
    CreateRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRuntimeResponseDefaultTypeInternal _CreateRuntimeResponse_default_instance_;
constexpr UpdateRuntimeRequest::UpdateRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct UpdateRuntimeRequestDefaultTypeInternal {
  constexpr UpdateRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRuntimeRequestDefaultTypeInternal() {}
  union {
    UpdateRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRuntimeRequestDefaultTypeInternal _UpdateRuntimeRequest_default_instance_;
constexpr UpdateRuntimeResponse::UpdateRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct UpdateRuntimeResponseDefaultTypeInternal {
  constexpr UpdateRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRuntimeResponseDefaultTypeInternal() {}
  union {
    UpdateRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRuntimeResponseDefaultTypeInternal _UpdateRuntimeResponse_default_instance_;
constexpr UpdateResponseMessageRuntimeRequest::UpdateResponseMessageRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct UpdateResponseMessageRuntimeRequestDefaultTypeInternal {
  constexpr UpdateResponseMessageRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateResponseMessageRuntimeRequestDefaultTypeInternal() {}
  union {
    UpdateResponseMessageRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateResponseMessageRuntimeRequestDefaultTypeInternal _UpdateResponseMessageRuntimeRequest_default_instance_;
constexpr UpdateResponseMessageRuntimeResponse::UpdateResponseMessageRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct UpdateResponseMessageRuntimeResponseDefaultTypeInternal {
  constexpr UpdateResponseMessageRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateResponseMessageRuntimeResponseDefaultTypeInternal() {}
  union {
    UpdateResponseMessageRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateResponseMessageRuntimeResponseDefaultTypeInternal _UpdateResponseMessageRuntimeResponse_default_instance_;
constexpr DeleteRuntimeRequest::DeleteRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : runtime_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , integration_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimeRequestDefaultTypeInternal {
  constexpr DeleteRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimeRequestDefaultTypeInternal() {}
  union {
    DeleteRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimeRequestDefaultTypeInternal _DeleteRuntimeRequest_default_instance_;
constexpr DeleteRuntimeResponse::DeleteRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimeResponseDefaultTypeInternal {
  constexpr DeleteRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimeResponseDefaultTypeInternal() {}
  union {
    DeleteRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimeResponseDefaultTypeInternal _DeleteRuntimeResponse_default_instance_;
constexpr DeleteRuntimesByApplicationRequest::DeleteRuntimesByApplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : application_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_application_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , integration_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimesByApplicationRequestDefaultTypeInternal {
  constexpr DeleteRuntimesByApplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimesByApplicationRequestDefaultTypeInternal() {}
  union {
    DeleteRuntimesByApplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimesByApplicationRequestDefaultTypeInternal _DeleteRuntimesByApplicationRequest_default_instance_;
constexpr DeleteRuntimesByApplicationResponse::DeleteRuntimesByApplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimesByApplicationResponseDefaultTypeInternal {
  constexpr DeleteRuntimesByApplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimesByApplicationResponseDefaultTypeInternal() {}
  union {
    DeleteRuntimesByApplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimesByApplicationResponseDefaultTypeInternal _DeleteRuntimesByApplicationResponse_default_instance_;
constexpr DeleteRuntimesByEnvironmentRequest::DeleteRuntimesByEnvironmentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : environment_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimesByEnvironmentRequestDefaultTypeInternal {
  constexpr DeleteRuntimesByEnvironmentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimesByEnvironmentRequestDefaultTypeInternal() {}
  union {
    DeleteRuntimesByEnvironmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimesByEnvironmentRequestDefaultTypeInternal _DeleteRuntimesByEnvironmentRequest_default_instance_;
constexpr DeleteRuntimesByEnvironmentResponse::DeleteRuntimesByEnvironmentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRuntimesByEnvironmentResponseDefaultTypeInternal {
  constexpr DeleteRuntimesByEnvironmentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRuntimesByEnvironmentResponseDefaultTypeInternal() {}
  union {
    DeleteRuntimesByEnvironmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRuntimesByEnvironmentResponseDefaultTypeInternal _DeleteRuntimesByEnvironmentResponse_default_instance_;
constexpr GetRuntimeRequest::GetRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : runtime_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetRuntimeRequestDefaultTypeInternal {
  constexpr GetRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRuntimeRequestDefaultTypeInternal() {}
  union {
    GetRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRuntimeRequestDefaultTypeInternal _GetRuntimeRequest_default_instance_;
constexpr GetRuntimeResponse::GetRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct GetRuntimeResponseDefaultTypeInternal {
  constexpr GetRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRuntimeResponseDefaultTypeInternal() {}
  union {
    GetRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRuntimeResponseDefaultTypeInternal _GetRuntimeResponse_default_instance_;
constexpr ListRuntimesRequest::ListRuntimesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListRuntimesRequestDefaultTypeInternal {
  constexpr ListRuntimesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRuntimesRequestDefaultTypeInternal() {}
  union {
    ListRuntimesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRuntimesRequestDefaultTypeInternal _ListRuntimesRequest_default_instance_;
constexpr ListRuntimesResponse::ListRuntimesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_list_(nullptr){}
struct ListRuntimesResponseDefaultTypeInternal {
  constexpr ListRuntimesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRuntimesResponseDefaultTypeInternal() {}
  union {
    ListRuntimesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRuntimesResponseDefaultTypeInternal _ListRuntimesResponse_default_instance_;
constexpr ResponseMessageDeleteRuntimeByAppIdRequest::ResponseMessageDeleteRuntimeByAppIdRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : application_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_application_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , integration_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , project_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , organization_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResponseMessageDeleteRuntimeByAppIdRequestDefaultTypeInternal {
  constexpr ResponseMessageDeleteRuntimeByAppIdRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseMessageDeleteRuntimeByAppIdRequestDefaultTypeInternal() {}
  union {
    ResponseMessageDeleteRuntimeByAppIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseMessageDeleteRuntimeByAppIdRequestDefaultTypeInternal _ResponseMessageDeleteRuntimeByAppIdRequest_default_instance_;
constexpr ResponseMessageDeleteRuntimeByAppIdResponse::ResponseMessageDeleteRuntimeByAppIdResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResponseMessageDeleteRuntimeByAppIdResponseDefaultTypeInternal {
  constexpr ResponseMessageDeleteRuntimeByAppIdResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseMessageDeleteRuntimeByAppIdResponseDefaultTypeInternal() {}
  union {
    ResponseMessageDeleteRuntimeByAppIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseMessageDeleteRuntimeByAppIdResponseDefaultTypeInternal _ResponseMessageDeleteRuntimeByAppIdResponse_default_instance_;
constexpr RebuildRuntimeRequest::RebuildRuntimeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct RebuildRuntimeRequestDefaultTypeInternal {
  constexpr RebuildRuntimeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildRuntimeRequestDefaultTypeInternal() {}
  union {
    RebuildRuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildRuntimeRequestDefaultTypeInternal _RebuildRuntimeRequest_default_instance_;
constexpr RebuildRuntimeResponse::RebuildRuntimeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , runtime_(nullptr){}
struct RebuildRuntimeResponseDefaultTypeInternal {
  constexpr RebuildRuntimeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildRuntimeResponseDefaultTypeInternal() {}
  union {
    RebuildRuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildRuntimeResponseDefaultTypeInternal _RebuildRuntimeResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace pipelines
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[20];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeRequest, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeRequest, status_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::CreateRuntimeResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeRequest, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeRequest, status_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateRuntimeResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, runtime_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, name_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, integration_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimeResponse, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, application_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, name_application_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, integration_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest, environment_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::GetRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::GetRuntimeRequest, runtime_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::GetRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::GetRuntimeResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::GetRuntimeResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ListRuntimesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ListRuntimesRequest, project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ListRuntimesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ListRuntimesResponse, runtime_list_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ListRuntimesResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, application_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, name_application_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, integration_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, project_id_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeRequest, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeResponse, runtime_),
  PROTOBUF_FIELD_OFFSET(::pipelines::runtime::v1alpha1::RebuildRuntimeResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pipelines::runtime::v1alpha1::CreateRuntimeRequest)},
  { 8, -1, sizeof(::pipelines::runtime::v1alpha1::CreateRuntimeResponse)},
  { 15, -1, sizeof(::pipelines::runtime::v1alpha1::UpdateRuntimeRequest)},
  { 23, -1, sizeof(::pipelines::runtime::v1alpha1::UpdateRuntimeResponse)},
  { 30, -1, sizeof(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest)},
  { 37, -1, sizeof(::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse)},
  { 44, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimeRequest)},
  { 55, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimeResponse)},
  { 62, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest)},
  { 72, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse)},
  { 79, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest)},
  { 86, -1, sizeof(::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse)},
  { 93, -1, sizeof(::pipelines::runtime::v1alpha1::GetRuntimeRequest)},
  { 99, -1, sizeof(::pipelines::runtime::v1alpha1::GetRuntimeResponse)},
  { 106, -1, sizeof(::pipelines::runtime::v1alpha1::ListRuntimesRequest)},
  { 112, -1, sizeof(::pipelines::runtime::v1alpha1::ListRuntimesResponse)},
  { 119, -1, sizeof(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest)},
  { 129, -1, sizeof(::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse)},
  { 136, -1, sizeof(::pipelines::runtime::v1alpha1::RebuildRuntimeRequest)},
  { 143, -1, sizeof(::pipelines::runtime::v1alpha1::RebuildRuntimeResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_CreateRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_CreateRuntimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_UpdateRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_UpdateRuntimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_UpdateResponseMessageRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_UpdateResponseMessageRuntimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimesByApplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimesByApplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimesByEnvironmentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_DeleteRuntimesByEnvironmentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_GetRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_GetRuntimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_ListRuntimesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_ListRuntimesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_ResponseMessageDeleteRuntimeByAppIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_ResponseMessageDeleteRuntimeByAppIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_RebuildRuntimeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pipelines::runtime::v1alpha1::_RebuildRuntimeResponse_default_instance_),
};

const char descriptor_table_protodef_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,pipelines/runtime/v1alpha1/runtime_api"
  ".proto\022\032pipelines.runtime.v1alpha1\032(pipe"
  "lines/runtime/v1alpha1/runtime.proto\"\206\001\n"
  "\024CreateRuntimeRequest\022=\n\007runtime\030\001 \001(\0132#"
  ".pipelines.runtime.v1alpha1.RuntimeR\007run"
  "time\022\026\n\006status\030\002 \001(\tR\006status\022\027\n\007user_id\030"
  "\003 \001(\tR\006userId\"n\n\025CreateRuntimeResponse\022="
  "\n\007runtime\030\001 \001(\0132#.pipelines.runtime.v1al"
  "pha1.RuntimeR\007runtime\022\026\n\006status\030\002 \001(\tR\006s"
  "tatus\"\206\001\n\024UpdateRuntimeRequest\022=\n\007runtim"
  "e\030\001 \001(\0132#.pipelines.runtime.v1alpha1.Run"
  "timeR\007runtime\022\026\n\006status\030\002 \001(\tR\006status\022\027\n"
  "\007user_id\030\003 \001(\tR\006userId\"n\n\025UpdateRuntimeR"
  "esponse\022=\n\007runtime\030\001 \001(\0132#.pipelines.run"
  "time.v1alpha1.RuntimeR\007runtime\022\026\n\006status"
  "\030\002 \001(\tR\006status\"|\n#UpdateResponseMessageR"
  "untimeRequest\022=\n\007runtime\030\001 \001(\0132#.pipelin"
  "es.runtime.v1alpha1.RuntimeR\007runtime\022\026\n\006"
  "status\030\002 \001(\tR\006status\"}\n$UpdateResponseMe"
  "ssageRuntimeResponse\022=\n\007runtime\030\001 \001(\0132#."
  "pipelines.runtime.v1alpha1.RuntimeR\007runt"
  "ime\022\026\n\006status\030\002 \001(\tR\006status\"\314\001\n\024DeleteRu"
  "ntimeRequest\022\035\n\nruntime_id\030\001 \001(\tR\truntim"
  "eId\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013integration\030\003"
  " \001(\tR\013integration\022\035\n\nproject_id\030\004 \001(\tR\tp"
  "rojectId\022\'\n\017organization_id\030\005 \001(\tR\016organ"
  "izationId\022\027\n\007user_id\030\006 \001(\tR\006userId\"\?\n\025De"
  "leteRuntimeResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\024\n"
  "\005error\030\002 \001(\tR\005error\"\345\001\n\"DeleteRuntimesBy"
  "ApplicationRequest\022%\n\016application_id\030\001 \001"
  "(\tR\rapplicationId\022)\n\020name_application\030\002 "
  "\001(\tR\017nameApplication\022%\n\016integration_id\030\003"
  " \001(\tR\rintegrationId\022\035\n\nproject_id\030\004 \001(\tR"
  "\tprojectId\022\'\n\017organization_id\030\005 \001(\tR\016org"
  "anizationId\"M\n#DeleteRuntimesByApplicati"
  "onResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\024\n\005error\030\002 "
  "\001(\tR\005error\"d\n\"DeleteRuntimesByEnvironmen"
  "tRequest\022%\n\016environment_id\030\001 \001(\tR\renviro"
  "nmentId\022\027\n\007user_id\030\002 \001(\tR\006userId\"M\n#Dele"
  "teRuntimesByEnvironmentResponse\022\020\n\003msg\030\001"
  " \001(\tR\003msg\022\024\n\005error\030\002 \001(\tR\005error\"2\n\021GetRu"
  "ntimeRequest\022\035\n\nruntime_id\030\001 \001(\tR\truntim"
  "eId\"k\n\022GetRuntimeResponse\022=\n\007runtime\030\001 \001"
  "(\0132#.pipelines.runtime.v1alpha1.RuntimeR"
  "\007runtime\022\026\n\006status\030\002 \001(\tR\006status\"4\n\023List"
  "RuntimesRequest\022\035\n\nproject_id\030\001 \001(\tR\tpro"
  "jectId\"z\n\024ListRuntimesResponse\022J\n\014runtim"
  "e_list\030\001 \001(\0132\'.pipelines.runtime.v1alpha"
  "1.RuntimeListR\013runtimeList\022\026\n\006status\030\002 \001"
  "(\tR\006status\"\355\001\n*ResponseMessageDeleteRunt"
  "imeByAppIdRequest\022%\n\016application_id\030\001 \001("
  "\tR\rapplicationId\022)\n\020name_application\030\002 \001"
  "(\tR\017nameApplication\022%\n\016integration_id\030\003 "
  "\001(\tR\rintegrationId\022\035\n\nproject_id\030\004 \001(\tR\t"
  "projectId\022\'\n\017organization_id\030\005 \001(\tR\016orga"
  "nizationId\"U\n+ResponseMessageDeleteRunti"
  "meByAppIdResponse\022\020\n\003msg\030\001 \001(\tR\003msg\022\024\n\005e"
  "rror\030\002 \001(\tR\005error\"o\n\025RebuildRuntimeReque"
  "st\022=\n\007runtime\030\001 \001(\0132#.pipelines.runtime."
  "v1alpha1.RuntimeR\007runtime\022\027\n\007user_id\030\002 \001"
  "(\tR\006userId\"o\n\026RebuildRuntimeResponse\022=\n\007"
  "runtime\030\001 \001(\0132#.pipelines.runtime.v1alph"
  "a1.RuntimeR\007runtime\022\026\n\006status\030\002 \001(\tR\006sta"
  "tus2\201\013\n\021RuntimeAPIService\022m\n\nGetRuntime\022"
  "-.pipelines.runtime.v1alpha1.GetRuntimeR"
  "equest\032..pipelines.runtime.v1alpha1.GetR"
  "untimeResponse\"\000\022v\n\rCreateRuntime\0220.pipe"
  "lines.runtime.v1alpha1.CreateRuntimeRequ"
  "est\0321.pipelines.runtime.v1alpha1.CreateR"
  "untimeResponse\"\000\022v\n\rUpdateRuntime\0220.pipe"
  "lines.runtime.v1alpha1.UpdateRuntimeRequ"
  "est\0321.pipelines.runtime.v1alpha1.UpdateR"
  "untimeResponse\"\000\022\243\001\n\034UpdateResponseMessa"
  "geRuntime\022\?.pipelines.runtime.v1alpha1.U"
  "pdateResponseMessageRuntimeRequest\032@.pip"
  "elines.runtime.v1alpha1.UpdateResponseMe"
  "ssageRuntimeResponse\"\000\022\270\001\n#ResponseMessa"
  "geDeleteRuntimeByAppId\022F.pipelines.runti"
  "me.v1alpha1.ResponseMessageDeleteRuntime"
  "ByAppIdRequest\032G.pipelines.runtime.v1alp"
  "ha1.ResponseMessageDeleteRuntimeByAppIdR"
  "esponse\"\000\022v\n\rDeleteRuntime\0220.pipelines.r"
  "untime.v1alpha1.DeleteRuntimeRequest\0321.p"
  "ipelines.runtime.v1alpha1.DeleteRuntimeR"
  "esponse\"\000\022\240\001\n\033DeleteRuntimesByApplicatio"
  "n\022>.pipelines.runtime.v1alpha1.DeleteRun"
  "timesByApplicationRequest\032\?.pipelines.ru"
  "ntime.v1alpha1.DeleteRuntimesByApplicati"
  "onResponse\"\000\022\240\001\n\033DeleteRuntimesByEnviron"
  "ment\022>.pipelines.runtime.v1alpha1.Delete"
  "RuntimesByEnvironmentRequest\032\?.pipelines"
  ".runtime.v1alpha1.DeleteRuntimesByEnviro"
  "nmentResponse\"\000\022s\n\014ListRuntimes\022/.pipeli"
  "nes.runtime.v1alpha1.ListRuntimesRequest"
  "\0320.pipelines.runtime.v1alpha1.ListRuntim"
  "esResponse\"\000\022y\n\016RebuildRuntime\0221.pipelin"
  "es.runtime.v1alpha1.RebuildRuntimeReques"
  "t\0322.pipelines.runtime.v1alpha1.RebuildRu"
  "ntimeResponse\"\000B\260\001\n$io.cuemby.pipelines."
  "runtime.v1alpha1B\017RuntimeAPIProtoP\001Z5git"
  "hub.com/cuemby/ccp-runtime-service/runti"
  "mev1alpha1\242\002\003PPX\252\002\032Pipelines.Runtime.V1A"
  "lpha1\312\002\032Pipelines\\Runtime\\V1Alpha1b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_deps[1] = {
  &::descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto = {
  false, false, 4122, descriptor_table_protodef_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto, "pipelines/runtime/v1alpha1/runtime_api.proto", 
  &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once, descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_deps, 1, 20,
  schemas, file_default_instances, TableStruct_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto::offsets,
  file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto, file_level_enum_descriptors_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto, file_level_service_descriptors_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter() {
  return &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto(&descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto);
namespace pipelines {
namespace runtime {
namespace v1alpha1 {

// ===================================================================

class CreateRuntimeRequest::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const CreateRuntimeRequest* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
CreateRuntimeRequest::_Internal::runtime(const CreateRuntimeRequest* msg) {
  return *msg->runtime_;
}
void CreateRuntimeRequest::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
CreateRuntimeRequest::CreateRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
}
CreateRuntimeRequest::CreateRuntimeRequest(const CreateRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
}

inline void CreateRuntimeRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

CreateRuntimeRequest::~CreateRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void CreateRuntimeRequest::ArenaDtor(void* object) {
  CreateRuntimeRequest* _this = reinterpret_cast< CreateRuntimeRequest* >(object);
  (void)_this;
}
void CreateRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.CreateRuntimeRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 3 [json_name = "userId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.CreateRuntimeRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.CreateRuntimeRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.CreateRuntimeRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  return target;
}

size_t CreateRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRuntimeRequest::GetClassData() const { return &_class_data_; }

void CreateRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateRuntimeRequest *>(to)->MergeFrom(
      static_cast<const CreateRuntimeRequest &>(from));
}


void CreateRuntimeRequest::MergeFrom(const CreateRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRuntimeRequest::CopyFrom(const CreateRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.CreateRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRuntimeRequest::IsInitialized() const {
  return true;
}

void CreateRuntimeRequest::InternalSwap(CreateRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[0]);
}

// ===================================================================

class CreateRuntimeResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const CreateRuntimeResponse* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
CreateRuntimeResponse::_Internal::runtime(const CreateRuntimeResponse* msg) {
  return *msg->runtime_;
}
void CreateRuntimeResponse::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
CreateRuntimeResponse::CreateRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
}
CreateRuntimeResponse::CreateRuntimeResponse(const CreateRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
}

inline void CreateRuntimeResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

CreateRuntimeResponse::~CreateRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void CreateRuntimeResponse::ArenaDtor(void* object) {
  CreateRuntimeResponse* _this = reinterpret_cast< CreateRuntimeResponse* >(object);
  (void)_this;
}
void CreateRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.CreateRuntimeResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.CreateRuntimeResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  return target;
}

size_t CreateRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRuntimeResponse::GetClassData() const { return &_class_data_; }

void CreateRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateRuntimeResponse *>(to)->MergeFrom(
      static_cast<const CreateRuntimeResponse &>(from));
}


void CreateRuntimeResponse::MergeFrom(const CreateRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRuntimeResponse::CopyFrom(const CreateRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.CreateRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRuntimeResponse::IsInitialized() const {
  return true;
}

void CreateRuntimeResponse::InternalSwap(CreateRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[1]);
}

// ===================================================================

class UpdateRuntimeRequest::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const UpdateRuntimeRequest* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
UpdateRuntimeRequest::_Internal::runtime(const UpdateRuntimeRequest* msg) {
  return *msg->runtime_;
}
void UpdateRuntimeRequest::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
UpdateRuntimeRequest::UpdateRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
}
UpdateRuntimeRequest::UpdateRuntimeRequest(const UpdateRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
}

inline void UpdateRuntimeRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

UpdateRuntimeRequest::~UpdateRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void UpdateRuntimeRequest::ArenaDtor(void* object) {
  UpdateRuntimeRequest* _this = reinterpret_cast< UpdateRuntimeRequest* >(object);
  (void)_this;
}
void UpdateRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.UpdateRuntimeRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 3 [json_name = "userId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.UpdateRuntimeRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.UpdateRuntimeRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.UpdateRuntimeRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  return target;
}

size_t UpdateRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string user_id = 3 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRuntimeRequest::GetClassData() const { return &_class_data_; }

void UpdateRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateRuntimeRequest *>(to)->MergeFrom(
      static_cast<const UpdateRuntimeRequest &>(from));
}


void UpdateRuntimeRequest::MergeFrom(const UpdateRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRuntimeRequest::CopyFrom(const UpdateRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.UpdateRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeRequest::IsInitialized() const {
  return true;
}

void UpdateRuntimeRequest::InternalSwap(UpdateRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[2]);
}

// ===================================================================

class UpdateRuntimeResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const UpdateRuntimeResponse* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
UpdateRuntimeResponse::_Internal::runtime(const UpdateRuntimeResponse* msg) {
  return *msg->runtime_;
}
void UpdateRuntimeResponse::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
UpdateRuntimeResponse::UpdateRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
}
UpdateRuntimeResponse::UpdateRuntimeResponse(const UpdateRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
}

inline void UpdateRuntimeResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

UpdateRuntimeResponse::~UpdateRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void UpdateRuntimeResponse::ArenaDtor(void* object) {
  UpdateRuntimeResponse* _this = reinterpret_cast< UpdateRuntimeResponse* >(object);
  (void)_this;
}
void UpdateRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.UpdateRuntimeResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.UpdateRuntimeResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  return target;
}

size_t UpdateRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRuntimeResponse::GetClassData() const { return &_class_data_; }

void UpdateRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateRuntimeResponse *>(to)->MergeFrom(
      static_cast<const UpdateRuntimeResponse &>(from));
}


void UpdateRuntimeResponse::MergeFrom(const UpdateRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRuntimeResponse::CopyFrom(const UpdateRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.UpdateRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeResponse::IsInitialized() const {
  return true;
}

void UpdateRuntimeResponse::InternalSwap(UpdateRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[3]);
}

// ===================================================================

class UpdateResponseMessageRuntimeRequest::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const UpdateResponseMessageRuntimeRequest* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
UpdateResponseMessageRuntimeRequest::_Internal::runtime(const UpdateResponseMessageRuntimeRequest* msg) {
  return *msg->runtime_;
}
void UpdateResponseMessageRuntimeRequest::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
UpdateResponseMessageRuntimeRequest::UpdateResponseMessageRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
}
UpdateResponseMessageRuntimeRequest::UpdateResponseMessageRuntimeRequest(const UpdateResponseMessageRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
}

inline void UpdateResponseMessageRuntimeRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

UpdateResponseMessageRuntimeRequest::~UpdateResponseMessageRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateResponseMessageRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void UpdateResponseMessageRuntimeRequest::ArenaDtor(void* object) {
  UpdateResponseMessageRuntimeRequest* _this = reinterpret_cast< UpdateResponseMessageRuntimeRequest* >(object);
  (void)_this;
}
void UpdateResponseMessageRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateResponseMessageRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateResponseMessageRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateResponseMessageRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateResponseMessageRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  return target;
}

size_t UpdateResponseMessageRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateResponseMessageRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateResponseMessageRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateResponseMessageRuntimeRequest::GetClassData() const { return &_class_data_; }

void UpdateResponseMessageRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateResponseMessageRuntimeRequest *>(to)->MergeFrom(
      static_cast<const UpdateResponseMessageRuntimeRequest &>(from));
}


void UpdateResponseMessageRuntimeRequest::MergeFrom(const UpdateResponseMessageRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateResponseMessageRuntimeRequest::CopyFrom(const UpdateResponseMessageRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResponseMessageRuntimeRequest::IsInitialized() const {
  return true;
}

void UpdateResponseMessageRuntimeRequest::InternalSwap(UpdateResponseMessageRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateResponseMessageRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[4]);
}

// ===================================================================

class UpdateResponseMessageRuntimeResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const UpdateResponseMessageRuntimeResponse* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
UpdateResponseMessageRuntimeResponse::_Internal::runtime(const UpdateResponseMessageRuntimeResponse* msg) {
  return *msg->runtime_;
}
void UpdateResponseMessageRuntimeResponse::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
UpdateResponseMessageRuntimeResponse::UpdateResponseMessageRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
}
UpdateResponseMessageRuntimeResponse::UpdateResponseMessageRuntimeResponse(const UpdateResponseMessageRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
}

inline void UpdateResponseMessageRuntimeResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

UpdateResponseMessageRuntimeResponse::~UpdateResponseMessageRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateResponseMessageRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void UpdateResponseMessageRuntimeResponse::ArenaDtor(void* object) {
  UpdateResponseMessageRuntimeResponse* _this = reinterpret_cast< UpdateResponseMessageRuntimeResponse* >(object);
  (void)_this;
}
void UpdateResponseMessageRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateResponseMessageRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateResponseMessageRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateResponseMessageRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateResponseMessageRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  return target;
}

size_t UpdateResponseMessageRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateResponseMessageRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateResponseMessageRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateResponseMessageRuntimeResponse::GetClassData() const { return &_class_data_; }

void UpdateResponseMessageRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateResponseMessageRuntimeResponse *>(to)->MergeFrom(
      static_cast<const UpdateResponseMessageRuntimeResponse &>(from));
}


void UpdateResponseMessageRuntimeResponse::MergeFrom(const UpdateResponseMessageRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateResponseMessageRuntimeResponse::CopyFrom(const UpdateResponseMessageRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.UpdateResponseMessageRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResponseMessageRuntimeResponse::IsInitialized() const {
  return true;
}

void UpdateResponseMessageRuntimeResponse::InternalSwap(UpdateResponseMessageRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateResponseMessageRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[5]);
}

// ===================================================================

class DeleteRuntimeRequest::_Internal {
 public:
};

DeleteRuntimeRequest::DeleteRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
}
DeleteRuntimeRequest::DeleteRuntimeRequest(const DeleteRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  runtime_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runtime_id().empty()) {
    runtime_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_runtime_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  integration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_integration().empty()) {
    integration_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_integration(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
}

inline void DeleteRuntimeRequest::SharedCtor() {
runtime_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
integration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimeRequest::~DeleteRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  runtime_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  integration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimeRequest::ArenaDtor(void* object) {
  DeleteRuntimeRequest* _this = reinterpret_cast< DeleteRuntimeRequest* >(object);
  (void)_this;
}
void DeleteRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runtime_id_.ClearToEmpty();
  name_.ClearToEmpty();
  integration_.ClearToEmpty();
  project_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string runtime_id = 1 [json_name = "runtimeId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_runtime_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.runtime_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string integration = 3 [json_name = "integration"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_integration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.integration"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 4 [json_name = "projectId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 5 [json_name = "organizationId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 6 [json_name = "userId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string runtime_id = 1 [json_name = "runtimeId"];
  if (!this->_internal_runtime_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_id().data(), static_cast<int>(this->_internal_runtime_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.runtime_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_runtime_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string integration = 3 [json_name = "integration"];
  if (!this->_internal_integration().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_integration().data(), static_cast<int>(this->_internal_integration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.integration");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_integration(), target);
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_project_id(), target);
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_organization_id(), target);
  }

  // string user_id = 6 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  return target;
}

size_t DeleteRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string runtime_id = 1 [json_name = "runtimeId"];
  if (!this->_internal_runtime_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string integration = 3 [json_name = "integration"];
  if (!this->_internal_integration().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_integration());
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string user_id = 6 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimeRequest::GetClassData() const { return &_class_data_; }

void DeleteRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimeRequest *>(to)->MergeFrom(
      static_cast<const DeleteRuntimeRequest &>(from));
}


void DeleteRuntimeRequest::MergeFrom(const DeleteRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_runtime_id().empty()) {
    _internal_set_runtime_id(from._internal_runtime_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_integration().empty()) {
    _internal_set_integration(from._internal_integration());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimeRequest::CopyFrom(const DeleteRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimeRequest::IsInitialized() const {
  return true;
}

void DeleteRuntimeRequest::InternalSwap(DeleteRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &runtime_id_, GetArenaForAllocation(),
      &other->runtime_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &integration_, GetArenaForAllocation(),
      &other->integration_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[6]);
}

// ===================================================================

class DeleteRuntimeResponse::_Internal {
 public:
};

DeleteRuntimeResponse::DeleteRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
}
DeleteRuntimeResponse::DeleteRuntimeResponse(const DeleteRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
}

inline void DeleteRuntimeResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimeResponse::~DeleteRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimeResponse::ArenaDtor(void* object) {
  DeleteRuntimeResponse* _this = reinterpret_cast< DeleteRuntimeResponse* >(object);
  (void)_this;
}
void DeleteRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimeResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimeResponse.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  return target;
}

size_t DeleteRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimeResponse::GetClassData() const { return &_class_data_; }

void DeleteRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimeResponse *>(to)->MergeFrom(
      static_cast<const DeleteRuntimeResponse &>(from));
}


void DeleteRuntimeResponse::MergeFrom(const DeleteRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimeResponse::CopyFrom(const DeleteRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimeResponse::IsInitialized() const {
  return true;
}

void DeleteRuntimeResponse::InternalSwap(DeleteRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, GetArenaForAllocation(),
      &other->error_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[7]);
}

// ===================================================================

class DeleteRuntimesByApplicationRequest::_Internal {
 public:
};

DeleteRuntimesByApplicationRequest::DeleteRuntimesByApplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
}
DeleteRuntimesByApplicationRequest::DeleteRuntimesByApplicationRequest(const DeleteRuntimesByApplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_application_id().empty()) {
    application_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_application_id(), 
      GetArenaForAllocation());
  }
  name_application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name_application().empty()) {
    name_application_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name_application(), 
      GetArenaForAllocation());
  }
  integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_integration_id().empty()) {
    integration_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_integration_id(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
}

inline void DeleteRuntimesByApplicationRequest::SharedCtor() {
application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimesByApplicationRequest::~DeleteRuntimesByApplicationRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimesByApplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  application_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_application_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  integration_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimesByApplicationRequest::ArenaDtor(void* object) {
  DeleteRuntimesByApplicationRequest* _this = reinterpret_cast< DeleteRuntimesByApplicationRequest* >(object);
  (void)_this;
}
void DeleteRuntimesByApplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimesByApplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimesByApplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  application_id_.ClearToEmpty();
  name_application_.ClearToEmpty();
  integration_id_.ClearToEmpty();
  project_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimesByApplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string application_id = 1 [json_name = "applicationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_application_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.application_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name_application = 2 [json_name = "nameApplication"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name_application();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.name_application"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string integration_id = 3 [json_name = "integrationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_integration_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.integration_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 4 [json_name = "projectId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 5 [json_name = "organizationId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimesByApplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string application_id = 1 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application_id().data(), static_cast<int>(this->_internal_application_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.application_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_application_id(), target);
  }

  // string name_application = 2 [json_name = "nameApplication"];
  if (!this->_internal_name_application().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name_application().data(), static_cast<int>(this->_internal_name_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.name_application");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name_application(), target);
  }

  // string integration_id = 3 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_integration_id().data(), static_cast<int>(this->_internal_integration_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.integration_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_integration_id(), target);
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_project_id(), target);
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  return target;
}

size_t DeleteRuntimesByApplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string application_id = 1 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application_id());
  }

  // string name_application = 2 [json_name = "nameApplication"];
  if (!this->_internal_name_application().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name_application());
  }

  // string integration_id = 3 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_integration_id());
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimesByApplicationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimesByApplicationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimesByApplicationRequest::GetClassData() const { return &_class_data_; }

void DeleteRuntimesByApplicationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimesByApplicationRequest *>(to)->MergeFrom(
      static_cast<const DeleteRuntimesByApplicationRequest &>(from));
}


void DeleteRuntimesByApplicationRequest::MergeFrom(const DeleteRuntimesByApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_application_id().empty()) {
    _internal_set_application_id(from._internal_application_id());
  }
  if (!from._internal_name_application().empty()) {
    _internal_set_name_application(from._internal_name_application());
  }
  if (!from._internal_integration_id().empty()) {
    _internal_set_integration_id(from._internal_integration_id());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimesByApplicationRequest::CopyFrom(const DeleteRuntimesByApplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimesByApplicationRequest::IsInitialized() const {
  return true;
}

void DeleteRuntimesByApplicationRequest::InternalSwap(DeleteRuntimesByApplicationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &application_id_, GetArenaForAllocation(),
      &other->application_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_application_, GetArenaForAllocation(),
      &other->name_application_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &integration_id_, GetArenaForAllocation(),
      &other->integration_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimesByApplicationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[8]);
}

// ===================================================================

class DeleteRuntimesByApplicationResponse::_Internal {
 public:
};

DeleteRuntimesByApplicationResponse::DeleteRuntimesByApplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
}
DeleteRuntimesByApplicationResponse::DeleteRuntimesByApplicationResponse(const DeleteRuntimesByApplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
}

inline void DeleteRuntimesByApplicationResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimesByApplicationResponse::~DeleteRuntimesByApplicationResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimesByApplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimesByApplicationResponse::ArenaDtor(void* object) {
  DeleteRuntimesByApplicationResponse* _this = reinterpret_cast< DeleteRuntimesByApplicationResponse* >(object);
  (void)_this;
}
void DeleteRuntimesByApplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimesByApplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimesByApplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimesByApplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimesByApplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  return target;
}

size_t DeleteRuntimesByApplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimesByApplicationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimesByApplicationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimesByApplicationResponse::GetClassData() const { return &_class_data_; }

void DeleteRuntimesByApplicationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimesByApplicationResponse *>(to)->MergeFrom(
      static_cast<const DeleteRuntimesByApplicationResponse &>(from));
}


void DeleteRuntimesByApplicationResponse::MergeFrom(const DeleteRuntimesByApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimesByApplicationResponse::CopyFrom(const DeleteRuntimesByApplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByApplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimesByApplicationResponse::IsInitialized() const {
  return true;
}

void DeleteRuntimesByApplicationResponse::InternalSwap(DeleteRuntimesByApplicationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, GetArenaForAllocation(),
      &other->error_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimesByApplicationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[9]);
}

// ===================================================================

class DeleteRuntimesByEnvironmentRequest::_Internal {
 public:
};

DeleteRuntimesByEnvironmentRequest::DeleteRuntimesByEnvironmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
}
DeleteRuntimesByEnvironmentRequest::DeleteRuntimesByEnvironmentRequest(const DeleteRuntimesByEnvironmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  environment_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_environment_id().empty()) {
    environment_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_environment_id(), 
      GetArenaForAllocation());
  }
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
}

inline void DeleteRuntimesByEnvironmentRequest::SharedCtor() {
environment_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimesByEnvironmentRequest::~DeleteRuntimesByEnvironmentRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimesByEnvironmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  environment_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimesByEnvironmentRequest::ArenaDtor(void* object) {
  DeleteRuntimesByEnvironmentRequest* _this = reinterpret_cast< DeleteRuntimesByEnvironmentRequest* >(object);
  (void)_this;
}
void DeleteRuntimesByEnvironmentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimesByEnvironmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimesByEnvironmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  environment_id_.ClearToEmpty();
  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimesByEnvironmentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string environment_id = 1 [json_name = "environmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_environment_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest.environment_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimesByEnvironmentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string environment_id = 1 [json_name = "environmentId"];
  if (!this->_internal_environment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_environment_id().data(), static_cast<int>(this->_internal_environment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest.environment_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_environment_id(), target);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  return target;
}

size_t DeleteRuntimesByEnvironmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string environment_id = 1 [json_name = "environmentId"];
  if (!this->_internal_environment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_environment_id());
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimesByEnvironmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimesByEnvironmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimesByEnvironmentRequest::GetClassData() const { return &_class_data_; }

void DeleteRuntimesByEnvironmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimesByEnvironmentRequest *>(to)->MergeFrom(
      static_cast<const DeleteRuntimesByEnvironmentRequest &>(from));
}


void DeleteRuntimesByEnvironmentRequest::MergeFrom(const DeleteRuntimesByEnvironmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_environment_id().empty()) {
    _internal_set_environment_id(from._internal_environment_id());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimesByEnvironmentRequest::CopyFrom(const DeleteRuntimesByEnvironmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimesByEnvironmentRequest::IsInitialized() const {
  return true;
}

void DeleteRuntimesByEnvironmentRequest::InternalSwap(DeleteRuntimesByEnvironmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &environment_id_, GetArenaForAllocation(),
      &other->environment_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimesByEnvironmentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[10]);
}

// ===================================================================

class DeleteRuntimesByEnvironmentResponse::_Internal {
 public:
};

DeleteRuntimesByEnvironmentResponse::DeleteRuntimesByEnvironmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
}
DeleteRuntimesByEnvironmentResponse::DeleteRuntimesByEnvironmentResponse(const DeleteRuntimesByEnvironmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
}

inline void DeleteRuntimesByEnvironmentResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRuntimesByEnvironmentResponse::~DeleteRuntimesByEnvironmentResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRuntimesByEnvironmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRuntimesByEnvironmentResponse::ArenaDtor(void* object) {
  DeleteRuntimesByEnvironmentResponse* _this = reinterpret_cast< DeleteRuntimesByEnvironmentResponse* >(object);
  (void)_this;
}
void DeleteRuntimesByEnvironmentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRuntimesByEnvironmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRuntimesByEnvironmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRuntimesByEnvironmentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRuntimesByEnvironmentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  return target;
}

size_t DeleteRuntimesByEnvironmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRuntimesByEnvironmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRuntimesByEnvironmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRuntimesByEnvironmentResponse::GetClassData() const { return &_class_data_; }

void DeleteRuntimesByEnvironmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteRuntimesByEnvironmentResponse *>(to)->MergeFrom(
      static_cast<const DeleteRuntimesByEnvironmentResponse &>(from));
}


void DeleteRuntimesByEnvironmentResponse::MergeFrom(const DeleteRuntimesByEnvironmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRuntimesByEnvironmentResponse::CopyFrom(const DeleteRuntimesByEnvironmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.DeleteRuntimesByEnvironmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRuntimesByEnvironmentResponse::IsInitialized() const {
  return true;
}

void DeleteRuntimesByEnvironmentResponse::InternalSwap(DeleteRuntimesByEnvironmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, GetArenaForAllocation(),
      &other->error_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRuntimesByEnvironmentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[11]);
}

// ===================================================================

class GetRuntimeRequest::_Internal {
 public:
};

GetRuntimeRequest::GetRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.GetRuntimeRequest)
}
GetRuntimeRequest::GetRuntimeRequest(const GetRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  runtime_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runtime_id().empty()) {
    runtime_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_runtime_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.GetRuntimeRequest)
}

inline void GetRuntimeRequest::SharedCtor() {
runtime_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRuntimeRequest::~GetRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  runtime_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRuntimeRequest::ArenaDtor(void* object) {
  GetRuntimeRequest* _this = reinterpret_cast< GetRuntimeRequest* >(object);
  (void)_this;
}
void GetRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runtime_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string runtime_id = 1 [json_name = "runtimeId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_runtime_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.GetRuntimeRequest.runtime_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string runtime_id = 1 [json_name = "runtimeId"];
  if (!this->_internal_runtime_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_id().data(), static_cast<int>(this->_internal_runtime_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.GetRuntimeRequest.runtime_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_runtime_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  return target;
}

size_t GetRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string runtime_id = 1 [json_name = "runtimeId"];
  if (!this->_internal_runtime_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRuntimeRequest::GetClassData() const { return &_class_data_; }

void GetRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetRuntimeRequest *>(to)->MergeFrom(
      static_cast<const GetRuntimeRequest &>(from));
}


void GetRuntimeRequest::MergeFrom(const GetRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_runtime_id().empty()) {
    _internal_set_runtime_id(from._internal_runtime_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRuntimeRequest::CopyFrom(const GetRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.GetRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRuntimeRequest::IsInitialized() const {
  return true;
}

void GetRuntimeRequest::InternalSwap(GetRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &runtime_id_, GetArenaForAllocation(),
      &other->runtime_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[12]);
}

// ===================================================================

class GetRuntimeResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const GetRuntimeResponse* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
GetRuntimeResponse::_Internal::runtime(const GetRuntimeResponse* msg) {
  return *msg->runtime_;
}
void GetRuntimeResponse::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
GetRuntimeResponse::GetRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.GetRuntimeResponse)
}
GetRuntimeResponse::GetRuntimeResponse(const GetRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.GetRuntimeResponse)
}

inline void GetRuntimeResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

GetRuntimeResponse::~GetRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void GetRuntimeResponse::ArenaDtor(void* object) {
  GetRuntimeResponse* _this = reinterpret_cast< GetRuntimeResponse* >(object);
  (void)_this;
}
void GetRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.GetRuntimeResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.GetRuntimeResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  return target;
}

size_t GetRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRuntimeResponse::GetClassData() const { return &_class_data_; }

void GetRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetRuntimeResponse *>(to)->MergeFrom(
      static_cast<const GetRuntimeResponse &>(from));
}


void GetRuntimeResponse::MergeFrom(const GetRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRuntimeResponse::CopyFrom(const GetRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.GetRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRuntimeResponse::IsInitialized() const {
  return true;
}

void GetRuntimeResponse::InternalSwap(GetRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[13]);
}

// ===================================================================

class ListRuntimesRequest::_Internal {
 public:
};

ListRuntimesRequest::ListRuntimesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.ListRuntimesRequest)
}
ListRuntimesRequest::ListRuntimesRequest(const ListRuntimesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.ListRuntimesRequest)
}

inline void ListRuntimesRequest::SharedCtor() {
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListRuntimesRequest::~ListRuntimesRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRuntimesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRuntimesRequest::ArenaDtor(void* object) {
  ListRuntimesRequest* _this = reinterpret_cast< ListRuntimesRequest* >(object);
  (void)_this;
}
void ListRuntimesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRuntimesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRuntimesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRuntimesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string project_id = 1 [json_name = "projectId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ListRuntimesRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListRuntimesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ListRuntimesRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  return target;
}

size_t ListRuntimesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRuntimesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRuntimesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRuntimesRequest::GetClassData() const { return &_class_data_; }

void ListRuntimesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListRuntimesRequest *>(to)->MergeFrom(
      static_cast<const ListRuntimesRequest &>(from));
}


void ListRuntimesRequest::MergeFrom(const ListRuntimesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRuntimesRequest::CopyFrom(const ListRuntimesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.ListRuntimesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRuntimesRequest::IsInitialized() const {
  return true;
}

void ListRuntimesRequest::InternalSwap(ListRuntimesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRuntimesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[14]);
}

// ===================================================================

class ListRuntimesResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::RuntimeList& runtime_list(const ListRuntimesResponse* msg);
};

const ::pipelines::runtime::v1alpha1::RuntimeList&
ListRuntimesResponse::_Internal::runtime_list(const ListRuntimesResponse* msg) {
  return *msg->runtime_list_;
}
void ListRuntimesResponse::clear_runtime_list() {
  if (GetArenaForAllocation() == nullptr && runtime_list_ != nullptr) {
    delete runtime_list_;
  }
  runtime_list_ = nullptr;
}
ListRuntimesResponse::ListRuntimesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.ListRuntimesResponse)
}
ListRuntimesResponse::ListRuntimesResponse(const ListRuntimesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime_list()) {
    runtime_list_ = new ::pipelines::runtime::v1alpha1::RuntimeList(*from.runtime_list_);
  } else {
    runtime_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.ListRuntimesResponse)
}

inline void ListRuntimesResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_list_ = nullptr;
}

ListRuntimesResponse::~ListRuntimesResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRuntimesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_list_;
}

void ListRuntimesResponse::ArenaDtor(void* object) {
  ListRuntimesResponse* _this = reinterpret_cast< ListRuntimesResponse* >(object);
  (void)_this;
}
void ListRuntimesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRuntimesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRuntimesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_list_ != nullptr) {
    delete runtime_list_;
  }
  runtime_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRuntimesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.RuntimeList runtime_list = 1 [json_name = "runtimeList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ListRuntimesResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListRuntimesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.RuntimeList runtime_list = 1 [json_name = "runtimeList"];
  if (this->_internal_has_runtime_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime_list(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ListRuntimesResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  return target;
}

size_t ListRuntimesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.RuntimeList runtime_list = 1 [json_name = "runtimeList"];
  if (this->_internal_has_runtime_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_list_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRuntimesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRuntimesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRuntimesResponse::GetClassData() const { return &_class_data_; }

void ListRuntimesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListRuntimesResponse *>(to)->MergeFrom(
      static_cast<const ListRuntimesResponse &>(from));
}


void ListRuntimesResponse::MergeFrom(const ListRuntimesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime_list()) {
    _internal_mutable_runtime_list()->::pipelines::runtime::v1alpha1::RuntimeList::MergeFrom(from._internal_runtime_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRuntimesResponse::CopyFrom(const ListRuntimesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.ListRuntimesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRuntimesResponse::IsInitialized() const {
  return true;
}

void ListRuntimesResponse::InternalSwap(ListRuntimesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_list_, other->runtime_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRuntimesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[15]);
}

// ===================================================================

class ResponseMessageDeleteRuntimeByAppIdRequest::_Internal {
 public:
};

ResponseMessageDeleteRuntimeByAppIdRequest::ResponseMessageDeleteRuntimeByAppIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
}
ResponseMessageDeleteRuntimeByAppIdRequest::ResponseMessageDeleteRuntimeByAppIdRequest(const ResponseMessageDeleteRuntimeByAppIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_application_id().empty()) {
    application_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_application_id(), 
      GetArenaForAllocation());
  }
  name_application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name_application().empty()) {
    name_application_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name_application(), 
      GetArenaForAllocation());
  }
  integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_integration_id().empty()) {
    integration_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_integration_id(), 
      GetArenaForAllocation());
  }
  project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_id().empty()) {
    project_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project_id(), 
      GetArenaForAllocation());
  }
  organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
}

inline void ResponseMessageDeleteRuntimeByAppIdRequest::SharedCtor() {
application_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_application_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
integration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
organization_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResponseMessageDeleteRuntimeByAppIdRequest::~ResponseMessageDeleteRuntimeByAppIdRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseMessageDeleteRuntimeByAppIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  application_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_application_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  integration_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseMessageDeleteRuntimeByAppIdRequest::ArenaDtor(void* object) {
  ResponseMessageDeleteRuntimeByAppIdRequest* _this = reinterpret_cast< ResponseMessageDeleteRuntimeByAppIdRequest* >(object);
  (void)_this;
}
void ResponseMessageDeleteRuntimeByAppIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseMessageDeleteRuntimeByAppIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseMessageDeleteRuntimeByAppIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  application_id_.ClearToEmpty();
  name_application_.ClearToEmpty();
  integration_id_.ClearToEmpty();
  project_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMessageDeleteRuntimeByAppIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string application_id = 1 [json_name = "applicationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_application_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.application_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name_application = 2 [json_name = "nameApplication"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name_application();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.name_application"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string integration_id = 3 [json_name = "integrationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_integration_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.integration_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_id = 4 [json_name = "projectId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_project_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.project_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string organization_id = 5 [json_name = "organizationId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.organization_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResponseMessageDeleteRuntimeByAppIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string application_id = 1 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_application_id().data(), static_cast<int>(this->_internal_application_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.application_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_application_id(), target);
  }

  // string name_application = 2 [json_name = "nameApplication"];
  if (!this->_internal_name_application().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name_application().data(), static_cast<int>(this->_internal_name_application().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.name_application");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name_application(), target);
  }

  // string integration_id = 3 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_integration_id().data(), static_cast<int>(this->_internal_integration_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.integration_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_integration_id(), target);
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_id().data(), static_cast<int>(this->_internal_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.project_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_project_id(), target);
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  return target;
}

size_t ResponseMessageDeleteRuntimeByAppIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string application_id = 1 [json_name = "applicationId"];
  if (!this->_internal_application_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_application_id());
  }

  // string name_application = 2 [json_name = "nameApplication"];
  if (!this->_internal_name_application().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name_application());
  }

  // string integration_id = 3 [json_name = "integrationId"];
  if (!this->_internal_integration_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_integration_id());
  }

  // string project_id = 4 [json_name = "projectId"];
  if (!this->_internal_project_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_id());
  }

  // string organization_id = 5 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMessageDeleteRuntimeByAppIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseMessageDeleteRuntimeByAppIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMessageDeleteRuntimeByAppIdRequest::GetClassData() const { return &_class_data_; }

void ResponseMessageDeleteRuntimeByAppIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ResponseMessageDeleteRuntimeByAppIdRequest *>(to)->MergeFrom(
      static_cast<const ResponseMessageDeleteRuntimeByAppIdRequest &>(from));
}


void ResponseMessageDeleteRuntimeByAppIdRequest::MergeFrom(const ResponseMessageDeleteRuntimeByAppIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_application_id().empty()) {
    _internal_set_application_id(from._internal_application_id());
  }
  if (!from._internal_name_application().empty()) {
    _internal_set_name_application(from._internal_name_application());
  }
  if (!from._internal_integration_id().empty()) {
    _internal_set_integration_id(from._internal_integration_id());
  }
  if (!from._internal_project_id().empty()) {
    _internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMessageDeleteRuntimeByAppIdRequest::CopyFrom(const ResponseMessageDeleteRuntimeByAppIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMessageDeleteRuntimeByAppIdRequest::IsInitialized() const {
  return true;
}

void ResponseMessageDeleteRuntimeByAppIdRequest::InternalSwap(ResponseMessageDeleteRuntimeByAppIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &application_id_, GetArenaForAllocation(),
      &other->application_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_application_, GetArenaForAllocation(),
      &other->name_application_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &integration_id_, GetArenaForAllocation(),
      &other->integration_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &project_id_, GetArenaForAllocation(),
      &other->project_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &organization_id_, GetArenaForAllocation(),
      &other->organization_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMessageDeleteRuntimeByAppIdRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[16]);
}

// ===================================================================

class ResponseMessageDeleteRuntimeByAppIdResponse::_Internal {
 public:
};

ResponseMessageDeleteRuntimeByAppIdResponse::ResponseMessageDeleteRuntimeByAppIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
}
ResponseMessageDeleteRuntimeByAppIdResponse::ResponseMessageDeleteRuntimeByAppIdResponse(const ResponseMessageDeleteRuntimeByAppIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
}

inline void ResponseMessageDeleteRuntimeByAppIdResponse::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResponseMessageDeleteRuntimeByAppIdResponse::~ResponseMessageDeleteRuntimeByAppIdResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseMessageDeleteRuntimeByAppIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResponseMessageDeleteRuntimeByAppIdResponse::ArenaDtor(void* object) {
  ResponseMessageDeleteRuntimeByAppIdResponse* _this = reinterpret_cast< ResponseMessageDeleteRuntimeByAppIdResponse* >(object);
  (void)_this;
}
void ResponseMessageDeleteRuntimeByAppIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseMessageDeleteRuntimeByAppIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseMessageDeleteRuntimeByAppIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  error_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMessageDeleteRuntimeByAppIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1 [json_name = "msg"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResponseMessageDeleteRuntimeByAppIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  return target;
}

size_t ResponseMessageDeleteRuntimeByAppIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1 [json_name = "msg"];
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string error = 2 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMessageDeleteRuntimeByAppIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseMessageDeleteRuntimeByAppIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMessageDeleteRuntimeByAppIdResponse::GetClassData() const { return &_class_data_; }

void ResponseMessageDeleteRuntimeByAppIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ResponseMessageDeleteRuntimeByAppIdResponse *>(to)->MergeFrom(
      static_cast<const ResponseMessageDeleteRuntimeByAppIdResponse &>(from));
}


void ResponseMessageDeleteRuntimeByAppIdResponse::MergeFrom(const ResponseMessageDeleteRuntimeByAppIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMessageDeleteRuntimeByAppIdResponse::CopyFrom(const ResponseMessageDeleteRuntimeByAppIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.ResponseMessageDeleteRuntimeByAppIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMessageDeleteRuntimeByAppIdResponse::IsInitialized() const {
  return true;
}

void ResponseMessageDeleteRuntimeByAppIdResponse::InternalSwap(ResponseMessageDeleteRuntimeByAppIdResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, GetArenaForAllocation(),
      &other->msg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, GetArenaForAllocation(),
      &other->error_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMessageDeleteRuntimeByAppIdResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[17]);
}

// ===================================================================

class RebuildRuntimeRequest::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const RebuildRuntimeRequest* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
RebuildRuntimeRequest::_Internal::runtime(const RebuildRuntimeRequest* msg) {
  return *msg->runtime_;
}
void RebuildRuntimeRequest::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
RebuildRuntimeRequest::RebuildRuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
}
RebuildRuntimeRequest::RebuildRuntimeRequest(const RebuildRuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
}

inline void RebuildRuntimeRequest::SharedCtor() {
user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

RebuildRuntimeRequest::~RebuildRuntimeRequest() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RebuildRuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void RebuildRuntimeRequest::ArenaDtor(void* object) {
  RebuildRuntimeRequest* _this = reinterpret_cast< RebuildRuntimeRequest* >(object);
  (void)_this;
}
void RebuildRuntimeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildRuntimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildRuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildRuntimeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.RebuildRuntimeRequest.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildRuntimeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.RebuildRuntimeRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  return target;
}

size_t RebuildRuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RebuildRuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RebuildRuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RebuildRuntimeRequest::GetClassData() const { return &_class_data_; }

void RebuildRuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RebuildRuntimeRequest *>(to)->MergeFrom(
      static_cast<const RebuildRuntimeRequest &>(from));
}


void RebuildRuntimeRequest::MergeFrom(const RebuildRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RebuildRuntimeRequest::CopyFrom(const RebuildRuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.RebuildRuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildRuntimeRequest::IsInitialized() const {
  return true;
}

void RebuildRuntimeRequest::InternalSwap(RebuildRuntimeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_id_, GetArenaForAllocation(),
      &other->user_id_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildRuntimeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[18]);
}

// ===================================================================

class RebuildRuntimeResponse::_Internal {
 public:
  static const ::pipelines::runtime::v1alpha1::Runtime& runtime(const RebuildRuntimeResponse* msg);
};

const ::pipelines::runtime::v1alpha1::Runtime&
RebuildRuntimeResponse::_Internal::runtime(const RebuildRuntimeResponse* msg) {
  return *msg->runtime_;
}
void RebuildRuntimeResponse::clear_runtime() {
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
}
RebuildRuntimeResponse::RebuildRuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
}
RebuildRuntimeResponse::RebuildRuntimeResponse(const RebuildRuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_runtime()) {
    runtime_ = new ::pipelines::runtime::v1alpha1::Runtime(*from.runtime_);
  } else {
    runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
}

inline void RebuildRuntimeResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
runtime_ = nullptr;
}

RebuildRuntimeResponse::~RebuildRuntimeResponse() {
  // @@protoc_insertion_point(destructor:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RebuildRuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
}

void RebuildRuntimeResponse::ArenaDtor(void* object) {
  RebuildRuntimeResponse* _this = reinterpret_cast< RebuildRuntimeResponse* >(object);
  (void)_this;
}
void RebuildRuntimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildRuntimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildRuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && runtime_ != nullptr) {
    delete runtime_;
  }
  runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildRuntimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pipelines.runtime.v1alpha1.RebuildRuntimeResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildRuntimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::runtime(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pipelines.runtime.v1alpha1.RebuildRuntimeResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  return target;
}

size_t RebuildRuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .pipelines.runtime.v1alpha1.Runtime runtime = 1 [json_name = "runtime"];
  if (this->_internal_has_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RebuildRuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RebuildRuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RebuildRuntimeResponse::GetClassData() const { return &_class_data_; }

void RebuildRuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RebuildRuntimeResponse *>(to)->MergeFrom(
      static_cast<const RebuildRuntimeResponse &>(from));
}


void RebuildRuntimeResponse::MergeFrom(const RebuildRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_runtime()) {
    _internal_mutable_runtime()->::pipelines::runtime::v1alpha1::Runtime::MergeFrom(from._internal_runtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RebuildRuntimeResponse::CopyFrom(const RebuildRuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.runtime.v1alpha1.RebuildRuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildRuntimeResponse::IsInitialized() const {
  return true;
}

void RebuildRuntimeResponse::InternalSwap(RebuildRuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(runtime_, other->runtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildRuntimeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_getter, &descriptor_table_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto_once,
      file_level_metadata_pipelines_2fruntime_2fv1alpha1_2fruntime_5fapi_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace pipelines
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::CreateRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::CreateRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::CreateRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::CreateRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::CreateRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::CreateRuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::UpdateRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::UpdateRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::UpdateRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::UpdateRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::UpdateRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::UpdateRuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::UpdateResponseMessageRuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimesByApplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::DeleteRuntimesByEnvironmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::GetRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::GetRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::GetRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::GetRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::GetRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::GetRuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::ListRuntimesRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::ListRuntimesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::ListRuntimesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::ListRuntimesResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::ListRuntimesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::ListRuntimesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::ResponseMessageDeleteRuntimeByAppIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::RebuildRuntimeRequest* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::RebuildRuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::RebuildRuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pipelines::runtime::v1alpha1::RebuildRuntimeResponse* Arena::CreateMaybeMessage< ::pipelines::runtime::v1alpha1::RebuildRuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pipelines::runtime::v1alpha1::RebuildRuntimeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
