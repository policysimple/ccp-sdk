// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: billing/v1alpha1/billing_api.proto

#include "billing/v1alpha1/billing_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace billing {
namespace v1alpha1 {
constexpr CreateBillingRequest::CreateBillingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_(nullptr){}
struct CreateBillingRequestDefaultTypeInternal {
  constexpr CreateBillingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateBillingRequestDefaultTypeInternal() {}
  union {
    CreateBillingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateBillingRequestDefaultTypeInternal _CreateBillingRequest_default_instance_;
constexpr CreateBillingResponse::CreateBillingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateBillingResponseDefaultTypeInternal {
  constexpr CreateBillingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateBillingResponseDefaultTypeInternal() {}
  union {
    CreateBillingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateBillingResponseDefaultTypeInternal _CreateBillingResponse_default_instance_;
constexpr GetBillingRequest::GetBillingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBillingRequestDefaultTypeInternal {
  constexpr GetBillingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBillingRequestDefaultTypeInternal() {}
  union {
    GetBillingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBillingRequestDefaultTypeInternal _GetBillingRequest_default_instance_;
constexpr GetBillingResponse::GetBillingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_(nullptr){}
struct GetBillingResponseDefaultTypeInternal {
  constexpr GetBillingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBillingResponseDefaultTypeInternal() {}
  union {
    GetBillingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBillingResponseDefaultTypeInternal _GetBillingResponse_default_instance_;
constexpr UpdateBillingRequest::UpdateBillingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateBillingRequestDefaultTypeInternal {
  constexpr UpdateBillingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateBillingRequestDefaultTypeInternal() {}
  union {
    UpdateBillingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateBillingRequestDefaultTypeInternal _UpdateBillingRequest_default_instance_;
constexpr UpdateBillingResponse::UpdateBillingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : billing_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateBillingResponseDefaultTypeInternal {
  constexpr UpdateBillingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateBillingResponseDefaultTypeInternal() {}
  union {
    UpdateBillingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateBillingResponseDefaultTypeInternal _UpdateBillingResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace billing
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_billing_2fv1alpha1_2fbilling_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_billing_2fv1alpha1_2fbilling_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_billing_2fv1alpha1_2fbilling_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::CreateBillingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::CreateBillingRequest, billing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::CreateBillingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::CreateBillingResponse, billing_id_),
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::CreateBillingResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::GetBillingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::GetBillingRequest, billing_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::GetBillingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::GetBillingResponse, billing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::UpdateBillingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::UpdateBillingRequest, billing_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::UpdateBillingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::UpdateBillingResponse, billing_id_),
  PROTOBUF_FIELD_OFFSET(::billing::v1alpha1::UpdateBillingResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::billing::v1alpha1::CreateBillingRequest)},
  { 6, -1, sizeof(::billing::v1alpha1::CreateBillingResponse)},
  { 13, -1, sizeof(::billing::v1alpha1::GetBillingRequest)},
  { 19, -1, sizeof(::billing::v1alpha1::GetBillingResponse)},
  { 25, -1, sizeof(::billing::v1alpha1::UpdateBillingRequest)},
  { 31, -1, sizeof(::billing::v1alpha1::UpdateBillingResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_CreateBillingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_CreateBillingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_GetBillingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_GetBillingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_UpdateBillingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::billing::v1alpha1::_UpdateBillingResponse_default_instance_),
};

const char descriptor_table_protodef_billing_2fv1alpha1_2fbilling_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"billing/v1alpha1/billing_api.proto\022\020bi"
  "lling.v1alpha1\032\036billing/v1alpha1/billing"
  ".proto\"K\n\024CreateBillingRequest\0223\n\007billin"
  "g\030\001 \001(\0132\031.billing.v1alpha1.BillingR\007bill"
  "ing\"N\n\025CreateBillingResponse\022\035\n\nbilling_"
  "id\030\001 \001(\tR\tbillingId\022\026\n\006status\030\002 \001(\tR\006sta"
  "tus\"2\n\021GetBillingRequest\022\035\n\nbilling_id\030\001"
  " \001(\tR\tbillingId\"I\n\022GetBillingResponse\0223\n"
  "\007billing\030\001 \001(\0132\031.billing.v1alpha1.Billin"
  "gR\007billing\"5\n\024UpdateBillingRequest\022\035\n\nbi"
  "lling_id\030\001 \001(\tR\tbillingId\"N\n\025UpdateBilli"
  "ngResponse\022\035\n\nbilling_id\030\001 \001(\tR\tbillingI"
  "d\022\026\n\006status\030\002 \001(\tR\006status2\263\002\n\016BillingSer"
  "vice\022b\n\rCreateBilling\022&.billing.v1alpha1"
  ".CreateBillingRequest\032\'.billing.v1alpha1"
  ".CreateBillingResponse\"\000\022Y\n\nGetBilling\022#"
  ".billing.v1alpha1.GetBillingRequest\032$.bi"
  "lling.v1alpha1.GetBillingResponse\"\000\022b\n\rU"
  "pdateBilling\022&.billing.v1alpha1.UpdateBi"
  "llingRequest\032\'.billing.v1alpha1.UpdateBi"
  "llingResponse\"\000B7Z5github.com/cuemby/ccp"
  "-billing-service/billingv1alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_deps[1] = {
  &::descriptor_table_billing_2fv1alpha1_2fbilling_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto = {
  false, false, 880, descriptor_table_protodef_billing_2fv1alpha1_2fbilling_5fapi_2eproto, "billing/v1alpha1/billing_api.proto", 
  &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once, descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_billing_2fv1alpha1_2fbilling_5fapi_2eproto::offsets,
  file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto, file_level_enum_descriptors_billing_2fv1alpha1_2fbilling_5fapi_2eproto, file_level_service_descriptors_billing_2fv1alpha1_2fbilling_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter() {
  return &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_billing_2fv1alpha1_2fbilling_5fapi_2eproto(&descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto);
namespace billing {
namespace v1alpha1 {

// ===================================================================

class CreateBillingRequest::_Internal {
 public:
  static const ::billing::v1alpha1::Billing& billing(const CreateBillingRequest* msg);
};

const ::billing::v1alpha1::Billing&
CreateBillingRequest::_Internal::billing(const CreateBillingRequest* msg) {
  return *msg->billing_;
}
void CreateBillingRequest::clear_billing() {
  if (GetArenaForAllocation() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
}
CreateBillingRequest::CreateBillingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.CreateBillingRequest)
}
CreateBillingRequest::CreateBillingRequest(const CreateBillingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_billing()) {
    billing_ = new ::billing::v1alpha1::Billing(*from.billing_);
  } else {
    billing_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.CreateBillingRequest)
}

inline void CreateBillingRequest::SharedCtor() {
billing_ = nullptr;
}

CreateBillingRequest::~CreateBillingRequest() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.CreateBillingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateBillingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete billing_;
}

void CreateBillingRequest::ArenaDtor(void* object) {
  CreateBillingRequest* _this = reinterpret_cast< CreateBillingRequest* >(object);
  (void)_this;
}
void CreateBillingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateBillingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateBillingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.CreateBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateBillingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_billing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateBillingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.CreateBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
  if (this->_internal_has_billing()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::billing(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.CreateBillingRequest)
  return target;
}

size_t CreateBillingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.CreateBillingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
  if (this->_internal_has_billing()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateBillingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateBillingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateBillingRequest::GetClassData() const { return &_class_data_; }

void CreateBillingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateBillingRequest *>(to)->MergeFrom(
      static_cast<const CreateBillingRequest &>(from));
}


void CreateBillingRequest::MergeFrom(const CreateBillingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.CreateBillingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_billing()) {
    _internal_mutable_billing()->::billing::v1alpha1::Billing::MergeFrom(from._internal_billing());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBillingRequest::CopyFrom(const CreateBillingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.CreateBillingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBillingRequest::IsInitialized() const {
  return true;
}

void CreateBillingRequest::InternalSwap(CreateBillingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(billing_, other->billing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateBillingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[0]);
}

// ===================================================================

class CreateBillingResponse::_Internal {
 public:
};

CreateBillingResponse::CreateBillingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.CreateBillingResponse)
}
CreateBillingResponse::CreateBillingResponse(const CreateBillingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_billing_id().empty()) {
    billing_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_billing_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.CreateBillingResponse)
}

inline void CreateBillingResponse::SharedCtor() {
billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateBillingResponse::~CreateBillingResponse() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.CreateBillingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateBillingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  billing_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateBillingResponse::ArenaDtor(void* object) {
  CreateBillingResponse* _this = reinterpret_cast< CreateBillingResponse* >(object);
  (void)_this;
}
void CreateBillingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateBillingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateBillingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.CreateBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  billing_id_.ClearToEmpty();
  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateBillingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string billing_id = 1 [json_name = "billingId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_billing_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.CreateBillingResponse.billing_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.CreateBillingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateBillingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.CreateBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_billing_id().data(), static_cast<int>(this->_internal_billing_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.CreateBillingResponse.billing_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_billing_id(), target);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.CreateBillingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.CreateBillingResponse)
  return target;
}

size_t CreateBillingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.CreateBillingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_billing_id());
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateBillingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateBillingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateBillingResponse::GetClassData() const { return &_class_data_; }

void CreateBillingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateBillingResponse *>(to)->MergeFrom(
      static_cast<const CreateBillingResponse &>(from));
}


void CreateBillingResponse::MergeFrom(const CreateBillingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.CreateBillingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_billing_id().empty()) {
    _internal_set_billing_id(from._internal_billing_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBillingResponse::CopyFrom(const CreateBillingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.CreateBillingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBillingResponse::IsInitialized() const {
  return true;
}

void CreateBillingResponse::InternalSwap(CreateBillingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &billing_id_, GetArenaForAllocation(),
      &other->billing_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateBillingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[1]);
}

// ===================================================================

class GetBillingRequest::_Internal {
 public:
};

GetBillingRequest::GetBillingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.GetBillingRequest)
}
GetBillingRequest::GetBillingRequest(const GetBillingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_billing_id().empty()) {
    billing_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_billing_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.GetBillingRequest)
}

inline void GetBillingRequest::SharedCtor() {
billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBillingRequest::~GetBillingRequest() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.GetBillingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBillingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  billing_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBillingRequest::ArenaDtor(void* object) {
  GetBillingRequest* _this = reinterpret_cast< GetBillingRequest* >(object);
  (void)_this;
}
void GetBillingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBillingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBillingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.GetBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  billing_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBillingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string billing_id = 1 [json_name = "billingId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_billing_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.GetBillingRequest.billing_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBillingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.GetBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_billing_id().data(), static_cast<int>(this->_internal_billing_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.GetBillingRequest.billing_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_billing_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.GetBillingRequest)
  return target;
}

size_t GetBillingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.GetBillingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_billing_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBillingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBillingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBillingRequest::GetClassData() const { return &_class_data_; }

void GetBillingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetBillingRequest *>(to)->MergeFrom(
      static_cast<const GetBillingRequest &>(from));
}


void GetBillingRequest::MergeFrom(const GetBillingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.GetBillingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_billing_id().empty()) {
    _internal_set_billing_id(from._internal_billing_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBillingRequest::CopyFrom(const GetBillingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.GetBillingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBillingRequest::IsInitialized() const {
  return true;
}

void GetBillingRequest::InternalSwap(GetBillingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &billing_id_, GetArenaForAllocation(),
      &other->billing_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBillingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[2]);
}

// ===================================================================

class GetBillingResponse::_Internal {
 public:
  static const ::billing::v1alpha1::Billing& billing(const GetBillingResponse* msg);
};

const ::billing::v1alpha1::Billing&
GetBillingResponse::_Internal::billing(const GetBillingResponse* msg) {
  return *msg->billing_;
}
void GetBillingResponse::clear_billing() {
  if (GetArenaForAllocation() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
}
GetBillingResponse::GetBillingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.GetBillingResponse)
}
GetBillingResponse::GetBillingResponse(const GetBillingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_billing()) {
    billing_ = new ::billing::v1alpha1::Billing(*from.billing_);
  } else {
    billing_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.GetBillingResponse)
}

inline void GetBillingResponse::SharedCtor() {
billing_ = nullptr;
}

GetBillingResponse::~GetBillingResponse() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.GetBillingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBillingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete billing_;
}

void GetBillingResponse::ArenaDtor(void* object) {
  GetBillingResponse* _this = reinterpret_cast< GetBillingResponse* >(object);
  (void)_this;
}
void GetBillingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBillingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBillingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.GetBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && billing_ != nullptr) {
    delete billing_;
  }
  billing_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBillingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_billing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBillingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.GetBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
  if (this->_internal_has_billing()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::billing(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.GetBillingResponse)
  return target;
}

size_t GetBillingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.GetBillingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .billing.v1alpha1.Billing billing = 1 [json_name = "billing"];
  if (this->_internal_has_billing()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBillingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBillingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBillingResponse::GetClassData() const { return &_class_data_; }

void GetBillingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetBillingResponse *>(to)->MergeFrom(
      static_cast<const GetBillingResponse &>(from));
}


void GetBillingResponse::MergeFrom(const GetBillingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.GetBillingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_billing()) {
    _internal_mutable_billing()->::billing::v1alpha1::Billing::MergeFrom(from._internal_billing());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBillingResponse::CopyFrom(const GetBillingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.GetBillingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBillingResponse::IsInitialized() const {
  return true;
}

void GetBillingResponse::InternalSwap(GetBillingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(billing_, other->billing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBillingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[3]);
}

// ===================================================================

class UpdateBillingRequest::_Internal {
 public:
};

UpdateBillingRequest::UpdateBillingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.UpdateBillingRequest)
}
UpdateBillingRequest::UpdateBillingRequest(const UpdateBillingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_billing_id().empty()) {
    billing_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_billing_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.UpdateBillingRequest)
}

inline void UpdateBillingRequest::SharedCtor() {
billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateBillingRequest::~UpdateBillingRequest() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.UpdateBillingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateBillingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  billing_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateBillingRequest::ArenaDtor(void* object) {
  UpdateBillingRequest* _this = reinterpret_cast< UpdateBillingRequest* >(object);
  (void)_this;
}
void UpdateBillingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateBillingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBillingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.UpdateBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  billing_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBillingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string billing_id = 1 [json_name = "billingId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_billing_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.UpdateBillingRequest.billing_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateBillingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.UpdateBillingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_billing_id().data(), static_cast<int>(this->_internal_billing_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.UpdateBillingRequest.billing_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_billing_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.UpdateBillingRequest)
  return target;
}

size_t UpdateBillingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.UpdateBillingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_billing_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBillingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBillingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBillingRequest::GetClassData() const { return &_class_data_; }

void UpdateBillingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateBillingRequest *>(to)->MergeFrom(
      static_cast<const UpdateBillingRequest &>(from));
}


void UpdateBillingRequest::MergeFrom(const UpdateBillingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.UpdateBillingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_billing_id().empty()) {
    _internal_set_billing_id(from._internal_billing_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBillingRequest::CopyFrom(const UpdateBillingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.UpdateBillingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBillingRequest::IsInitialized() const {
  return true;
}

void UpdateBillingRequest::InternalSwap(UpdateBillingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &billing_id_, GetArenaForAllocation(),
      &other->billing_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBillingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[4]);
}

// ===================================================================

class UpdateBillingResponse::_Internal {
 public:
};

UpdateBillingResponse::UpdateBillingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:billing.v1alpha1.UpdateBillingResponse)
}
UpdateBillingResponse::UpdateBillingResponse(const UpdateBillingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_billing_id().empty()) {
    billing_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_billing_id(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:billing.v1alpha1.UpdateBillingResponse)
}

inline void UpdateBillingResponse::SharedCtor() {
billing_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UpdateBillingResponse::~UpdateBillingResponse() {
  // @@protoc_insertion_point(destructor:billing.v1alpha1.UpdateBillingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateBillingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  billing_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateBillingResponse::ArenaDtor(void* object) {
  UpdateBillingResponse* _this = reinterpret_cast< UpdateBillingResponse* >(object);
  (void)_this;
}
void UpdateBillingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateBillingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBillingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:billing.v1alpha1.UpdateBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  billing_id_.ClearToEmpty();
  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBillingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string billing_id = 1 [json_name = "billingId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_billing_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.UpdateBillingResponse.billing_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "billing.v1alpha1.UpdateBillingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateBillingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:billing.v1alpha1.UpdateBillingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_billing_id().data(), static_cast<int>(this->_internal_billing_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.UpdateBillingResponse.billing_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_billing_id(), target);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "billing.v1alpha1.UpdateBillingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:billing.v1alpha1.UpdateBillingResponse)
  return target;
}

size_t UpdateBillingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:billing.v1alpha1.UpdateBillingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string billing_id = 1 [json_name = "billingId"];
  if (!this->_internal_billing_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_billing_id());
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBillingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBillingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBillingResponse::GetClassData() const { return &_class_data_; }

void UpdateBillingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateBillingResponse *>(to)->MergeFrom(
      static_cast<const UpdateBillingResponse &>(from));
}


void UpdateBillingResponse::MergeFrom(const UpdateBillingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:billing.v1alpha1.UpdateBillingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_billing_id().empty()) {
    _internal_set_billing_id(from._internal_billing_id());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBillingResponse::CopyFrom(const UpdateBillingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:billing.v1alpha1.UpdateBillingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBillingResponse::IsInitialized() const {
  return true;
}

void UpdateBillingResponse::InternalSwap(UpdateBillingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &billing_id_, GetArenaForAllocation(),
      &other->billing_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBillingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_getter, &descriptor_table_billing_2fv1alpha1_2fbilling_5fapi_2eproto_once,
      file_level_metadata_billing_2fv1alpha1_2fbilling_5fapi_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace billing
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::CreateBillingRequest* Arena::CreateMaybeMessage< ::billing::v1alpha1::CreateBillingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::CreateBillingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::CreateBillingResponse* Arena::CreateMaybeMessage< ::billing::v1alpha1::CreateBillingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::CreateBillingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::GetBillingRequest* Arena::CreateMaybeMessage< ::billing::v1alpha1::GetBillingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::GetBillingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::GetBillingResponse* Arena::CreateMaybeMessage< ::billing::v1alpha1::GetBillingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::GetBillingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::UpdateBillingRequest* Arena::CreateMaybeMessage< ::billing::v1alpha1::UpdateBillingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::UpdateBillingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::billing::v1alpha1::UpdateBillingResponse* Arena::CreateMaybeMessage< ::billing::v1alpha1::UpdateBillingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::billing::v1alpha1::UpdateBillingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
