// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performance/metrics/v1alpha1/metrics.proto

#include "performance/metrics/v1alpha1/metrics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace performance {
namespace metrics {
namespace v1alpha1 {
constexpr MetricItem::MetricItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : date_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , container_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(0){}
struct MetricItemDefaultTypeInternal {
  constexpr MetricItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MetricItemDefaultTypeInternal() {}
  union {
    MetricItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MetricItemDefaultTypeInternal _MetricItem_default_instance_;
}  // namespace v1alpha1
}  // namespace metrics
}  // namespace performance
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::metrics::v1alpha1::MetricItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::metrics::v1alpha1::MetricItem, date_),
  PROTOBUF_FIELD_OFFSET(::performance::metrics::v1alpha1::MetricItem, container_),
  PROTOBUF_FIELD_OFFSET(::performance::metrics::v1alpha1::MetricItem, resource_),
  PROTOBUF_FIELD_OFFSET(::performance::metrics::v1alpha1::MetricItem, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::performance::metrics::v1alpha1::MetricItem)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::metrics::v1alpha1::_MetricItem_default_instance_),
};

const char descriptor_table_protodef_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*performance/metrics/v1alpha1/metrics.p"
  "roto\022\034performance.metrics.v1alpha1\"p\n\nMe"
  "tricItem\022\022\n\004date\030\001 \001(\tR\004date\022\034\n\tcontaine"
  "r\030\002 \001(\tR\tcontainer\022\032\n\010resource\030\003 \001(\tR\010re"
  "source\022\024\n\005value\030\004 \001(\001R\005valueB\255\001\n&io.cuem"
  "by.performance.metrics.v1alpha1B\014Metrics"
  "ProtoP\001Z/github.com/performance-grpc-sdk"
  "/metricsv1alpha1\242\002\003PFX\252\002\034Performance.Met"
  "rics.V1Alpha1\312\002\034Performance\\Metrics\\V1Al"
  "pha1b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto = {
  false, false, 372, descriptor_table_protodef_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto, "performance/metrics/v1alpha1/metrics.proto", 
  &descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto::offsets,
  file_level_metadata_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto, file_level_enum_descriptors_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto, file_level_service_descriptors_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto_getter() {
  return &descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto(&descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto);
namespace performance {
namespace metrics {
namespace v1alpha1 {

// ===================================================================

class MetricItem::_Internal {
 public:
};

MetricItem::MetricItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.metrics.v1alpha1.MetricItem)
}
MetricItem::MetricItem(const MetricItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_date().empty()) {
    date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_date(), 
      GetArenaForAllocation());
  }
  container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_container().empty()) {
    container_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_container(), 
      GetArenaForAllocation());
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:performance.metrics.v1alpha1.MetricItem)
}

inline void MetricItem::SharedCtor() {
date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
value_ = 0;
}

MetricItem::~MetricItem() {
  // @@protoc_insertion_point(destructor:performance.metrics.v1alpha1.MetricItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MetricItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  container_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MetricItem::ArenaDtor(void* object) {
  MetricItem* _this = reinterpret_cast< MetricItem* >(object);
  (void)_this;
}
void MetricItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MetricItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MetricItem::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.metrics.v1alpha1.MetricItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmpty();
  container_.ClearToEmpty();
  resource_.ClearToEmpty();
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetricItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string date = 1 [json_name = "date"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.metrics.v1alpha1.MetricItem.date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string container = 2 [json_name = "container"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_container();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.metrics.v1alpha1.MetricItem.container"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 3 [json_name = "resource"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.metrics.v1alpha1.MetricItem.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double value = 4 [json_name = "value"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetricItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.metrics.v1alpha1.MetricItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1 [json_name = "date"];
  if (!this->_internal_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_date().data(), static_cast<int>(this->_internal_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.metrics.v1alpha1.MetricItem.date");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_date(), target);
  }

  // string container = 2 [json_name = "container"];
  if (!this->_internal_container().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.metrics.v1alpha1.MetricItem.container");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_container(), target);
  }

  // string resource = 3 [json_name = "resource"];
  if (!this->_internal_resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.metrics.v1alpha1.MetricItem.resource");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resource(), target);
  }

  // double value = 4 [json_name = "value"];
  if (!(this->_internal_value() <= 0 && this->_internal_value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.metrics.v1alpha1.MetricItem)
  return target;
}

size_t MetricItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.metrics.v1alpha1.MetricItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string date = 1 [json_name = "date"];
  if (!this->_internal_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_date());
  }

  // string container = 2 [json_name = "container"];
  if (!this->_internal_container().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  // string resource = 3 [json_name = "resource"];
  if (!this->_internal_resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // double value = 4 [json_name = "value"];
  if (!(this->_internal_value() <= 0 && this->_internal_value() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetricItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MetricItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetricItem::GetClassData() const { return &_class_data_; }

void MetricItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<MetricItem *>(to)->MergeFrom(
      static_cast<const MetricItem &>(from));
}


void MetricItem::MergeFrom(const MetricItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.metrics.v1alpha1.MetricItem)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_date().empty()) {
    _internal_set_date(from._internal_date());
  }
  if (!from._internal_container().empty()) {
    _internal_set_container(from._internal_container());
  }
  if (!from._internal_resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!(from._internal_value() <= 0 && from._internal_value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetricItem::CopyFrom(const MetricItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.metrics.v1alpha1.MetricItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricItem::IsInitialized() const {
  return true;
}

void MetricItem::InternalSwap(MetricItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &date_, GetArenaForAllocation(),
      &other->date_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &container_, GetArenaForAllocation(),
      &other->container_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MetricItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto_getter, &descriptor_table_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto_once,
      file_level_metadata_performance_2fmetrics_2fv1alpha1_2fmetrics_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace metrics
}  // namespace performance
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::performance::metrics::v1alpha1::MetricItem* Arena::CreateMaybeMessage< ::performance::metrics::v1alpha1::MetricItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::metrics::v1alpha1::MetricItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
