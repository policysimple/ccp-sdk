// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performance/autoscaling/v1alpha1/autoscaling_agent_api.proto

#include "performance/autoscaling/v1alpha1/autoscaling_agent_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace performance {
namespace autoscaling {
namespace v1alpha1 {
constexpr AgentCreateAutoscalingResponse::AgentCreateAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscaling_(nullptr){}
struct AgentCreateAutoscalingResponseDefaultTypeInternal {
  constexpr AgentCreateAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentCreateAutoscalingResponseDefaultTypeInternal() {}
  union {
    AgentCreateAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentCreateAutoscalingResponseDefaultTypeInternal _AgentCreateAutoscalingResponse_default_instance_;
constexpr AgentCreateAutoscalingRequest::AgentCreateAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct AgentCreateAutoscalingRequestDefaultTypeInternal {
  constexpr AgentCreateAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentCreateAutoscalingRequestDefaultTypeInternal() {}
  union {
    AgentCreateAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentCreateAutoscalingRequestDefaultTypeInternal _AgentCreateAutoscalingRequest_default_instance_;
constexpr AgentUpdateAutoscalingResponse::AgentUpdateAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscaling_(nullptr){}
struct AgentUpdateAutoscalingResponseDefaultTypeInternal {
  constexpr AgentUpdateAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentUpdateAutoscalingResponseDefaultTypeInternal() {}
  union {
    AgentUpdateAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentUpdateAutoscalingResponseDefaultTypeInternal _AgentUpdateAutoscalingResponse_default_instance_;
constexpr AgentUpdateAutoscalingRequest::AgentUpdateAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct AgentUpdateAutoscalingRequestDefaultTypeInternal {
  constexpr AgentUpdateAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentUpdateAutoscalingRequestDefaultTypeInternal() {}
  union {
    AgentUpdateAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentUpdateAutoscalingRequestDefaultTypeInternal _AgentUpdateAutoscalingRequest_default_instance_;
constexpr AgentDeleteAutoscalingResponse::AgentDeleteAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct AgentDeleteAutoscalingResponseDefaultTypeInternal {
  constexpr AgentDeleteAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentDeleteAutoscalingResponseDefaultTypeInternal() {}
  union {
    AgentDeleteAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentDeleteAutoscalingResponseDefaultTypeInternal _AgentDeleteAutoscalingResponse_default_instance_;
constexpr AgentDeleteAutoscalingRequest::AgentDeleteAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , metadata_(nullptr){}
struct AgentDeleteAutoscalingRequestDefaultTypeInternal {
  constexpr AgentDeleteAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentDeleteAutoscalingRequestDefaultTypeInternal() {}
  union {
    AgentDeleteAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentDeleteAutoscalingRequestDefaultTypeInternal _AgentDeleteAutoscalingRequest_default_instance_;
constexpr AgentGetAutoscalingResponse::AgentGetAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct AgentGetAutoscalingResponseDefaultTypeInternal {
  constexpr AgentGetAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentGetAutoscalingResponseDefaultTypeInternal() {}
  union {
    AgentGetAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentGetAutoscalingResponseDefaultTypeInternal _AgentGetAutoscalingResponse_default_instance_;
constexpr AgentGetAutoscalingRequest::AgentGetAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct AgentGetAutoscalingRequestDefaultTypeInternal {
  constexpr AgentGetAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentGetAutoscalingRequestDefaultTypeInternal() {}
  union {
    AgentGetAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentGetAutoscalingRequestDefaultTypeInternal _AgentGetAutoscalingRequest_default_instance_;
constexpr AgentListAutoscalingResponse::AgentListAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct AgentListAutoscalingResponseDefaultTypeInternal {
  constexpr AgentListAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentListAutoscalingResponseDefaultTypeInternal() {}
  union {
    AgentListAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentListAutoscalingResponseDefaultTypeInternal _AgentListAutoscalingResponse_default_instance_;
constexpr AgentListAutoscalingRequest::AgentListAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscalings_(){}
struct AgentListAutoscalingRequestDefaultTypeInternal {
  constexpr AgentListAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentListAutoscalingRequestDefaultTypeInternal() {}
  union {
    AgentListAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentListAutoscalingRequestDefaultTypeInternal _AgentListAutoscalingRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse, autoscaling_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse, autoscaling_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest, autoscalings_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse)},
  { 6, -1, sizeof(::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest)},
  { 13, -1, sizeof(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse)},
  { 19, -1, sizeof(::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest)},
  { 26, -1, sizeof(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse)},
  { 32, -1, sizeof(::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest)},
  { 39, -1, sizeof(::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse)},
  { 45, -1, sizeof(::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest)},
  { 52, -1, sizeof(::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse)},
  { 58, -1, sizeof(::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentCreateAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentCreateAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentUpdateAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentUpdateAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentDeleteAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentDeleteAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentGetAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentGetAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentListAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_AgentListAutoscalingRequest_default_instance_),
};

const char descriptor_table_protodef_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n<performance/autoscaling/v1alpha1/autos"
  "caling_agent_api.proto\022 performance.auto"
  "scaling.v1alpha1\0322performance/autoscalin"
  "g/v1alpha1/autoscaling.proto\"q\n\036AgentCre"
  "ateAutoscalingResponse\022O\n\013autoscaling\030\001 "
  "\001(\0132-.performance.autoscaling.v1alpha1.A"
  "utoscalingR\013autoscaling\"\210\001\n\035AgentCreateA"
  "utoscalingRequest\022O\n\013autoscaling\030\001 \001(\0132-"
  ".performance.autoscaling.v1alpha1.Autosc"
  "alingR\013autoscaling\022\026\n\006status\030\002 \001(\tR\006stat"
  "us\"q\n\036AgentUpdateAutoscalingResponse\022O\n\013"
  "autoscaling\030\001 \001(\0132-.performance.autoscal"
  "ing.v1alpha1.AutoscalingR\013autoscaling\"\210\001"
  "\n\035AgentUpdateAutoscalingRequest\022O\n\013autos"
  "caling\030\001 \001(\0132-.performance.autoscaling.v"
  "1alpha1.AutoscalingR\013autoscaling\022\026\n\006stat"
  "us\030\002 \001(\tR\006status\"h\n\036AgentDeleteAutoscali"
  "ngResponse\022F\n\010metadata\030\001 \001(\0132*.performan"
  "ce.autoscaling.v1alpha1.MetadataR\010metada"
  "ta\"\177\n\035AgentDeleteAutoscalingRequest\022F\n\010m"
  "etadata\030\001 \001(\0132*.performance.autoscaling."
  "v1alpha1.MetadataR\010metadata\022\026\n\006status\030\002 "
  "\001(\tR\006status\"e\n\033AgentGetAutoscalingRespon"
  "se\022F\n\010metadata\030\001 \001(\0132*.performance.autos"
  "caling.v1alpha1.MetadataR\010metadata\"\205\001\n\032A"
  "gentGetAutoscalingRequest\022O\n\013autoscaling"
  "\030\001 \001(\0132-.performance.autoscaling.v1alpha"
  "1.AutoscalingR\013autoscaling\022\026\n\006status\030\002 \001"
  "(\tR\006status\"f\n\034AgentListAutoscalingRespon"
  "se\022F\n\010metadata\030\001 \001(\0132*.performance.autos"
  "caling.v1alpha1.MetadataR\010metadata\"p\n\033Ag"
  "entListAutoscalingRequest\022Q\n\014autoscaling"
  "s\030\001 \003(\0132-.performance.autoscaling.v1alph"
  "a1.AutoscalingR\014autoscalings2\301\006\n\032Autosca"
  "lingAgentAPIService\022\241\001\n\026AgentCreateAutos"
  "caling\022\?.performance.autoscaling.v1alpha"
  "1.AgentCreateAutoscalingRequest\032@.perfor"
  "mance.autoscaling.v1alpha1.AgentCreateAu"
  "toscalingResponse\"\000(\0010\001\022\241\001\n\026AgentUpdateA"
  "utoscaling\022\?.performance.autoscaling.v1a"
  "lpha1.AgentUpdateAutoscalingRequest\032@.pe"
  "rformance.autoscaling.v1alpha1.AgentUpda"
  "teAutoscalingResponse\"\000(\0010\001\022\241\001\n\026AgentDel"
  "eteAutoscaling\022\?.performance.autoscaling"
  ".v1alpha1.AgentDeleteAutoscalingRequest\032"
  "@.performance.autoscaling.v1alpha1.Agent"
  "DeleteAutoscalingResponse\"\000(\0010\001\022\230\001\n\023Agen"
  "tGetAutoscaling\022<.performance.autoscalin"
  "g.v1alpha1.AgentGetAutoscalingRequest\032=."
  "performance.autoscaling.v1alpha1.AgentGe"
  "tAutoscalingResponse\"\000(\0010\001\022\233\001\n\024AgentList"
  "Autoscaling\022=.performance.autoscaling.v1"
  "alpha1.AgentListAutoscalingRequest\032>.per"
  "formance.autoscaling.v1alpha1.AgentListA"
  "utoscalingResponse\"\000(\0010\001B\312\001\n*io.cuemby.p"
  "erformance.autoscaling.v1alpha1B\030Autosca"
  "lingAgentApiProtoP\001Z4github.com/performa"
  "nce-grpc-sdk/autoscaling/v1alpha1\242\002\003PFX\252"
  "\002 Performance.Autoscaling.V1Alpha1\312\002 Per"
  "formance\\Autoscaling\\V1Alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_deps[1] = {
  &::descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto = {
  false, false, 2397, descriptor_table_protodef_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto, "performance/autoscaling/v1alpha1/autoscaling_agent_api.proto", 
  &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once, descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto::offsets,
  file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto, file_level_enum_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto, file_level_service_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter() {
  return &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto(&descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto);
namespace performance {
namespace autoscaling {
namespace v1alpha1 {

// ===================================================================

class AgentCreateAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const AgentCreateAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
AgentCreateAutoscalingResponse::_Internal::autoscaling(const AgentCreateAutoscalingResponse* msg) {
  return *msg->autoscaling_;
}
void AgentCreateAutoscalingResponse::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
AgentCreateAutoscalingResponse::AgentCreateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
}
AgentCreateAutoscalingResponse::AgentCreateAutoscalingResponse(const AgentCreateAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
}

inline void AgentCreateAutoscalingResponse::SharedCtor() {
autoscaling_ = nullptr;
}

AgentCreateAutoscalingResponse::~AgentCreateAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentCreateAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete autoscaling_;
}

void AgentCreateAutoscalingResponse::ArenaDtor(void* object) {
  AgentCreateAutoscalingResponse* _this = reinterpret_cast< AgentCreateAutoscalingResponse* >(object);
  (void)_this;
}
void AgentCreateAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentCreateAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentCreateAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentCreateAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentCreateAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  return target;
}

size_t AgentCreateAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentCreateAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentCreateAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentCreateAutoscalingResponse::GetClassData() const { return &_class_data_; }

void AgentCreateAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentCreateAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const AgentCreateAutoscalingResponse &>(from));
}


void AgentCreateAutoscalingResponse::MergeFrom(const AgentCreateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentCreateAutoscalingResponse::CopyFrom(const AgentCreateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentCreateAutoscalingResponse::IsInitialized() const {
  return true;
}

void AgentCreateAutoscalingResponse::InternalSwap(AgentCreateAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentCreateAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[0]);
}

// ===================================================================

class AgentCreateAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const AgentCreateAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
AgentCreateAutoscalingRequest::_Internal::autoscaling(const AgentCreateAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
void AgentCreateAutoscalingRequest::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
AgentCreateAutoscalingRequest::AgentCreateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
}
AgentCreateAutoscalingRequest::AgentCreateAutoscalingRequest(const AgentCreateAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
}

inline void AgentCreateAutoscalingRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

AgentCreateAutoscalingRequest::~AgentCreateAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentCreateAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void AgentCreateAutoscalingRequest::ArenaDtor(void* object) {
  AgentCreateAutoscalingRequest* _this = reinterpret_cast< AgentCreateAutoscalingRequest* >(object);
  (void)_this;
}
void AgentCreateAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentCreateAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentCreateAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentCreateAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentCreateAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  return target;
}

size_t AgentCreateAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentCreateAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentCreateAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentCreateAutoscalingRequest::GetClassData() const { return &_class_data_; }

void AgentCreateAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentCreateAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const AgentCreateAutoscalingRequest &>(from));
}


void AgentCreateAutoscalingRequest::MergeFrom(const AgentCreateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentCreateAutoscalingRequest::CopyFrom(const AgentCreateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentCreateAutoscalingRequest::IsInitialized() const {
  return true;
}

void AgentCreateAutoscalingRequest::InternalSwap(AgentCreateAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentCreateAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[1]);
}

// ===================================================================

class AgentUpdateAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const AgentUpdateAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
AgentUpdateAutoscalingResponse::_Internal::autoscaling(const AgentUpdateAutoscalingResponse* msg) {
  return *msg->autoscaling_;
}
void AgentUpdateAutoscalingResponse::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
AgentUpdateAutoscalingResponse::AgentUpdateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
}
AgentUpdateAutoscalingResponse::AgentUpdateAutoscalingResponse(const AgentUpdateAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
}

inline void AgentUpdateAutoscalingResponse::SharedCtor() {
autoscaling_ = nullptr;
}

AgentUpdateAutoscalingResponse::~AgentUpdateAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentUpdateAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete autoscaling_;
}

void AgentUpdateAutoscalingResponse::ArenaDtor(void* object) {
  AgentUpdateAutoscalingResponse* _this = reinterpret_cast< AgentUpdateAutoscalingResponse* >(object);
  (void)_this;
}
void AgentUpdateAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentUpdateAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentUpdateAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentUpdateAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentUpdateAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  return target;
}

size_t AgentUpdateAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentUpdateAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentUpdateAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentUpdateAutoscalingResponse::GetClassData() const { return &_class_data_; }

void AgentUpdateAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentUpdateAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const AgentUpdateAutoscalingResponse &>(from));
}


void AgentUpdateAutoscalingResponse::MergeFrom(const AgentUpdateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentUpdateAutoscalingResponse::CopyFrom(const AgentUpdateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentUpdateAutoscalingResponse::IsInitialized() const {
  return true;
}

void AgentUpdateAutoscalingResponse::InternalSwap(AgentUpdateAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentUpdateAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[2]);
}

// ===================================================================

class AgentUpdateAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const AgentUpdateAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
AgentUpdateAutoscalingRequest::_Internal::autoscaling(const AgentUpdateAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
void AgentUpdateAutoscalingRequest::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
AgentUpdateAutoscalingRequest::AgentUpdateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
}
AgentUpdateAutoscalingRequest::AgentUpdateAutoscalingRequest(const AgentUpdateAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
}

inline void AgentUpdateAutoscalingRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

AgentUpdateAutoscalingRequest::~AgentUpdateAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentUpdateAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void AgentUpdateAutoscalingRequest::ArenaDtor(void* object) {
  AgentUpdateAutoscalingRequest* _this = reinterpret_cast< AgentUpdateAutoscalingRequest* >(object);
  (void)_this;
}
void AgentUpdateAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentUpdateAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentUpdateAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentUpdateAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentUpdateAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  return target;
}

size_t AgentUpdateAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentUpdateAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentUpdateAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentUpdateAutoscalingRequest::GetClassData() const { return &_class_data_; }

void AgentUpdateAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentUpdateAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const AgentUpdateAutoscalingRequest &>(from));
}


void AgentUpdateAutoscalingRequest::MergeFrom(const AgentUpdateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentUpdateAutoscalingRequest::CopyFrom(const AgentUpdateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentUpdateAutoscalingRequest::IsInitialized() const {
  return true;
}

void AgentUpdateAutoscalingRequest::InternalSwap(AgentUpdateAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentUpdateAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[3]);
}

// ===================================================================

class AgentDeleteAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const AgentDeleteAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
AgentDeleteAutoscalingResponse::_Internal::metadata(const AgentDeleteAutoscalingResponse* msg) {
  return *msg->metadata_;
}
void AgentDeleteAutoscalingResponse::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
AgentDeleteAutoscalingResponse::AgentDeleteAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
}
AgentDeleteAutoscalingResponse::AgentDeleteAutoscalingResponse(const AgentDeleteAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
}

inline void AgentDeleteAutoscalingResponse::SharedCtor() {
metadata_ = nullptr;
}

AgentDeleteAutoscalingResponse::~AgentDeleteAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentDeleteAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void AgentDeleteAutoscalingResponse::ArenaDtor(void* object) {
  AgentDeleteAutoscalingResponse* _this = reinterpret_cast< AgentDeleteAutoscalingResponse* >(object);
  (void)_this;
}
void AgentDeleteAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentDeleteAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentDeleteAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentDeleteAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentDeleteAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  return target;
}

size_t AgentDeleteAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentDeleteAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentDeleteAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentDeleteAutoscalingResponse::GetClassData() const { return &_class_data_; }

void AgentDeleteAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentDeleteAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const AgentDeleteAutoscalingResponse &>(from));
}


void AgentDeleteAutoscalingResponse::MergeFrom(const AgentDeleteAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentDeleteAutoscalingResponse::CopyFrom(const AgentDeleteAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentDeleteAutoscalingResponse::IsInitialized() const {
  return true;
}

void AgentDeleteAutoscalingResponse::InternalSwap(AgentDeleteAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentDeleteAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[4]);
}

// ===================================================================

class AgentDeleteAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const AgentDeleteAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
AgentDeleteAutoscalingRequest::_Internal::metadata(const AgentDeleteAutoscalingRequest* msg) {
  return *msg->metadata_;
}
void AgentDeleteAutoscalingRequest::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
AgentDeleteAutoscalingRequest::AgentDeleteAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
}
AgentDeleteAutoscalingRequest::AgentDeleteAutoscalingRequest(const AgentDeleteAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
}

inline void AgentDeleteAutoscalingRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
metadata_ = nullptr;
}

AgentDeleteAutoscalingRequest::~AgentDeleteAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentDeleteAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void AgentDeleteAutoscalingRequest::ArenaDtor(void* object) {
  AgentDeleteAutoscalingRequest* _this = reinterpret_cast< AgentDeleteAutoscalingRequest* >(object);
  (void)_this;
}
void AgentDeleteAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentDeleteAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentDeleteAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentDeleteAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentDeleteAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  return target;
}

size_t AgentDeleteAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentDeleteAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentDeleteAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentDeleteAutoscalingRequest::GetClassData() const { return &_class_data_; }

void AgentDeleteAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentDeleteAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const AgentDeleteAutoscalingRequest &>(from));
}


void AgentDeleteAutoscalingRequest::MergeFrom(const AgentDeleteAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentDeleteAutoscalingRequest::CopyFrom(const AgentDeleteAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentDeleteAutoscalingRequest::IsInitialized() const {
  return true;
}

void AgentDeleteAutoscalingRequest::InternalSwap(AgentDeleteAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentDeleteAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[5]);
}

// ===================================================================

class AgentGetAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const AgentGetAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
AgentGetAutoscalingResponse::_Internal::metadata(const AgentGetAutoscalingResponse* msg) {
  return *msg->metadata_;
}
void AgentGetAutoscalingResponse::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
AgentGetAutoscalingResponse::AgentGetAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
}
AgentGetAutoscalingResponse::AgentGetAutoscalingResponse(const AgentGetAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
}

inline void AgentGetAutoscalingResponse::SharedCtor() {
metadata_ = nullptr;
}

AgentGetAutoscalingResponse::~AgentGetAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentGetAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void AgentGetAutoscalingResponse::ArenaDtor(void* object) {
  AgentGetAutoscalingResponse* _this = reinterpret_cast< AgentGetAutoscalingResponse* >(object);
  (void)_this;
}
void AgentGetAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentGetAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentGetAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentGetAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentGetAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  return target;
}

size_t AgentGetAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentGetAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentGetAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentGetAutoscalingResponse::GetClassData() const { return &_class_data_; }

void AgentGetAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentGetAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const AgentGetAutoscalingResponse &>(from));
}


void AgentGetAutoscalingResponse::MergeFrom(const AgentGetAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentGetAutoscalingResponse::CopyFrom(const AgentGetAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentGetAutoscalingResponse::IsInitialized() const {
  return true;
}

void AgentGetAutoscalingResponse::InternalSwap(AgentGetAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentGetAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[6]);
}

// ===================================================================

class AgentGetAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const AgentGetAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
AgentGetAutoscalingRequest::_Internal::autoscaling(const AgentGetAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
void AgentGetAutoscalingRequest::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
AgentGetAutoscalingRequest::AgentGetAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
}
AgentGetAutoscalingRequest::AgentGetAutoscalingRequest(const AgentGetAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
}

inline void AgentGetAutoscalingRequest::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

AgentGetAutoscalingRequest::~AgentGetAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentGetAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void AgentGetAutoscalingRequest::ArenaDtor(void* object) {
  AgentGetAutoscalingRequest* _this = reinterpret_cast< AgentGetAutoscalingRequest* >(object);
  (void)_this;
}
void AgentGetAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentGetAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentGetAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentGetAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentGetAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  return target;
}

size_t AgentGetAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentGetAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentGetAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentGetAutoscalingRequest::GetClassData() const { return &_class_data_; }

void AgentGetAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentGetAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const AgentGetAutoscalingRequest &>(from));
}


void AgentGetAutoscalingRequest::MergeFrom(const AgentGetAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentGetAutoscalingRequest::CopyFrom(const AgentGetAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentGetAutoscalingRequest::IsInitialized() const {
  return true;
}

void AgentGetAutoscalingRequest::InternalSwap(AgentGetAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentGetAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[7]);
}

// ===================================================================

class AgentListAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const AgentListAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
AgentListAutoscalingResponse::_Internal::metadata(const AgentListAutoscalingResponse* msg) {
  return *msg->metadata_;
}
void AgentListAutoscalingResponse::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
AgentListAutoscalingResponse::AgentListAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
}
AgentListAutoscalingResponse::AgentListAutoscalingResponse(const AgentListAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
}

inline void AgentListAutoscalingResponse::SharedCtor() {
metadata_ = nullptr;
}

AgentListAutoscalingResponse::~AgentListAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentListAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void AgentListAutoscalingResponse::ArenaDtor(void* object) {
  AgentListAutoscalingResponse* _this = reinterpret_cast< AgentListAutoscalingResponse* >(object);
  (void)_this;
}
void AgentListAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentListAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentListAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentListAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentListAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  return target;
}

size_t AgentListAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentListAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentListAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentListAutoscalingResponse::GetClassData() const { return &_class_data_; }

void AgentListAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentListAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const AgentListAutoscalingResponse &>(from));
}


void AgentListAutoscalingResponse::MergeFrom(const AgentListAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentListAutoscalingResponse::CopyFrom(const AgentListAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentListAutoscalingResponse::IsInitialized() const {
  return true;
}

void AgentListAutoscalingResponse::InternalSwap(AgentListAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentListAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[8]);
}

// ===================================================================

class AgentListAutoscalingRequest::_Internal {
 public:
};

void AgentListAutoscalingRequest::clear_autoscalings() {
  autoscalings_.Clear();
}
AgentListAutoscalingRequest::AgentListAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  autoscalings_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
}
AgentListAutoscalingRequest::AgentListAutoscalingRequest(const AgentListAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      autoscalings_(from.autoscalings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
}

inline void AgentListAutoscalingRequest::SharedCtor() {
}

AgentListAutoscalingRequest::~AgentListAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentListAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgentListAutoscalingRequest::ArenaDtor(void* object) {
  AgentListAutoscalingRequest* _this = reinterpret_cast< AgentListAutoscalingRequest* >(object);
  (void)_this;
}
void AgentListAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentListAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentListAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  autoscalings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentListAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_autoscalings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentListAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_autoscalings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_autoscalings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  return target;
}

size_t AgentListAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
  total_size += 1UL * this->_internal_autoscalings_size();
  for (const auto& msg : this->autoscalings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentListAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentListAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentListAutoscalingRequest::GetClassData() const { return &_class_data_; }

void AgentListAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AgentListAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const AgentListAutoscalingRequest &>(from));
}


void AgentListAutoscalingRequest::MergeFrom(const AgentListAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  autoscalings_.MergeFrom(from.autoscalings_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentListAutoscalingRequest::CopyFrom(const AgentListAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentListAutoscalingRequest::IsInitialized() const {
  return true;
}

void AgentListAutoscalingRequest::InternalSwap(AgentListAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  autoscalings_.InternalSwap(&other->autoscalings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentListAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
