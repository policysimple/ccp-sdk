// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: performance/autoscaling/v1alpha1/autoscaling_api.proto
#ifndef GRPC_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto__INCLUDED
#define GRPC_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto__INCLUDED

#include "performance/autoscaling/v1alpha1/autoscaling_api.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace performance {
namespace autoscaling {
namespace v1alpha1 {

class AutoscalingAPIService final {
 public:
  static constexpr char const* service_full_name() {
    return "performance.autoscaling.v1alpha1.AutoscalingAPIService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>> AsyncCreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>>(AsyncCreateAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>> PrepareAsyncCreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>>(PrepareAsyncCreateAutoscalingRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>> AsyncUpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>>(AsyncUpdateAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>> PrepareAsyncUpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>>(PrepareAsyncUpdateAutoscalingRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>> AsyncDeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>>(AsyncDeleteAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>> PrepareAsyncDeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>>(PrepareAsyncDeleteAutoscalingRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>> AsyncGetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>>(AsyncGetAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>> PrepareAsyncGetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>>(PrepareAsyncGetAutoscalingRaw(context, request, cq));
    }
    virtual ::grpc::Status ListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>> AsyncListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>>(AsyncListAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>> PrepareAsyncListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>>(PrepareAsyncListAutoscalingRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void CreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* AsyncCreateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* PrepareAsyncCreateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* AsyncUpdateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* PrepareAsyncUpdateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* AsyncDeleteAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* PrepareAsyncDeleteAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* AsyncGetAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* PrepareAsyncGetAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* AsyncListAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* PrepareAsyncListAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>> AsyncCreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>>(AsyncCreateAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>> PrepareAsyncCreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>>(PrepareAsyncCreateAutoscalingRaw(context, request, cq));
    }
    ::grpc::Status UpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>> AsyncUpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>>(AsyncUpdateAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>> PrepareAsyncUpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>>(PrepareAsyncUpdateAutoscalingRaw(context, request, cq));
    }
    ::grpc::Status DeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>> AsyncDeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>>(AsyncDeleteAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>> PrepareAsyncDeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>>(PrepareAsyncDeleteAutoscalingRaw(context, request, cq));
    }
    ::grpc::Status GetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>> AsyncGetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>>(AsyncGetAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>> PrepareAsyncGetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>>(PrepareAsyncGetAutoscalingRaw(context, request, cq));
    }
    ::grpc::Status ListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>> AsyncListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>>(AsyncListAutoscalingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>> PrepareAsyncListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>>(PrepareAsyncListAutoscalingRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAutoscaling(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* AsyncCreateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* PrepareAsyncCreateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* AsyncUpdateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* PrepareAsyncUpdateAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* AsyncDeleteAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* PrepareAsyncDeleteAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* AsyncGetAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* PrepareAsyncGetAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* AsyncListAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* PrepareAsyncListAutoscalingRaw(::grpc::ClientContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAutoscaling_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAutoscaling_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAutoscaling_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAutoscaling_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAutoscaling_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response);
    virtual ::grpc::Status UpdateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response);
    virtual ::grpc::Status DeleteAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response);
    virtual ::grpc::Status GetAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response);
    virtual ::grpc::Status ListAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateAutoscaling() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAutoscaling(::grpc::ServerContext* context, ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::grpc::ServerAsyncResponseWriter< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateAutoscaling() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAutoscaling(::grpc::ServerContext* context, ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::grpc::ServerAsyncResponseWriter< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteAutoscaling() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAutoscaling(::grpc::ServerContext* context, ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::grpc::ServerAsyncResponseWriter< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetAutoscaling() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAutoscaling(::grpc::ServerContext* context, ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::grpc::ServerAsyncResponseWriter< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListAutoscaling() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAutoscaling(::grpc::ServerContext* context, ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::grpc::ServerAsyncResponseWriter< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateAutoscaling<WithAsyncMethod_UpdateAutoscaling<WithAsyncMethod_DeleteAutoscaling<WithAsyncMethod_GetAutoscaling<WithAsyncMethod_ListAutoscaling<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateAutoscaling() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateAutoscaling() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteAutoscaling() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetAutoscaling() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListAutoscaling() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateAutoscaling() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAutoscaling(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_UpdateAutoscaling() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAutoscaling(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteAutoscaling() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAutoscaling(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetAutoscaling() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAutoscaling(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListAutoscaling() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAutoscaling(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateAutoscaling() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>(std::bind(&WithStreamedUnaryMethod_CreateAutoscaling<BaseClass>::StreamedCreateAutoscaling, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAutoscaling(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest,::performance::autoscaling::v1alpha1::CreateAutoscalingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateAutoscaling() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>(std::bind(&WithStreamedUnaryMethod_UpdateAutoscaling<BaseClass>::StreamedUpdateAutoscaling, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAutoscaling(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest,::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteAutoscaling() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>(std::bind(&WithStreamedUnaryMethod_DeleteAutoscaling<BaseClass>::StreamedDeleteAutoscaling, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAutoscaling(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest,::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetAutoscaling() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::performance::autoscaling::v1alpha1::GetAutoscalingRequest, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse>(std::bind(&WithStreamedUnaryMethod_GetAutoscaling<BaseClass>::StreamedGetAutoscaling, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAutoscaling(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::performance::autoscaling::v1alpha1::GetAutoscalingRequest,::performance::autoscaling::v1alpha1::GetAutoscalingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAutoscaling : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListAutoscaling() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::performance::autoscaling::v1alpha1::ListAutoscalingRequest, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse>(std::bind(&WithStreamedUnaryMethod_ListAutoscaling<BaseClass>::StreamedListAutoscaling, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListAutoscaling() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAutoscaling(::grpc::ServerContext* context, const ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* request, ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAutoscaling(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::performance::autoscaling::v1alpha1::ListAutoscalingRequest,::performance::autoscaling::v1alpha1::ListAutoscalingResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateAutoscaling<WithStreamedUnaryMethod_UpdateAutoscaling<WithStreamedUnaryMethod_DeleteAutoscaling<WithStreamedUnaryMethod_GetAutoscaling<WithStreamedUnaryMethod_ListAutoscaling<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateAutoscaling<WithStreamedUnaryMethod_UpdateAutoscaling<WithStreamedUnaryMethod_DeleteAutoscaling<WithStreamedUnaryMethod_GetAutoscaling<WithStreamedUnaryMethod_ListAutoscaling<Service > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance


#endif  // GRPC_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto__INCLUDED
