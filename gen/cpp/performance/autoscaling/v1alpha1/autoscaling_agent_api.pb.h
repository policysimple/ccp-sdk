// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performance/autoscaling/v1alpha1/autoscaling_agent_api.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "performance/autoscaling/v1alpha1/autoscaling.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
namespace performance {
namespace autoscaling {
namespace v1alpha1 {
class AgentCreateAutoscalingRequest;
struct AgentCreateAutoscalingRequestDefaultTypeInternal;
extern AgentCreateAutoscalingRequestDefaultTypeInternal _AgentCreateAutoscalingRequest_default_instance_;
class AgentCreateAutoscalingResponse;
struct AgentCreateAutoscalingResponseDefaultTypeInternal;
extern AgentCreateAutoscalingResponseDefaultTypeInternal _AgentCreateAutoscalingResponse_default_instance_;
class AgentDeleteAutoscalingRequest;
struct AgentDeleteAutoscalingRequestDefaultTypeInternal;
extern AgentDeleteAutoscalingRequestDefaultTypeInternal _AgentDeleteAutoscalingRequest_default_instance_;
class AgentDeleteAutoscalingResponse;
struct AgentDeleteAutoscalingResponseDefaultTypeInternal;
extern AgentDeleteAutoscalingResponseDefaultTypeInternal _AgentDeleteAutoscalingResponse_default_instance_;
class AgentGetAutoscalingRequest;
struct AgentGetAutoscalingRequestDefaultTypeInternal;
extern AgentGetAutoscalingRequestDefaultTypeInternal _AgentGetAutoscalingRequest_default_instance_;
class AgentGetAutoscalingResponse;
struct AgentGetAutoscalingResponseDefaultTypeInternal;
extern AgentGetAutoscalingResponseDefaultTypeInternal _AgentGetAutoscalingResponse_default_instance_;
class AgentListAutoscalingRequest;
struct AgentListAutoscalingRequestDefaultTypeInternal;
extern AgentListAutoscalingRequestDefaultTypeInternal _AgentListAutoscalingRequest_default_instance_;
class AgentListAutoscalingResponse;
struct AgentListAutoscalingResponseDefaultTypeInternal;
extern AgentListAutoscalingResponseDefaultTypeInternal _AgentListAutoscalingResponse_default_instance_;
class AgentUpdateAutoscalingRequest;
struct AgentUpdateAutoscalingRequestDefaultTypeInternal;
extern AgentUpdateAutoscalingRequestDefaultTypeInternal _AgentUpdateAutoscalingRequest_default_instance_;
class AgentUpdateAutoscalingResponse;
struct AgentUpdateAutoscalingResponseDefaultTypeInternal;
extern AgentUpdateAutoscalingResponseDefaultTypeInternal _AgentUpdateAutoscalingResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance
PROTOBUF_NAMESPACE_OPEN
template<> ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentCreateAutoscalingRequest>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentCreateAutoscalingResponse>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingRequest>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentDeleteAutoscalingResponse>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentGetAutoscalingRequest>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentGetAutoscalingResponse>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentListAutoscalingRequest>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentListAutoscalingResponse>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingRequest>(Arena*);
template<> ::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse* Arena::CreateMaybeMessage<::performance::autoscaling::v1alpha1::AgentUpdateAutoscalingResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace performance {
namespace autoscaling {
namespace v1alpha1 {

// ===================================================================

class AgentCreateAutoscalingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse) */ {
 public:
  inline AgentCreateAutoscalingResponse() : AgentCreateAutoscalingResponse(nullptr) {}
  ~AgentCreateAutoscalingResponse() override;
  explicit constexpr AgentCreateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentCreateAutoscalingResponse(const AgentCreateAutoscalingResponse& from);
  AgentCreateAutoscalingResponse(AgentCreateAutoscalingResponse&& from) noexcept
    : AgentCreateAutoscalingResponse() {
    *this = ::std::move(from);
  }

  inline AgentCreateAutoscalingResponse& operator=(const AgentCreateAutoscalingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentCreateAutoscalingResponse& operator=(AgentCreateAutoscalingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentCreateAutoscalingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentCreateAutoscalingResponse* internal_default_instance() {
    return reinterpret_cast<const AgentCreateAutoscalingResponse*>(
               &_AgentCreateAutoscalingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AgentCreateAutoscalingResponse& a, AgentCreateAutoscalingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentCreateAutoscalingResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentCreateAutoscalingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentCreateAutoscalingResponse* New() const final {
    return new AgentCreateAutoscalingResponse();
  }

  AgentCreateAutoscalingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentCreateAutoscalingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentCreateAutoscalingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentCreateAutoscalingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentCreateAutoscalingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse";
  }
  protected:
  explicit AgentCreateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoscalingFieldNumber = 1,
  };
  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  bool has_autoscaling() const;
  private:
  bool _internal_has_autoscaling() const;
  public:
  void clear_autoscaling();
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Autoscaling* release_autoscaling();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscaling();
  void set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscaling() const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_mutable_autoscaling();
  public:
  void unsafe_arena_set_allocated_autoscaling(
      ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  ::performance::autoscaling::v1alpha1::Autoscaling* unsafe_arena_release_autoscaling();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentCreateAutoscalingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest) */ {
 public:
  inline AgentCreateAutoscalingRequest() : AgentCreateAutoscalingRequest(nullptr) {}
  ~AgentCreateAutoscalingRequest() override;
  explicit constexpr AgentCreateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentCreateAutoscalingRequest(const AgentCreateAutoscalingRequest& from);
  AgentCreateAutoscalingRequest(AgentCreateAutoscalingRequest&& from) noexcept
    : AgentCreateAutoscalingRequest() {
    *this = ::std::move(from);
  }

  inline AgentCreateAutoscalingRequest& operator=(const AgentCreateAutoscalingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentCreateAutoscalingRequest& operator=(AgentCreateAutoscalingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentCreateAutoscalingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentCreateAutoscalingRequest* internal_default_instance() {
    return reinterpret_cast<const AgentCreateAutoscalingRequest*>(
               &_AgentCreateAutoscalingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AgentCreateAutoscalingRequest& a, AgentCreateAutoscalingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentCreateAutoscalingRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentCreateAutoscalingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentCreateAutoscalingRequest* New() const final {
    return new AgentCreateAutoscalingRequest();
  }

  AgentCreateAutoscalingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentCreateAutoscalingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentCreateAutoscalingRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentCreateAutoscalingRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentCreateAutoscalingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest";
  }
  protected:
  explicit AgentCreateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 2,
    kAutoscalingFieldNumber = 1,
  };
  // string status = 2 [json_name = "status"];
  void clear_status();
  const std::string& status() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_status(ArgT0&& arg0, ArgT... args);
  std::string* mutable_status();
  PROTOBUF_MUST_USE_RESULT std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  bool has_autoscaling() const;
  private:
  bool _internal_has_autoscaling() const;
  public:
  void clear_autoscaling();
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Autoscaling* release_autoscaling();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscaling();
  void set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscaling() const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_mutable_autoscaling();
  public:
  void unsafe_arena_set_allocated_autoscaling(
      ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  ::performance::autoscaling::v1alpha1::Autoscaling* unsafe_arena_release_autoscaling();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentUpdateAutoscalingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse) */ {
 public:
  inline AgentUpdateAutoscalingResponse() : AgentUpdateAutoscalingResponse(nullptr) {}
  ~AgentUpdateAutoscalingResponse() override;
  explicit constexpr AgentUpdateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentUpdateAutoscalingResponse(const AgentUpdateAutoscalingResponse& from);
  AgentUpdateAutoscalingResponse(AgentUpdateAutoscalingResponse&& from) noexcept
    : AgentUpdateAutoscalingResponse() {
    *this = ::std::move(from);
  }

  inline AgentUpdateAutoscalingResponse& operator=(const AgentUpdateAutoscalingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentUpdateAutoscalingResponse& operator=(AgentUpdateAutoscalingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentUpdateAutoscalingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentUpdateAutoscalingResponse* internal_default_instance() {
    return reinterpret_cast<const AgentUpdateAutoscalingResponse*>(
               &_AgentUpdateAutoscalingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AgentUpdateAutoscalingResponse& a, AgentUpdateAutoscalingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentUpdateAutoscalingResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentUpdateAutoscalingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentUpdateAutoscalingResponse* New() const final {
    return new AgentUpdateAutoscalingResponse();
  }

  AgentUpdateAutoscalingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentUpdateAutoscalingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentUpdateAutoscalingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentUpdateAutoscalingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentUpdateAutoscalingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse";
  }
  protected:
  explicit AgentUpdateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoscalingFieldNumber = 1,
  };
  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  bool has_autoscaling() const;
  private:
  bool _internal_has_autoscaling() const;
  public:
  void clear_autoscaling();
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Autoscaling* release_autoscaling();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscaling();
  void set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscaling() const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_mutable_autoscaling();
  public:
  void unsafe_arena_set_allocated_autoscaling(
      ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  ::performance::autoscaling::v1alpha1::Autoscaling* unsafe_arena_release_autoscaling();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentUpdateAutoscalingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest) */ {
 public:
  inline AgentUpdateAutoscalingRequest() : AgentUpdateAutoscalingRequest(nullptr) {}
  ~AgentUpdateAutoscalingRequest() override;
  explicit constexpr AgentUpdateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentUpdateAutoscalingRequest(const AgentUpdateAutoscalingRequest& from);
  AgentUpdateAutoscalingRequest(AgentUpdateAutoscalingRequest&& from) noexcept
    : AgentUpdateAutoscalingRequest() {
    *this = ::std::move(from);
  }

  inline AgentUpdateAutoscalingRequest& operator=(const AgentUpdateAutoscalingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentUpdateAutoscalingRequest& operator=(AgentUpdateAutoscalingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentUpdateAutoscalingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentUpdateAutoscalingRequest* internal_default_instance() {
    return reinterpret_cast<const AgentUpdateAutoscalingRequest*>(
               &_AgentUpdateAutoscalingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AgentUpdateAutoscalingRequest& a, AgentUpdateAutoscalingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentUpdateAutoscalingRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentUpdateAutoscalingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentUpdateAutoscalingRequest* New() const final {
    return new AgentUpdateAutoscalingRequest();
  }

  AgentUpdateAutoscalingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentUpdateAutoscalingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentUpdateAutoscalingRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentUpdateAutoscalingRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentUpdateAutoscalingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest";
  }
  protected:
  explicit AgentUpdateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 2,
    kAutoscalingFieldNumber = 1,
  };
  // string status = 2 [json_name = "status"];
  void clear_status();
  const std::string& status() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_status(ArgT0&& arg0, ArgT... args);
  std::string* mutable_status();
  PROTOBUF_MUST_USE_RESULT std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  bool has_autoscaling() const;
  private:
  bool _internal_has_autoscaling() const;
  public:
  void clear_autoscaling();
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Autoscaling* release_autoscaling();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscaling();
  void set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscaling() const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_mutable_autoscaling();
  public:
  void unsafe_arena_set_allocated_autoscaling(
      ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  ::performance::autoscaling::v1alpha1::Autoscaling* unsafe_arena_release_autoscaling();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentDeleteAutoscalingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse) */ {
 public:
  inline AgentDeleteAutoscalingResponse() : AgentDeleteAutoscalingResponse(nullptr) {}
  ~AgentDeleteAutoscalingResponse() override;
  explicit constexpr AgentDeleteAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentDeleteAutoscalingResponse(const AgentDeleteAutoscalingResponse& from);
  AgentDeleteAutoscalingResponse(AgentDeleteAutoscalingResponse&& from) noexcept
    : AgentDeleteAutoscalingResponse() {
    *this = ::std::move(from);
  }

  inline AgentDeleteAutoscalingResponse& operator=(const AgentDeleteAutoscalingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentDeleteAutoscalingResponse& operator=(AgentDeleteAutoscalingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentDeleteAutoscalingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentDeleteAutoscalingResponse* internal_default_instance() {
    return reinterpret_cast<const AgentDeleteAutoscalingResponse*>(
               &_AgentDeleteAutoscalingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AgentDeleteAutoscalingResponse& a, AgentDeleteAutoscalingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentDeleteAutoscalingResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentDeleteAutoscalingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentDeleteAutoscalingResponse* New() const final {
    return new AgentDeleteAutoscalingResponse();
  }

  AgentDeleteAutoscalingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentDeleteAutoscalingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentDeleteAutoscalingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentDeleteAutoscalingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentDeleteAutoscalingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse";
  }
  protected:
  explicit AgentDeleteAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 1,
  };
  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const ::performance::autoscaling::v1alpha1::Metadata& metadata() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Metadata* release_metadata();
  ::performance::autoscaling::v1alpha1::Metadata* mutable_metadata();
  void set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata);
  private:
  const ::performance::autoscaling::v1alpha1::Metadata& _internal_metadata() const;
  ::performance::autoscaling::v1alpha1::Metadata* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      ::performance::autoscaling::v1alpha1::Metadata* metadata);
  ::performance::autoscaling::v1alpha1::Metadata* unsafe_arena_release_metadata();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::performance::autoscaling::v1alpha1::Metadata* metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentDeleteAutoscalingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest) */ {
 public:
  inline AgentDeleteAutoscalingRequest() : AgentDeleteAutoscalingRequest(nullptr) {}
  ~AgentDeleteAutoscalingRequest() override;
  explicit constexpr AgentDeleteAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentDeleteAutoscalingRequest(const AgentDeleteAutoscalingRequest& from);
  AgentDeleteAutoscalingRequest(AgentDeleteAutoscalingRequest&& from) noexcept
    : AgentDeleteAutoscalingRequest() {
    *this = ::std::move(from);
  }

  inline AgentDeleteAutoscalingRequest& operator=(const AgentDeleteAutoscalingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentDeleteAutoscalingRequest& operator=(AgentDeleteAutoscalingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentDeleteAutoscalingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentDeleteAutoscalingRequest* internal_default_instance() {
    return reinterpret_cast<const AgentDeleteAutoscalingRequest*>(
               &_AgentDeleteAutoscalingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AgentDeleteAutoscalingRequest& a, AgentDeleteAutoscalingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentDeleteAutoscalingRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentDeleteAutoscalingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentDeleteAutoscalingRequest* New() const final {
    return new AgentDeleteAutoscalingRequest();
  }

  AgentDeleteAutoscalingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentDeleteAutoscalingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentDeleteAutoscalingRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentDeleteAutoscalingRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentDeleteAutoscalingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest";
  }
  protected:
  explicit AgentDeleteAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 2,
    kMetadataFieldNumber = 1,
  };
  // string status = 2 [json_name = "status"];
  void clear_status();
  const std::string& status() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_status(ArgT0&& arg0, ArgT... args);
  std::string* mutable_status();
  PROTOBUF_MUST_USE_RESULT std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const ::performance::autoscaling::v1alpha1::Metadata& metadata() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Metadata* release_metadata();
  ::performance::autoscaling::v1alpha1::Metadata* mutable_metadata();
  void set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata);
  private:
  const ::performance::autoscaling::v1alpha1::Metadata& _internal_metadata() const;
  ::performance::autoscaling::v1alpha1::Metadata* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      ::performance::autoscaling::v1alpha1::Metadata* metadata);
  ::performance::autoscaling::v1alpha1::Metadata* unsafe_arena_release_metadata();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::performance::autoscaling::v1alpha1::Metadata* metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentGetAutoscalingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse) */ {
 public:
  inline AgentGetAutoscalingResponse() : AgentGetAutoscalingResponse(nullptr) {}
  ~AgentGetAutoscalingResponse() override;
  explicit constexpr AgentGetAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentGetAutoscalingResponse(const AgentGetAutoscalingResponse& from);
  AgentGetAutoscalingResponse(AgentGetAutoscalingResponse&& from) noexcept
    : AgentGetAutoscalingResponse() {
    *this = ::std::move(from);
  }

  inline AgentGetAutoscalingResponse& operator=(const AgentGetAutoscalingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentGetAutoscalingResponse& operator=(AgentGetAutoscalingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentGetAutoscalingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentGetAutoscalingResponse* internal_default_instance() {
    return reinterpret_cast<const AgentGetAutoscalingResponse*>(
               &_AgentGetAutoscalingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AgentGetAutoscalingResponse& a, AgentGetAutoscalingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentGetAutoscalingResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentGetAutoscalingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentGetAutoscalingResponse* New() const final {
    return new AgentGetAutoscalingResponse();
  }

  AgentGetAutoscalingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentGetAutoscalingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentGetAutoscalingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentGetAutoscalingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentGetAutoscalingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse";
  }
  protected:
  explicit AgentGetAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 1,
  };
  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const ::performance::autoscaling::v1alpha1::Metadata& metadata() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Metadata* release_metadata();
  ::performance::autoscaling::v1alpha1::Metadata* mutable_metadata();
  void set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata);
  private:
  const ::performance::autoscaling::v1alpha1::Metadata& _internal_metadata() const;
  ::performance::autoscaling::v1alpha1::Metadata* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      ::performance::autoscaling::v1alpha1::Metadata* metadata);
  ::performance::autoscaling::v1alpha1::Metadata* unsafe_arena_release_metadata();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::performance::autoscaling::v1alpha1::Metadata* metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentGetAutoscalingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest) */ {
 public:
  inline AgentGetAutoscalingRequest() : AgentGetAutoscalingRequest(nullptr) {}
  ~AgentGetAutoscalingRequest() override;
  explicit constexpr AgentGetAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentGetAutoscalingRequest(const AgentGetAutoscalingRequest& from);
  AgentGetAutoscalingRequest(AgentGetAutoscalingRequest&& from) noexcept
    : AgentGetAutoscalingRequest() {
    *this = ::std::move(from);
  }

  inline AgentGetAutoscalingRequest& operator=(const AgentGetAutoscalingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentGetAutoscalingRequest& operator=(AgentGetAutoscalingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentGetAutoscalingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentGetAutoscalingRequest* internal_default_instance() {
    return reinterpret_cast<const AgentGetAutoscalingRequest*>(
               &_AgentGetAutoscalingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AgentGetAutoscalingRequest& a, AgentGetAutoscalingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentGetAutoscalingRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentGetAutoscalingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentGetAutoscalingRequest* New() const final {
    return new AgentGetAutoscalingRequest();
  }

  AgentGetAutoscalingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentGetAutoscalingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentGetAutoscalingRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentGetAutoscalingRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentGetAutoscalingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest";
  }
  protected:
  explicit AgentGetAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 2,
    kAutoscalingFieldNumber = 1,
  };
  // string status = 2 [json_name = "status"];
  void clear_status();
  const std::string& status() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_status(ArgT0&& arg0, ArgT... args);
  std::string* mutable_status();
  PROTOBUF_MUST_USE_RESULT std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  bool has_autoscaling() const;
  private:
  bool _internal_has_autoscaling() const;
  public:
  void clear_autoscaling();
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Autoscaling* release_autoscaling();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscaling();
  void set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscaling() const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_mutable_autoscaling();
  public:
  void unsafe_arena_set_allocated_autoscaling(
      ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling);
  ::performance::autoscaling::v1alpha1::Autoscaling* unsafe_arena_release_autoscaling();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentListAutoscalingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse) */ {
 public:
  inline AgentListAutoscalingResponse() : AgentListAutoscalingResponse(nullptr) {}
  ~AgentListAutoscalingResponse() override;
  explicit constexpr AgentListAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentListAutoscalingResponse(const AgentListAutoscalingResponse& from);
  AgentListAutoscalingResponse(AgentListAutoscalingResponse&& from) noexcept
    : AgentListAutoscalingResponse() {
    *this = ::std::move(from);
  }

  inline AgentListAutoscalingResponse& operator=(const AgentListAutoscalingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentListAutoscalingResponse& operator=(AgentListAutoscalingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentListAutoscalingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentListAutoscalingResponse* internal_default_instance() {
    return reinterpret_cast<const AgentListAutoscalingResponse*>(
               &_AgentListAutoscalingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AgentListAutoscalingResponse& a, AgentListAutoscalingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentListAutoscalingResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentListAutoscalingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentListAutoscalingResponse* New() const final {
    return new AgentListAutoscalingResponse();
  }

  AgentListAutoscalingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentListAutoscalingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentListAutoscalingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentListAutoscalingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentListAutoscalingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentListAutoscalingResponse";
  }
  protected:
  explicit AgentListAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 1,
  };
  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const ::performance::autoscaling::v1alpha1::Metadata& metadata() const;
  PROTOBUF_MUST_USE_RESULT ::performance::autoscaling::v1alpha1::Metadata* release_metadata();
  ::performance::autoscaling::v1alpha1::Metadata* mutable_metadata();
  void set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata);
  private:
  const ::performance::autoscaling::v1alpha1::Metadata& _internal_metadata() const;
  ::performance::autoscaling::v1alpha1::Metadata* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      ::performance::autoscaling::v1alpha1::Metadata* metadata);
  ::performance::autoscaling::v1alpha1::Metadata* unsafe_arena_release_metadata();

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::performance::autoscaling::v1alpha1::Metadata* metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// -------------------------------------------------------------------

class AgentListAutoscalingRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest) */ {
 public:
  inline AgentListAutoscalingRequest() : AgentListAutoscalingRequest(nullptr) {}
  ~AgentListAutoscalingRequest() override;
  explicit constexpr AgentListAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentListAutoscalingRequest(const AgentListAutoscalingRequest& from);
  AgentListAutoscalingRequest(AgentListAutoscalingRequest&& from) noexcept
    : AgentListAutoscalingRequest() {
    *this = ::std::move(from);
  }

  inline AgentListAutoscalingRequest& operator=(const AgentListAutoscalingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentListAutoscalingRequest& operator=(AgentListAutoscalingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentListAutoscalingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentListAutoscalingRequest* internal_default_instance() {
    return reinterpret_cast<const AgentListAutoscalingRequest*>(
               &_AgentListAutoscalingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AgentListAutoscalingRequest& a, AgentListAutoscalingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentListAutoscalingRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentListAutoscalingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentListAutoscalingRequest* New() const final {
    return new AgentListAutoscalingRequest();
  }

  AgentListAutoscalingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentListAutoscalingRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentListAutoscalingRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AgentListAutoscalingRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentListAutoscalingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "performance.autoscaling.v1alpha1.AgentListAutoscalingRequest";
  }
  protected:
  explicit AgentListAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoscalingsFieldNumber = 1,
  };
  // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
  int autoscalings_size() const;
  private:
  int _internal_autoscalings_size() const;
  public:
  void clear_autoscalings();
  ::performance::autoscaling::v1alpha1::Autoscaling* mutable_autoscalings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::performance::autoscaling::v1alpha1::Autoscaling >*
      mutable_autoscalings();
  private:
  const ::performance::autoscaling::v1alpha1::Autoscaling& _internal_autoscalings(int index) const;
  ::performance::autoscaling::v1alpha1::Autoscaling* _internal_add_autoscalings();
  public:
  const ::performance::autoscaling::v1alpha1::Autoscaling& autoscalings(int index) const;
  ::performance::autoscaling::v1alpha1::Autoscaling* add_autoscalings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::performance::autoscaling::v1alpha1::Autoscaling >&
      autoscalings() const;

  // @@protoc_insertion_point(class_scope:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::performance::autoscaling::v1alpha1::Autoscaling > autoscalings_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentCreateAutoscalingResponse

// .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
inline bool AgentCreateAutoscalingResponse::_internal_has_autoscaling() const {
  return this != internal_default_instance() && autoscaling_ != nullptr;
}
inline bool AgentCreateAutoscalingResponse::has_autoscaling() const {
  return _internal_has_autoscaling();
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentCreateAutoscalingResponse::_internal_autoscaling() const {
  const ::performance::autoscaling::v1alpha1::Autoscaling* p = autoscaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Autoscaling&>(
      ::performance::autoscaling::v1alpha1::_Autoscaling_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentCreateAutoscalingResponse::autoscaling() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse.autoscaling)
  return _internal_autoscaling();
}
inline void AgentCreateAutoscalingResponse::unsafe_arena_set_allocated_autoscaling(
    ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  autoscaling_ = autoscaling;
  if (autoscaling) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse.autoscaling)
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingResponse::release_autoscaling() {
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingResponse::unsafe_arena_release_autoscaling() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse.autoscaling)
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingResponse::_internal_mutable_autoscaling() {
  
  if (autoscaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Autoscaling>(GetArenaForAllocation());
    autoscaling_ = p;
  }
  return autoscaling_;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingResponse::mutable_autoscaling() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _msg = _internal_mutable_autoscaling();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse.autoscaling)
  return _msg;
}
inline void AgentCreateAutoscalingResponse::set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  if (autoscaling) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling));
    if (message_arena != submessage_arena) {
      autoscaling = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autoscaling, submessage_arena);
    }
    
  } else {
    
  }
  autoscaling_ = autoscaling;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentCreateAutoscalingResponse.autoscaling)
}

// -------------------------------------------------------------------

// AgentCreateAutoscalingRequest

// .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
inline bool AgentCreateAutoscalingRequest::_internal_has_autoscaling() const {
  return this != internal_default_instance() && autoscaling_ != nullptr;
}
inline bool AgentCreateAutoscalingRequest::has_autoscaling() const {
  return _internal_has_autoscaling();
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentCreateAutoscalingRequest::_internal_autoscaling() const {
  const ::performance::autoscaling::v1alpha1::Autoscaling* p = autoscaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Autoscaling&>(
      ::performance::autoscaling::v1alpha1::_Autoscaling_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentCreateAutoscalingRequest::autoscaling() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.autoscaling)
  return _internal_autoscaling();
}
inline void AgentCreateAutoscalingRequest::unsafe_arena_set_allocated_autoscaling(
    ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  autoscaling_ = autoscaling;
  if (autoscaling) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.autoscaling)
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingRequest::release_autoscaling() {
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingRequest::unsafe_arena_release_autoscaling() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.autoscaling)
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingRequest::_internal_mutable_autoscaling() {
  
  if (autoscaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Autoscaling>(GetArenaForAllocation());
    autoscaling_ = p;
  }
  return autoscaling_;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentCreateAutoscalingRequest::mutable_autoscaling() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _msg = _internal_mutable_autoscaling();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.autoscaling)
  return _msg;
}
inline void AgentCreateAutoscalingRequest::set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  if (autoscaling) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling));
    if (message_arena != submessage_arena) {
      autoscaling = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autoscaling, submessage_arena);
    }
    
  } else {
    
  }
  autoscaling_ = autoscaling;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.autoscaling)
}

// string status = 2 [json_name = "status"];
inline void AgentCreateAutoscalingRequest::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& AgentCreateAutoscalingRequest::status() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status)
  return _internal_status();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AgentCreateAutoscalingRequest::set_status(ArgT0&& arg0, ArgT... args) {
 
 status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status)
}
inline std::string* AgentCreateAutoscalingRequest::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status)
  return _s;
}
inline const std::string& AgentCreateAutoscalingRequest::_internal_status() const {
  return status_.Get();
}
inline void AgentCreateAutoscalingRequest::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* AgentCreateAutoscalingRequest::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* AgentCreateAutoscalingRequest::release_status() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void AgentCreateAutoscalingRequest::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentCreateAutoscalingRequest.status)
}

// -------------------------------------------------------------------

// AgentUpdateAutoscalingResponse

// .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
inline bool AgentUpdateAutoscalingResponse::_internal_has_autoscaling() const {
  return this != internal_default_instance() && autoscaling_ != nullptr;
}
inline bool AgentUpdateAutoscalingResponse::has_autoscaling() const {
  return _internal_has_autoscaling();
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentUpdateAutoscalingResponse::_internal_autoscaling() const {
  const ::performance::autoscaling::v1alpha1::Autoscaling* p = autoscaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Autoscaling&>(
      ::performance::autoscaling::v1alpha1::_Autoscaling_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentUpdateAutoscalingResponse::autoscaling() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse.autoscaling)
  return _internal_autoscaling();
}
inline void AgentUpdateAutoscalingResponse::unsafe_arena_set_allocated_autoscaling(
    ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  autoscaling_ = autoscaling;
  if (autoscaling) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse.autoscaling)
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingResponse::release_autoscaling() {
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingResponse::unsafe_arena_release_autoscaling() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse.autoscaling)
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingResponse::_internal_mutable_autoscaling() {
  
  if (autoscaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Autoscaling>(GetArenaForAllocation());
    autoscaling_ = p;
  }
  return autoscaling_;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingResponse::mutable_autoscaling() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _msg = _internal_mutable_autoscaling();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse.autoscaling)
  return _msg;
}
inline void AgentUpdateAutoscalingResponse::set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  if (autoscaling) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling));
    if (message_arena != submessage_arena) {
      autoscaling = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autoscaling, submessage_arena);
    }
    
  } else {
    
  }
  autoscaling_ = autoscaling;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingResponse.autoscaling)
}

// -------------------------------------------------------------------

// AgentUpdateAutoscalingRequest

// .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
inline bool AgentUpdateAutoscalingRequest::_internal_has_autoscaling() const {
  return this != internal_default_instance() && autoscaling_ != nullptr;
}
inline bool AgentUpdateAutoscalingRequest::has_autoscaling() const {
  return _internal_has_autoscaling();
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentUpdateAutoscalingRequest::_internal_autoscaling() const {
  const ::performance::autoscaling::v1alpha1::Autoscaling* p = autoscaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Autoscaling&>(
      ::performance::autoscaling::v1alpha1::_Autoscaling_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentUpdateAutoscalingRequest::autoscaling() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.autoscaling)
  return _internal_autoscaling();
}
inline void AgentUpdateAutoscalingRequest::unsafe_arena_set_allocated_autoscaling(
    ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  autoscaling_ = autoscaling;
  if (autoscaling) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.autoscaling)
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingRequest::release_autoscaling() {
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingRequest::unsafe_arena_release_autoscaling() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.autoscaling)
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingRequest::_internal_mutable_autoscaling() {
  
  if (autoscaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Autoscaling>(GetArenaForAllocation());
    autoscaling_ = p;
  }
  return autoscaling_;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentUpdateAutoscalingRequest::mutable_autoscaling() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _msg = _internal_mutable_autoscaling();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.autoscaling)
  return _msg;
}
inline void AgentUpdateAutoscalingRequest::set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  if (autoscaling) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling));
    if (message_arena != submessage_arena) {
      autoscaling = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autoscaling, submessage_arena);
    }
    
  } else {
    
  }
  autoscaling_ = autoscaling;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.autoscaling)
}

// string status = 2 [json_name = "status"];
inline void AgentUpdateAutoscalingRequest::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& AgentUpdateAutoscalingRequest::status() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status)
  return _internal_status();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AgentUpdateAutoscalingRequest::set_status(ArgT0&& arg0, ArgT... args) {
 
 status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status)
}
inline std::string* AgentUpdateAutoscalingRequest::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status)
  return _s;
}
inline const std::string& AgentUpdateAutoscalingRequest::_internal_status() const {
  return status_.Get();
}
inline void AgentUpdateAutoscalingRequest::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* AgentUpdateAutoscalingRequest::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* AgentUpdateAutoscalingRequest::release_status() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void AgentUpdateAutoscalingRequest::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentUpdateAutoscalingRequest.status)
}

// -------------------------------------------------------------------

// AgentDeleteAutoscalingResponse

// .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
inline bool AgentDeleteAutoscalingResponse::_internal_has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline bool AgentDeleteAutoscalingResponse::has_metadata() const {
  return _internal_has_metadata();
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentDeleteAutoscalingResponse::_internal_metadata() const {
  const ::performance::autoscaling::v1alpha1::Metadata* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Metadata&>(
      ::performance::autoscaling::v1alpha1::_Metadata_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentDeleteAutoscalingResponse::metadata() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse.metadata)
  return _internal_metadata();
}
inline void AgentDeleteAutoscalingResponse::unsafe_arena_set_allocated_metadata(
    ::performance::autoscaling::v1alpha1::Metadata* metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse.metadata)
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingResponse::release_metadata() {
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingResponse::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse.metadata)
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingResponse::_internal_mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Metadata>(GetArenaForAllocation());
    metadata_ = p;
  }
  return metadata_;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingResponse::mutable_metadata() {
  ::performance::autoscaling::v1alpha1::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse.metadata)
  return _msg;
}
inline void AgentDeleteAutoscalingResponse::set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata));
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingResponse.metadata)
}

// -------------------------------------------------------------------

// AgentDeleteAutoscalingRequest

// .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
inline bool AgentDeleteAutoscalingRequest::_internal_has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline bool AgentDeleteAutoscalingRequest::has_metadata() const {
  return _internal_has_metadata();
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentDeleteAutoscalingRequest::_internal_metadata() const {
  const ::performance::autoscaling::v1alpha1::Metadata* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Metadata&>(
      ::performance::autoscaling::v1alpha1::_Metadata_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentDeleteAutoscalingRequest::metadata() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.metadata)
  return _internal_metadata();
}
inline void AgentDeleteAutoscalingRequest::unsafe_arena_set_allocated_metadata(
    ::performance::autoscaling::v1alpha1::Metadata* metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.metadata)
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingRequest::release_metadata() {
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingRequest::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.metadata)
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingRequest::_internal_mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Metadata>(GetArenaForAllocation());
    metadata_ = p;
  }
  return metadata_;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentDeleteAutoscalingRequest::mutable_metadata() {
  ::performance::autoscaling::v1alpha1::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.metadata)
  return _msg;
}
inline void AgentDeleteAutoscalingRequest::set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata));
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.metadata)
}

// string status = 2 [json_name = "status"];
inline void AgentDeleteAutoscalingRequest::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& AgentDeleteAutoscalingRequest::status() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status)
  return _internal_status();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AgentDeleteAutoscalingRequest::set_status(ArgT0&& arg0, ArgT... args) {
 
 status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status)
}
inline std::string* AgentDeleteAutoscalingRequest::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status)
  return _s;
}
inline const std::string& AgentDeleteAutoscalingRequest::_internal_status() const {
  return status_.Get();
}
inline void AgentDeleteAutoscalingRequest::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* AgentDeleteAutoscalingRequest::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* AgentDeleteAutoscalingRequest::release_status() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void AgentDeleteAutoscalingRequest::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentDeleteAutoscalingRequest.status)
}

// -------------------------------------------------------------------

// AgentGetAutoscalingResponse

// .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
inline bool AgentGetAutoscalingResponse::_internal_has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline bool AgentGetAutoscalingResponse::has_metadata() const {
  return _internal_has_metadata();
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentGetAutoscalingResponse::_internal_metadata() const {
  const ::performance::autoscaling::v1alpha1::Metadata* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Metadata&>(
      ::performance::autoscaling::v1alpha1::_Metadata_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentGetAutoscalingResponse::metadata() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse.metadata)
  return _internal_metadata();
}
inline void AgentGetAutoscalingResponse::unsafe_arena_set_allocated_metadata(
    ::performance::autoscaling::v1alpha1::Metadata* metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse.metadata)
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentGetAutoscalingResponse::release_metadata() {
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentGetAutoscalingResponse::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse.metadata)
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentGetAutoscalingResponse::_internal_mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Metadata>(GetArenaForAllocation());
    metadata_ = p;
  }
  return metadata_;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentGetAutoscalingResponse::mutable_metadata() {
  ::performance::autoscaling::v1alpha1::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse.metadata)
  return _msg;
}
inline void AgentGetAutoscalingResponse::set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata));
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentGetAutoscalingResponse.metadata)
}

// -------------------------------------------------------------------

// AgentGetAutoscalingRequest

// .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
inline bool AgentGetAutoscalingRequest::_internal_has_autoscaling() const {
  return this != internal_default_instance() && autoscaling_ != nullptr;
}
inline bool AgentGetAutoscalingRequest::has_autoscaling() const {
  return _internal_has_autoscaling();
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentGetAutoscalingRequest::_internal_autoscaling() const {
  const ::performance::autoscaling::v1alpha1::Autoscaling* p = autoscaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Autoscaling&>(
      ::performance::autoscaling::v1alpha1::_Autoscaling_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentGetAutoscalingRequest::autoscaling() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.autoscaling)
  return _internal_autoscaling();
}
inline void AgentGetAutoscalingRequest::unsafe_arena_set_allocated_autoscaling(
    ::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  autoscaling_ = autoscaling;
  if (autoscaling) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.autoscaling)
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentGetAutoscalingRequest::release_autoscaling() {
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentGetAutoscalingRequest::unsafe_arena_release_autoscaling() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.autoscaling)
  
  ::performance::autoscaling::v1alpha1::Autoscaling* temp = autoscaling_;
  autoscaling_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentGetAutoscalingRequest::_internal_mutable_autoscaling() {
  
  if (autoscaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Autoscaling>(GetArenaForAllocation());
    autoscaling_ = p;
  }
  return autoscaling_;
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentGetAutoscalingRequest::mutable_autoscaling() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _msg = _internal_mutable_autoscaling();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.autoscaling)
  return _msg;
}
inline void AgentGetAutoscalingRequest::set_allocated_autoscaling(::performance::autoscaling::v1alpha1::Autoscaling* autoscaling) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling_);
  }
  if (autoscaling) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoscaling));
    if (message_arena != submessage_arena) {
      autoscaling = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, autoscaling, submessage_arena);
    }
    
  } else {
    
  }
  autoscaling_ = autoscaling;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.autoscaling)
}

// string status = 2 [json_name = "status"];
inline void AgentGetAutoscalingRequest::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& AgentGetAutoscalingRequest::status() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status)
  return _internal_status();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AgentGetAutoscalingRequest::set_status(ArgT0&& arg0, ArgT... args) {
 
 status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status)
}
inline std::string* AgentGetAutoscalingRequest::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status)
  return _s;
}
inline const std::string& AgentGetAutoscalingRequest::_internal_status() const {
  return status_.Get();
}
inline void AgentGetAutoscalingRequest::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* AgentGetAutoscalingRequest::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* AgentGetAutoscalingRequest::release_status() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void AgentGetAutoscalingRequest::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentGetAutoscalingRequest.status)
}

// -------------------------------------------------------------------

// AgentListAutoscalingResponse

// .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
inline bool AgentListAutoscalingResponse::_internal_has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline bool AgentListAutoscalingResponse::has_metadata() const {
  return _internal_has_metadata();
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentListAutoscalingResponse::_internal_metadata() const {
  const ::performance::autoscaling::v1alpha1::Metadata* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::performance::autoscaling::v1alpha1::Metadata&>(
      ::performance::autoscaling::v1alpha1::_Metadata_default_instance_);
}
inline const ::performance::autoscaling::v1alpha1::Metadata& AgentListAutoscalingResponse::metadata() const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse.metadata)
  return _internal_metadata();
}
inline void AgentListAutoscalingResponse::unsafe_arena_set_allocated_metadata(
    ::performance::autoscaling::v1alpha1::Metadata* metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse.metadata)
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentListAutoscalingResponse::release_metadata() {
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentListAutoscalingResponse::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse.metadata)
  
  ::performance::autoscaling::v1alpha1::Metadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentListAutoscalingResponse::_internal_mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::performance::autoscaling::v1alpha1::Metadata>(GetArenaForAllocation());
    metadata_ = p;
  }
  return metadata_;
}
inline ::performance::autoscaling::v1alpha1::Metadata* AgentListAutoscalingResponse::mutable_metadata() {
  ::performance::autoscaling::v1alpha1::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse.metadata)
  return _msg;
}
inline void AgentListAutoscalingResponse::set_allocated_metadata(::performance::autoscaling::v1alpha1::Metadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata));
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:performance.autoscaling.v1alpha1.AgentListAutoscalingResponse.metadata)
}

// -------------------------------------------------------------------

// AgentListAutoscalingRequest

// repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
inline int AgentListAutoscalingRequest::_internal_autoscalings_size() const {
  return autoscalings_.size();
}
inline int AgentListAutoscalingRequest::autoscalings_size() const {
  return _internal_autoscalings_size();
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentListAutoscalingRequest::mutable_autoscalings(int index) {
  // @@protoc_insertion_point(field_mutable:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest.autoscalings)
  return autoscalings_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::performance::autoscaling::v1alpha1::Autoscaling >*
AgentListAutoscalingRequest::mutable_autoscalings() {
  // @@protoc_insertion_point(field_mutable_list:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest.autoscalings)
  return &autoscalings_;
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentListAutoscalingRequest::_internal_autoscalings(int index) const {
  return autoscalings_.Get(index);
}
inline const ::performance::autoscaling::v1alpha1::Autoscaling& AgentListAutoscalingRequest::autoscalings(int index) const {
  // @@protoc_insertion_point(field_get:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest.autoscalings)
  return _internal_autoscalings(index);
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentListAutoscalingRequest::_internal_add_autoscalings() {
  return autoscalings_.Add();
}
inline ::performance::autoscaling::v1alpha1::Autoscaling* AgentListAutoscalingRequest::add_autoscalings() {
  ::performance::autoscaling::v1alpha1::Autoscaling* _add = _internal_add_autoscalings();
  // @@protoc_insertion_point(field_add:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest.autoscalings)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::performance::autoscaling::v1alpha1::Autoscaling >&
AgentListAutoscalingRequest::autoscalings() const {
  // @@protoc_insertion_point(field_list:performance.autoscaling.v1alpha1.AgentListAutoscalingRequest.autoscalings)
  return autoscalings_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fagent_5fapi_2eproto
