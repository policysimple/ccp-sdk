// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performance/autoscaling/v1alpha1/autoscaling_api.proto

#include "performance/autoscaling/v1alpha1/autoscaling_api.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace performance {
namespace autoscaling {
namespace v1alpha1 {
constexpr CreateAutoscalingRequest::CreateAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscaling_(nullptr){}
struct CreateAutoscalingRequestDefaultTypeInternal {
  constexpr CreateAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateAutoscalingRequestDefaultTypeInternal() {}
  union {
    CreateAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateAutoscalingRequestDefaultTypeInternal _CreateAutoscalingRequest_default_instance_;
constexpr CreateAutoscalingResponse::CreateAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct CreateAutoscalingResponseDefaultTypeInternal {
  constexpr CreateAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateAutoscalingResponseDefaultTypeInternal() {}
  union {
    CreateAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateAutoscalingResponseDefaultTypeInternal _CreateAutoscalingResponse_default_instance_;
constexpr UpdateAutoscalingRequest::UpdateAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscaling_(nullptr){}
struct UpdateAutoscalingRequestDefaultTypeInternal {
  constexpr UpdateAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateAutoscalingRequestDefaultTypeInternal() {}
  union {
    UpdateAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateAutoscalingRequestDefaultTypeInternal _UpdateAutoscalingRequest_default_instance_;
constexpr UpdateAutoscalingResponse::UpdateAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct UpdateAutoscalingResponseDefaultTypeInternal {
  constexpr UpdateAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateAutoscalingResponseDefaultTypeInternal() {}
  union {
    UpdateAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateAutoscalingResponseDefaultTypeInternal _UpdateAutoscalingResponse_default_instance_;
constexpr DeleteAutoscalingRequest::DeleteAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct DeleteAutoscalingRequestDefaultTypeInternal {
  constexpr DeleteAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteAutoscalingRequestDefaultTypeInternal() {}
  union {
    DeleteAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteAutoscalingRequestDefaultTypeInternal _DeleteAutoscalingRequest_default_instance_;
constexpr DeleteAutoscalingResponse::DeleteAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , metadata_(nullptr){}
struct DeleteAutoscalingResponseDefaultTypeInternal {
  constexpr DeleteAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteAutoscalingResponseDefaultTypeInternal() {}
  union {
    DeleteAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteAutoscalingResponseDefaultTypeInternal _DeleteAutoscalingResponse_default_instance_;
constexpr GetAutoscalingRequest::GetAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct GetAutoscalingRequestDefaultTypeInternal {
  constexpr GetAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAutoscalingRequestDefaultTypeInternal() {}
  union {
    GetAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAutoscalingRequestDefaultTypeInternal _GetAutoscalingRequest_default_instance_;
constexpr GetAutoscalingResponse::GetAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , autoscaling_(nullptr){}
struct GetAutoscalingResponseDefaultTypeInternal {
  constexpr GetAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetAutoscalingResponseDefaultTypeInternal() {}
  union {
    GetAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetAutoscalingResponseDefaultTypeInternal _GetAutoscalingResponse_default_instance_;
constexpr ListAutoscalingRequest::ListAutoscalingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr){}
struct ListAutoscalingRequestDefaultTypeInternal {
  constexpr ListAutoscalingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListAutoscalingRequestDefaultTypeInternal() {}
  union {
    ListAutoscalingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListAutoscalingRequestDefaultTypeInternal _ListAutoscalingRequest_default_instance_;
constexpr ListAutoscalingResponse::ListAutoscalingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autoscalings_(){}
struct ListAutoscalingResponseDefaultTypeInternal {
  constexpr ListAutoscalingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListAutoscalingResponseDefaultTypeInternal() {}
  union {
    ListAutoscalingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListAutoscalingResponseDefaultTypeInternal _ListAutoscalingResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::CreateAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::CreateAutoscalingRequest, autoscaling_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::CreateAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::CreateAutoscalingResponse, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::CreateAutoscalingResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest, autoscaling_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::GetAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::GetAutoscalingRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::GetAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::GetAutoscalingResponse, autoscaling_),
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::GetAutoscalingResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::ListAutoscalingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::ListAutoscalingRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::ListAutoscalingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::performance::autoscaling::v1alpha1::ListAutoscalingResponse, autoscalings_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::performance::autoscaling::v1alpha1::CreateAutoscalingRequest)},
  { 6, -1, sizeof(::performance::autoscaling::v1alpha1::CreateAutoscalingResponse)},
  { 13, -1, sizeof(::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest)},
  { 19, -1, sizeof(::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse)},
  { 26, -1, sizeof(::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest)},
  { 32, -1, sizeof(::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse)},
  { 39, -1, sizeof(::performance::autoscaling::v1alpha1::GetAutoscalingRequest)},
  { 45, -1, sizeof(::performance::autoscaling::v1alpha1::GetAutoscalingResponse)},
  { 52, -1, sizeof(::performance::autoscaling::v1alpha1::ListAutoscalingRequest)},
  { 58, -1, sizeof(::performance::autoscaling::v1alpha1::ListAutoscalingResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_CreateAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_CreateAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_UpdateAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_UpdateAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_DeleteAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_DeleteAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_GetAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_GetAutoscalingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_ListAutoscalingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::performance::autoscaling::v1alpha1::_ListAutoscalingResponse_default_instance_),
};

const char descriptor_table_protodef_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6performance/autoscaling/v1alpha1/autos"
  "caling_api.proto\022 performance.autoscalin"
  "g.v1alpha1\0322performance/autoscaling/v1al"
  "pha1/autoscaling.proto\"k\n\030CreateAutoscal"
  "ingRequest\022O\n\013autoscaling\030\001 \001(\0132-.perfor"
  "mance.autoscaling.v1alpha1.AutoscalingR\013"
  "autoscaling\"\204\001\n\031CreateAutoscalingRespons"
  "e\022O\n\013autoscaling\030\001 \001(\0132-.performance.aut"
  "oscaling.v1alpha1.AutoscalingR\013autoscali"
  "ng\022\026\n\006status\030\002 \001(\tR\006status\"k\n\030UpdateAuto"
  "scalingRequest\022O\n\013autoscaling\030\001 \001(\0132-.pe"
  "rformance.autoscaling.v1alpha1.Autoscali"
  "ngR\013autoscaling\"\204\001\n\031UpdateAutoscalingRes"
  "ponse\022O\n\013autoscaling\030\001 \001(\0132-.performance"
  ".autoscaling.v1alpha1.AutoscalingR\013autos"
  "caling\022\026\n\006status\030\002 \001(\tR\006status\"b\n\030Delete"
  "AutoscalingRequest\022F\n\010metadata\030\001 \001(\0132*.p"
  "erformance.autoscaling.v1alpha1.Metadata"
  "R\010metadata\"{\n\031DeleteAutoscalingResponse\022"
  "F\n\010metadata\030\001 \001(\0132*.performance.autoscal"
  "ing.v1alpha1.MetadataR\010metadata\022\026\n\006statu"
  "s\030\002 \001(\tR\006status\"_\n\025GetAutoscalingRequest"
  "\022F\n\010metadata\030\001 \001(\0132*.performance.autosca"
  "ling.v1alpha1.MetadataR\010metadata\"\201\001\n\026Get"
  "AutoscalingResponse\022O\n\013autoscaling\030\001 \001(\013"
  "2-.performance.autoscaling.v1alpha1.Auto"
  "scalingR\013autoscaling\022\026\n\006status\030\002 \001(\tR\006st"
  "atus\"`\n\026ListAutoscalingRequest\022F\n\010metada"
  "ta\030\001 \001(\0132*.performance.autoscaling.v1alp"
  "ha1.MetadataR\010metadata\"l\n\027ListAutoscalin"
  "gResponse\022Q\n\014autoscalings\030\001 \003(\0132-.perfor"
  "mance.autoscaling.v1alpha1.AutoscalingR\014"
  "autoscalings2\335\005\n\025AutoscalingAPIService\022\216"
  "\001\n\021CreateAutoscaling\022:.performance.autos"
  "caling.v1alpha1.CreateAutoscalingRequest"
  "\032;.performance.autoscaling.v1alpha1.Crea"
  "teAutoscalingResponse\"\000\022\216\001\n\021UpdateAutosc"
  "aling\022:.performance.autoscaling.v1alpha1"
  ".UpdateAutoscalingRequest\032;.performance."
  "autoscaling.v1alpha1.UpdateAutoscalingRe"
  "sponse\"\000\022\216\001\n\021DeleteAutoscaling\022:.perform"
  "ance.autoscaling.v1alpha1.DeleteAutoscal"
  "ingRequest\032;.performance.autoscaling.v1a"
  "lpha1.DeleteAutoscalingResponse\"\000\022\205\001\n\016Ge"
  "tAutoscaling\0227.performance.autoscaling.v"
  "1alpha1.GetAutoscalingRequest\0328.performa"
  "nce.autoscaling.v1alpha1.GetAutoscalingR"
  "esponse\"\000\022\210\001\n\017ListAutoscaling\0228.performa"
  "nce.autoscaling.v1alpha1.ListAutoscaling"
  "Request\0329.performance.autoscaling.v1alph"
  "a1.ListAutoscalingResponse\"\000B\304\001\n*io.cuem"
  "by.performance.autoscaling.v1alpha1B\023Aut"
  "oscalingApiProtoP\001Z3github.com/performan"
  "ce-grpc-sdk/autoscalingv1alpha1\242\002\003PFX\252\002 "
  "Performance.Autoscaling.V1Alpha1\312\002 Perfo"
  "rmance\\Autoscaling\\V1Alpha1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_deps[1] = {
  &::descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto = {
  false, false, 2235, descriptor_table_protodef_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto, "performance/autoscaling/v1alpha1/autoscaling_api.proto", 
  &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once, descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto::offsets,
  file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto, file_level_enum_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto, file_level_service_descriptors_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter() {
  return &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto(&descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto);
namespace performance {
namespace autoscaling {
namespace v1alpha1 {

// ===================================================================

class CreateAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const CreateAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
CreateAutoscalingRequest::_Internal::autoscaling(const CreateAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
void CreateAutoscalingRequest::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
CreateAutoscalingRequest::CreateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
}
CreateAutoscalingRequest::CreateAutoscalingRequest(const CreateAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
}

inline void CreateAutoscalingRequest::SharedCtor() {
autoscaling_ = nullptr;
}

CreateAutoscalingRequest::~CreateAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete autoscaling_;
}

void CreateAutoscalingRequest::ArenaDtor(void* object) {
  CreateAutoscalingRequest* _this = reinterpret_cast< CreateAutoscalingRequest* >(object);
  (void)_this;
}
void CreateAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  return target;
}

size_t CreateAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateAutoscalingRequest::GetClassData() const { return &_class_data_; }

void CreateAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const CreateAutoscalingRequest &>(from));
}


void CreateAutoscalingRequest::MergeFrom(const CreateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateAutoscalingRequest::CopyFrom(const CreateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.CreateAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAutoscalingRequest::IsInitialized() const {
  return true;
}

void CreateAutoscalingRequest::InternalSwap(CreateAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[0]);
}

// ===================================================================

class CreateAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const CreateAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
CreateAutoscalingResponse::_Internal::autoscaling(const CreateAutoscalingResponse* msg) {
  return *msg->autoscaling_;
}
void CreateAutoscalingResponse::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
CreateAutoscalingResponse::CreateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
}
CreateAutoscalingResponse::CreateAutoscalingResponse(const CreateAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
}

inline void CreateAutoscalingResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

CreateAutoscalingResponse::~CreateAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void CreateAutoscalingResponse::ArenaDtor(void* object) {
  CreateAutoscalingResponse* _this = reinterpret_cast< CreateAutoscalingResponse* >(object);
  (void)_this;
}
void CreateAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.CreateAutoscalingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.CreateAutoscalingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  return target;
}

size_t CreateAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateAutoscalingResponse::GetClassData() const { return &_class_data_; }

void CreateAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CreateAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const CreateAutoscalingResponse &>(from));
}


void CreateAutoscalingResponse::MergeFrom(const CreateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateAutoscalingResponse::CopyFrom(const CreateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.CreateAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAutoscalingResponse::IsInitialized() const {
  return true;
}

void CreateAutoscalingResponse::InternalSwap(CreateAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[1]);
}

// ===================================================================

class UpdateAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const UpdateAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
UpdateAutoscalingRequest::_Internal::autoscaling(const UpdateAutoscalingRequest* msg) {
  return *msg->autoscaling_;
}
void UpdateAutoscalingRequest::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
UpdateAutoscalingRequest::UpdateAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
}
UpdateAutoscalingRequest::UpdateAutoscalingRequest(const UpdateAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
}

inline void UpdateAutoscalingRequest::SharedCtor() {
autoscaling_ = nullptr;
}

UpdateAutoscalingRequest::~UpdateAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete autoscaling_;
}

void UpdateAutoscalingRequest::ArenaDtor(void* object) {
  UpdateAutoscalingRequest* _this = reinterpret_cast< UpdateAutoscalingRequest* >(object);
  (void)_this;
}
void UpdateAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  return target;
}

size_t UpdateAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAutoscalingRequest::GetClassData() const { return &_class_data_; }

void UpdateAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const UpdateAutoscalingRequest &>(from));
}


void UpdateAutoscalingRequest::MergeFrom(const UpdateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAutoscalingRequest::CopyFrom(const UpdateAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.UpdateAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAutoscalingRequest::IsInitialized() const {
  return true;
}

void UpdateAutoscalingRequest::InternalSwap(UpdateAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[2]);
}

// ===================================================================

class UpdateAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const UpdateAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
UpdateAutoscalingResponse::_Internal::autoscaling(const UpdateAutoscalingResponse* msg) {
  return *msg->autoscaling_;
}
void UpdateAutoscalingResponse::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
UpdateAutoscalingResponse::UpdateAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
}
UpdateAutoscalingResponse::UpdateAutoscalingResponse(const UpdateAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
}

inline void UpdateAutoscalingResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

UpdateAutoscalingResponse::~UpdateAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void UpdateAutoscalingResponse::ArenaDtor(void* object) {
  UpdateAutoscalingResponse* _this = reinterpret_cast< UpdateAutoscalingResponse* >(object);
  (void)_this;
}
void UpdateAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.UpdateAutoscalingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.UpdateAutoscalingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  return target;
}

size_t UpdateAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAutoscalingResponse::GetClassData() const { return &_class_data_; }

void UpdateAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<UpdateAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const UpdateAutoscalingResponse &>(from));
}


void UpdateAutoscalingResponse::MergeFrom(const UpdateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAutoscalingResponse::CopyFrom(const UpdateAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.UpdateAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAutoscalingResponse::IsInitialized() const {
  return true;
}

void UpdateAutoscalingResponse::InternalSwap(UpdateAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[3]);
}

// ===================================================================

class DeleteAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const DeleteAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
DeleteAutoscalingRequest::_Internal::metadata(const DeleteAutoscalingRequest* msg) {
  return *msg->metadata_;
}
void DeleteAutoscalingRequest::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
DeleteAutoscalingRequest::DeleteAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
}
DeleteAutoscalingRequest::DeleteAutoscalingRequest(const DeleteAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
}

inline void DeleteAutoscalingRequest::SharedCtor() {
metadata_ = nullptr;
}

DeleteAutoscalingRequest::~DeleteAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void DeleteAutoscalingRequest::ArenaDtor(void* object) {
  DeleteAutoscalingRequest* _this = reinterpret_cast< DeleteAutoscalingRequest* >(object);
  (void)_this;
}
void DeleteAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  return target;
}

size_t DeleteAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteAutoscalingRequest::GetClassData() const { return &_class_data_; }

void DeleteAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const DeleteAutoscalingRequest &>(from));
}


void DeleteAutoscalingRequest::MergeFrom(const DeleteAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteAutoscalingRequest::CopyFrom(const DeleteAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.DeleteAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAutoscalingRequest::IsInitialized() const {
  return true;
}

void DeleteAutoscalingRequest::InternalSwap(DeleteAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[4]);
}

// ===================================================================

class DeleteAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const DeleteAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
DeleteAutoscalingResponse::_Internal::metadata(const DeleteAutoscalingResponse* msg) {
  return *msg->metadata_;
}
void DeleteAutoscalingResponse::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
DeleteAutoscalingResponse::DeleteAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
}
DeleteAutoscalingResponse::DeleteAutoscalingResponse(const DeleteAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
}

inline void DeleteAutoscalingResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
metadata_ = nullptr;
}

DeleteAutoscalingResponse::~DeleteAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void DeleteAutoscalingResponse::ArenaDtor(void* object) {
  DeleteAutoscalingResponse* _this = reinterpret_cast< DeleteAutoscalingResponse* >(object);
  (void)_this;
}
void DeleteAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.DeleteAutoscalingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.DeleteAutoscalingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  return target;
}

size_t DeleteAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteAutoscalingResponse::GetClassData() const { return &_class_data_; }

void DeleteAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeleteAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const DeleteAutoscalingResponse &>(from));
}


void DeleteAutoscalingResponse::MergeFrom(const DeleteAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteAutoscalingResponse::CopyFrom(const DeleteAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.DeleteAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAutoscalingResponse::IsInitialized() const {
  return true;
}

void DeleteAutoscalingResponse::InternalSwap(DeleteAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[5]);
}

// ===================================================================

class GetAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const GetAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
GetAutoscalingRequest::_Internal::metadata(const GetAutoscalingRequest* msg) {
  return *msg->metadata_;
}
void GetAutoscalingRequest::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
GetAutoscalingRequest::GetAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
}
GetAutoscalingRequest::GetAutoscalingRequest(const GetAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
}

inline void GetAutoscalingRequest::SharedCtor() {
metadata_ = nullptr;
}

GetAutoscalingRequest::~GetAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void GetAutoscalingRequest::ArenaDtor(void* object) {
  GetAutoscalingRequest* _this = reinterpret_cast< GetAutoscalingRequest* >(object);
  (void)_this;
}
void GetAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  return target;
}

size_t GetAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAutoscalingRequest::GetClassData() const { return &_class_data_; }

void GetAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const GetAutoscalingRequest &>(from));
}


void GetAutoscalingRequest::MergeFrom(const GetAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAutoscalingRequest::CopyFrom(const GetAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.GetAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAutoscalingRequest::IsInitialized() const {
  return true;
}

void GetAutoscalingRequest::InternalSwap(GetAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[6]);
}

// ===================================================================

class GetAutoscalingResponse::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Autoscaling& autoscaling(const GetAutoscalingResponse* msg);
};

const ::performance::autoscaling::v1alpha1::Autoscaling&
GetAutoscalingResponse::_Internal::autoscaling(const GetAutoscalingResponse* msg) {
  return *msg->autoscaling_;
}
void GetAutoscalingResponse::clear_autoscaling() {
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
}
GetAutoscalingResponse::GetAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
}
GetAutoscalingResponse::GetAutoscalingResponse(const GetAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_autoscaling()) {
    autoscaling_ = new ::performance::autoscaling::v1alpha1::Autoscaling(*from.autoscaling_);
  } else {
    autoscaling_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
}

inline void GetAutoscalingResponse::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
autoscaling_ = nullptr;
}

GetAutoscalingResponse::~GetAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete autoscaling_;
}

void GetAutoscalingResponse::ArenaDtor(void* object) {
  GetAutoscalingResponse* _this = reinterpret_cast< GetAutoscalingResponse* >(object);
  (void)_this;
}
void GetAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && autoscaling_ != nullptr) {
    delete autoscaling_;
  }
  autoscaling_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autoscaling(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "performance.autoscaling.v1alpha1.GetAutoscalingResponse.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autoscaling(this), target, stream);
  }

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "performance.autoscaling.v1alpha1.GetAutoscalingResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  return target;
}

size_t GetAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 2 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // .performance.autoscaling.v1alpha1.Autoscaling autoscaling = 1 [json_name = "autoscaling"];
  if (this->_internal_has_autoscaling()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autoscaling_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAutoscalingResponse::GetClassData() const { return &_class_data_; }

void GetAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const GetAutoscalingResponse &>(from));
}


void GetAutoscalingResponse::MergeFrom(const GetAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_autoscaling()) {
    _internal_mutable_autoscaling()->::performance::autoscaling::v1alpha1::Autoscaling::MergeFrom(from._internal_autoscaling());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAutoscalingResponse::CopyFrom(const GetAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.GetAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAutoscalingResponse::IsInitialized() const {
  return true;
}

void GetAutoscalingResponse::InternalSwap(GetAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, GetArenaForAllocation(),
      &other->status_, other->GetArenaForAllocation()
  );
  swap(autoscaling_, other->autoscaling_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[7]);
}

// ===================================================================

class ListAutoscalingRequest::_Internal {
 public:
  static const ::performance::autoscaling::v1alpha1::Metadata& metadata(const ListAutoscalingRequest* msg);
};

const ::performance::autoscaling::v1alpha1::Metadata&
ListAutoscalingRequest::_Internal::metadata(const ListAutoscalingRequest* msg) {
  return *msg->metadata_;
}
void ListAutoscalingRequest::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
ListAutoscalingRequest::ListAutoscalingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
}
ListAutoscalingRequest::ListAutoscalingRequest(const ListAutoscalingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::performance::autoscaling::v1alpha1::Metadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
}

inline void ListAutoscalingRequest::SharedCtor() {
metadata_ = nullptr;
}

ListAutoscalingRequest::~ListAutoscalingRequest() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListAutoscalingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
}

void ListAutoscalingRequest::ArenaDtor(void* object) {
  ListAutoscalingRequest* _this = reinterpret_cast< ListAutoscalingRequest* >(object);
  (void)_this;
}
void ListAutoscalingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListAutoscalingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAutoscalingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAutoscalingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListAutoscalingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  return target;
}

size_t ListAutoscalingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .performance.autoscaling.v1alpha1.Metadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAutoscalingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAutoscalingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAutoscalingRequest::GetClassData() const { return &_class_data_; }

void ListAutoscalingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListAutoscalingRequest *>(to)->MergeFrom(
      static_cast<const ListAutoscalingRequest &>(from));
}


void ListAutoscalingRequest::MergeFrom(const ListAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::performance::autoscaling::v1alpha1::Metadata::MergeFrom(from._internal_metadata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAutoscalingRequest::CopyFrom(const ListAutoscalingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.ListAutoscalingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAutoscalingRequest::IsInitialized() const {
  return true;
}

void ListAutoscalingRequest::InternalSwap(ListAutoscalingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAutoscalingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[8]);
}

// ===================================================================

class ListAutoscalingResponse::_Internal {
 public:
};

void ListAutoscalingResponse::clear_autoscalings() {
  autoscalings_.Clear();
}
ListAutoscalingResponse::ListAutoscalingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  autoscalings_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
}
ListAutoscalingResponse::ListAutoscalingResponse(const ListAutoscalingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      autoscalings_(from.autoscalings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
}

inline void ListAutoscalingResponse::SharedCtor() {
}

ListAutoscalingResponse::~ListAutoscalingResponse() {
  // @@protoc_insertion_point(destructor:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListAutoscalingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListAutoscalingResponse::ArenaDtor(void* object) {
  ListAutoscalingResponse* _this = reinterpret_cast< ListAutoscalingResponse* >(object);
  (void)_this;
}
void ListAutoscalingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListAutoscalingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAutoscalingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  autoscalings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAutoscalingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_autoscalings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListAutoscalingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_autoscalings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_autoscalings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  return target;
}

size_t ListAutoscalingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .performance.autoscaling.v1alpha1.Autoscaling autoscalings = 1 [json_name = "autoscalings"];
  total_size += 1UL * this->_internal_autoscalings_size();
  for (const auto& msg : this->autoscalings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAutoscalingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAutoscalingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAutoscalingResponse::GetClassData() const { return &_class_data_; }

void ListAutoscalingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ListAutoscalingResponse *>(to)->MergeFrom(
      static_cast<const ListAutoscalingResponse &>(from));
}


void ListAutoscalingResponse::MergeFrom(const ListAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  autoscalings_.MergeFrom(from.autoscalings_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAutoscalingResponse::CopyFrom(const ListAutoscalingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:performance.autoscaling.v1alpha1.ListAutoscalingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAutoscalingResponse::IsInitialized() const {
  return true;
}

void ListAutoscalingResponse::InternalSwap(ListAutoscalingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  autoscalings_.InternalSwap(&other->autoscalings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAutoscalingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_getter, &descriptor_table_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto_once,
      file_level_metadata_performance_2fautoscaling_2fv1alpha1_2fautoscaling_5fapi_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace autoscaling
}  // namespace performance
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::CreateAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::CreateAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::UpdateAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::UpdateAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::DeleteAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::DeleteAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::GetAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::GetAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::GetAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::GetAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::GetAutoscalingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::ListAutoscalingRequest* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::ListAutoscalingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::ListAutoscalingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::performance::autoscaling::v1alpha1::ListAutoscalingResponse* Arena::CreateMaybeMessage< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::performance::autoscaling::v1alpha1::ListAutoscalingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
