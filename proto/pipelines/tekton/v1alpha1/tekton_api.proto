syntax = "proto3";

package pipelines.tekton.v1alpha1;

option csharp_namespace = "Pipelines.Tekton.V1Alpha1";
option go_package = "github.com/cuemby/ccp-sdk/gen/go/pipelines/tekton/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "TektonAPIProto";
option java_package = "io.cuemby.pipelines.tekton.v1alpha1";
option objc_class_prefix = "PPX";
option php_namespace = "Pipelines\\Tekton\\V1Alpha1";

import "pipelines/tekton/v1alpha1/tekton.proto";
//import "tekton.proto";

service TektonPipelineAPIService{
    rpc CreateTektonPipeline(CreateTektonPipelineRequest) returns (CreateTektonPipelineResponse);
    rpc DeleteTektonPipeline(DeleteTektonPipelineRequest) returns (DeleteTektonPipelineResponse);
    rpc ListTektonTaskPipeline(ListTektonTaskPipelineRequest) returns (ListTektonTaskPipelineResponse);
    rpc GetPipelineRun(GetPipelineRunRequest) returns (GetPipelineRunResponse);
    rpc ListPipelineRun(ListPipelineRunRequest) returns (ListPipelineRunResponse);
    rpc GetStatusRuntime(GetStatusRuntimeRequest) returns (stream GetStatusRuntimeResponse);
}


message CreateTektonPipelineRequest {
    pipelines.tekton.v1alpha1.Pipeline tekton_pipeline = 1;
    string user_id = 2;
}

message CreateTektonPipelineResponse {
    pipelines.tekton.v1alpha1.Pipeline tekton_pipeline = 1;
    string status = 2;
}

message DeleteTektonPipelineRequest {
    string runtime_name = 1;
    string application_id = 2;
    string environment_id = 3;
}

message DeleteTektonPipelineResponse {
    string status = 1;
}

// CUSTOM PIPELINES
message ListTektonTaskPipelineRequest {
}

message ListTektonTaskPipelineResponse {
    pipelines.tekton.v1alpha1.TektonTaskList task_list = 1;
    string status = 2;
}

// PIPELINERUN

message GetPipelineRunRequest {
    string runtime_id = 1;
}

message GetPipelineRunResponse {
    pipelines.tekton.v1alpha1.PipelineRun pipeline_run = 1;
    string status = 2;
}

message ListPipelineRunRequest {
    string runtime_id = 1;
}

message ListPipelineRunResponse {
    PipelineRunList pipeline_run_list = 1;
    string status = 2;
}

message GetStatusRuntimeRequest {
    string runtime_id = 1;
}

message GetStatusRuntimeResponse {
    pipelines.tekton.v1alpha1.Event event = 1;
}