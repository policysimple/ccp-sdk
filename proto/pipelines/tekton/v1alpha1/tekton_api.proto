syntax = "proto3";

package pipelines.tekton.v1alpha1;

option csharp_namespace = "Pipelines.Tekton.V1Alpha1";
option go_package = "github.com/cuemby/ccp-sdk/gen/go/pipelines/tekton/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "TektonAPIProto";
option java_package = "io.cuemby.pipelines.tekton.v1alpha1";
option objc_class_prefix = "PPX";
option php_namespace = "Pipelines\\Tekton\\V1Alpha1";

import "pipelines/tekton/v1alpha1/tekton.proto";
//import "tekton.proto";

service TektonPipelineAPIService{
    rpc CreateTektonPipeline(CreateTektonPipelineRequest) returns (CreateTektonPipelineResponse);
    rpc DeleteTektonPipeline(DeleteTektonPipelineRequest) returns (DeleteTektonPipelineResponse);
    rpc CreateTektonTaskPipeline(CreateTektonTaskPipelineRequest) returns (CreateTektonTaskPipelineResponse);
    rpc DeleteTektonTaskPipeline(DeleteTektonTaskPipelineRequest) returns (DeleteTektonTaskPipelineResponse);
    rpc ListTektonTaskPipeline(ListTektonTaskPipelineRequest) returns (ListTektonTaskPipelineResponse);
    rpc GetTektonTaskPipeline(GetTektonTaskPipelineRequest) returns (GetTektonTaskPipelineResponse);
    rpc CreateCustomPipeline(CreateCustomPipelineRequest) returns (CreateCustomPipelineResponse);
    rpc DeleteCustomPipeline(DeleteCustomPipelineRequest) returns (DeleteCustomPipelineResponse);
    rpc ListCustomPipeline(ListCustomPipelineRequest) returns (ListCustomPipelineResponse);
    rpc GetCustomPipeline(GetCustomPipelineRequest) returns (GetCustomPipelineResponse);
    rpc UpdateCustomPipeline(UpdateCustomPipelineRequest) returns (UpdateCustomPipelineResponse);
}

message CreateTektonPipelineRequest {
    pipelines.tekton.v1alpha1.Pipeline tekton_pipeline = 1;
    string user_id = 2;
}

message CreateTektonPipelineResponse {
    pipelines.tekton.v1alpha1.Pipeline tekton_pipeline = 1;
    string status = 2;
}

message DeleteTektonPipelineRequest {
    string runtime_name = 1;
    string application_id = 2;
    string environment_id = 3;
}

message DeleteTektonPipelineResponse {
    string status = 1;
}

message CreateTektonTaskPipelineRequest {
    pipelines.tekton.v1alpha1.Task tekton_task = 1;
    int32 order = 2;
}

message CreateTektonTaskPipelineResponse {
    pipelines.tekton.v1alpha1.Task tekton_task = 1;
}

message DeleteTektonTaskPipelineRequest {
    string task_id = 2;
}

message DeleteTektonTaskPipelineResponse {
    string status = 1;
}

message ListTektonTaskPipelineRequest {
}

message ListTektonTaskPipelineResponse {
    pipelines.tekton.v1alpha1.TektonTaskList task_list = 1;
    string status = 2;
}

message GetTektonTaskPipelineRequest {
    string task_id = 1;
}

message GetTektonTaskPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipeline task = 1;
    string status = 2;
}


// CUSTOM PIPELINES

message CreateCustomPipelineRequest {
    pipelines.tekton.v1alpha1.CustomPipeline custom_pipeline = 1;
}

message CreateCustomPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipelineResponse custom_pipeline_response = 1;
}

message DeleteCustomPipelineRequest {
    string custom_pipeline_id = 1;
}

message DeleteCustomPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipelineResponse custom_pipeline_response = 1;
}

message ListCustomPipelineRequest {
}

message ListCustomPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipelineList custom_pipeline_list = 1;
    string status = 2;
}

message GetCustomPipelineRequest {
    string custom_pipeline_id = 1;
}

message GetCustomPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipelineResponse custom_pipeline_response = 1;
}

message UpdateCustomPipelineRequest {
    pipelines.tekton.v1alpha1.CustomPipeline custom_pipeline = 1;
    string custom_pipeline_id = 2;
}

message UpdateCustomPipelineResponse {
    pipelines.tekton.v1alpha1.CustomPipelineResponse custom_pipeline_response = 1;
}