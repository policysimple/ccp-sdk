syntax = "proto3";

package pipelines.runtime.v1alpha1;

option csharp_namespace = "Pipelines.Runtime.V1Alpha1";
option go_package = "github.com/cuemby/ccp-runtime-service/runtimev1alpha1";
option java_multiple_files = true;
option java_outer_classname = "RuntimeProto";
option java_package = "io.cuemby.pipelines.runtime.v1alpha1";
option objc_class_prefix = "PPX";
option php_namespace = "Pipelines\\Runtime\\V1Alpha1";

import "application/v1alpha1/application.proto";
import "pipelines/tekton/v1alpha1/tekton.proto";

enum TrafficType {
  TRAFFIC_TYPE_UNSPECIFIED = 0;
  TRAFFIC_TYPE_EXTERNAL = 1;
  TRAFFIC_TYPE_INTERNAL = 2;
}

// Runtime ...
message Runtime {
  string id = 1;
  string name = 2;
  repeated IntanceType instance_types= 3;
  string organization_id = 4;
  string project_id = 5;
  string name_project = 6;
  string application_id = 7;
  string workspace_id = 8;
  string environment_id = 9;
  string scaler = 10;
  string pod_status = 11;
  string pod_status_msg = 12;
  map<string, string> integration = 13;
  map<string, string> environment_variables = 14;
  map<string, string> commands = 15;
  map<string, string> secrets = 16;
  map<string, string> extra_args = 17;
  TrafficType traffic_type = 18;
  string response_message = 19;
  string environment_name=20;
  string environment_internal_name=21;
  string application_name = 22;
  uint32 storage_used = 23;
	uint32 storage_limit = 24;
  string integration_id = 25;
  application.v1alpha1.Application application_data = 26;
  bool custom_pipeline = 27;
  repeated pipelines.tekton.v1alpha1.Task before_deploy_tasks = 28;
  repeated pipelines.tekton.v1alpha1.Task after_deploy_tasks = 29;
  string pod_ingress_cert = 30;
  bool is_not_exist_dockerfile= 31;
  repeated pipelines.tekton.v1alpha1.Params params = 32;

}

message RuntimeList {
  repeated Runtime items = 1;
}

message IntanceType {
  string id = 1;
  string name = 2;
  repeated ResourcesRules resources_rules= 3;
}

message ResourcesRules {
  repeated Limit limit= 1;
  repeated Request request= 2; 
}

message Limit {
  string cpu = 1;
  string ram = 2; 
}

message Request {
  string cpu = 1;
  string ram = 2; 
}