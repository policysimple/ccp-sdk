syntax = "proto3";

package pipelines.runtime.v1alpha1;

option csharp_namespace = "Pipelines.Runtime.V1Alpha1";
option go_package = "github.com/cuemby/ccp-runtime-service/runtimev1alpha1";
option java_multiple_files = true;
option java_outer_classname = "RuntimeProto";
option java_package = "io.cuemby.pipelines.runtime.v1alpha1";
option objc_class_prefix = "PPX";
option php_namespace = "Pipelines\\Runtime\\V1Alpha1";

import "pipelines/tekton/v1alpha1/tekton.proto";
//import "../../tekton/v1alpha1/tekton.proto";


// APPLICATION

message Branch {
  string name = 1;
  string sha = 2;
  string url = 3;
}

message Repository {
  string name = 1;
  string full_name = 2;
  string description = 3;
  bool fork = 4;
  string clone_url = 5;
  bool private =6;
  Branch branch = 7;
}

message  Command {
  string build = 1;
  string run = 2;
}

message Env {
  string value = 1;
  string key = 2;
  bool encrypted = 3;
}

message Configuration {
  repeated Env envs = 1;
  repeated Command commands = 2;
  int32 port = 3;
  string runtime_type = 4;
}

message Scaling  {
	string cpu_rule = 1;
	string cool_down_period = 2;  
	string polling_interval = 3; 
	string min_replica = 4;      
	string max_replica = 5;      
  string memory_rule = 6;
}

enum DockerImageBuildpack {
  DOCKER_IMAGE_BUILDPACK_UNSPECIFIED = 0;
  DOCKER_IMAGE_BUILDPACK_GOLANG = 1;
  DOCKER_IMAGE_BUILDPACK_JAVA = 2;
  DOCKER_IMAGE_BUILDPACK_JAVASCRIPT = 3;
  DOCKER_IMAGE_BUILDPACK_PYTHON = 4;
}

message ContainerRegistry {
  string registry_url = 1;
  string registry_user = 2;
  string reg_cred_auth = 3;
  string image_name = 4;
}

message Application {
  string id = 1;
  string name = 2;
  string integration = 3;
  Repository repository = 4;
  Configuration configuration = 5;
  string project_id = 6;
  string name_project = 7;
  string project_image = 8;
  string project_description = 9;
  string organization_id = 10;
  Scaling scaling = 11;
  TrafficType traffic_type = 12;
  bool integration_status = 13;
  DockerImageBuildpack docker_image_buildpack = 14;
  bool no_docker_exists = 15;
  ContainerRegistry container_registry = 16;
  string docker_image_name = 17;
  string application_status = 18;
}


enum TrafficType {
  TRAFFIC_TYPE_UNSPECIFIED = 0;
  TRAFFIC_TYPE_EXTERNAL = 1;
  TRAFFIC_TYPE_INTERNAL = 2;
}

// Runtime ...
message Runtime {
  string id = 1;
  string name = 2;
  repeated IntanceType instance_types= 3;
  string organization_id = 4;
  string project_id = 5;
  string name_project = 6;
  string application_id = 7;
  string workspace_id = 8;
  string environment_id = 9;
  string scaler = 10;
  string pod_status = 11;
  string pod_status_msg = 12;
  map<string, string> integration = 13;
  map<string, string> environment_variables = 14;
  map<string, string> commands = 15;
  map<string, string> secrets = 16;
  map<string, string> extra_args = 17;
  TrafficType traffic_type = 18;
  string response_message = 19;
  string environment_name=20;
  string environment_internal_name=21;
  string application_name = 22;
  uint32 storage_used = 23;
	uint32 storage_limit = 24;
  string integration_id = 25;
  Application application_data = 26;
  bool custom_pipeline = 27;
  repeated pipelines.tekton.v1alpha1.Task before_deploy_tasks = 28;
  repeated pipelines.tekton.v1alpha1.Task after_deploy_tasks = 29;
  string pod_ingress_cert = 30;
  bool is_not_exist_dockerfile= 31;
  repeated pipelines.tekton.v1alpha1.Params params = 32;
  pipelines.tekton.v1alpha1.PipelineRun pipeline_run = 33;
  string host_url = 34;
  string app_label = 35;
  string created_at = 36;
  string updated_at = 37;
  string application_status = 38;
  string runtime_status = 39;
  Configuration configuration = 40;
  Scaling scaling = 41;
}

message RuntimeList {
  repeated Runtime items = 1;
}

message IntanceType {
  string id = 1;
  string name = 2;
  repeated ResourcesRules resources_rules= 3;
}

message ResourcesRules {
  repeated Limit limit= 1;
  repeated Request request= 2; 
}

message Limit {
  string cpu = 1;
  string ram = 2; 
}

message Request {
  string cpu = 1;
  string ram = 2; 
}

message PipelineRun {
  string name = 1;
  string label = 2;
  string namespace = 3;
  string pipeline_run_status = 4;
}