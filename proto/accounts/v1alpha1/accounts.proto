
syntax = "proto3";

option go_package = "github.com/cuemby/ccp-sdk/gen/go/accounts/v1alpha1";

package accounts.v1alpha1;

service AccountService {
    ///AUTH
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc ListUser(ListUserRequest) returns (ListUserResponse);
    rpc GetOneUser(GetOneUserRequest) returns (GetOneUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc ListUserPagination(ListUserPaginationRequest) returns (ListUserPaginationResponse);
    rpc SendInvitationUser(SendInvitationUserRequest) returns (SendInvitationUserResponse);
    rpc GetInvitationUser(GetInvitationUserRequest) returns (GetInvitationUserResponse);
    rpc AgreeInvitationUser(AgreeInvitationUserRequest) returns (AgreeInvitationUserResponse);
    ///PERMISSION
    rpc CreatePermission(CreatePermissionRequest) returns (CreatePermissionResponse);
    rpc ListPermission(ListPermissionRequest) returns (ListPermissionResponse);
    rpc GetOnePermission(GetOnePermissionRequest) returns (GetOnePermissionResponse);
    rpc UpdatePermission(UpdatePermissionRequest) returns (UpdatePermissionResponse);
    rpc DeletePermission(DeletePermissionRequest) returns (DeletePermissionResponse);
    ///Organization
    rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
    rpc ListOrganization(ListOrganizationRequest) returns (ListOrganizationResponse);
    rpc GetOneOrganization(GetOneOrganizationRequest) returns (GetOneOrganizationResponse);
    rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);
    rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse);
    //Roles 
    rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
    rpc ListRoles(ListRolesRequest) returns (ListRolesResponse);
    rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse);
    rpc GetOneRole(GetOneRoleRequest) returns (GetOneRoleResponse);
    rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
    //CRUD Project
    rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
    rpc GetOneProject(GetOneProjectRequest) returns (GetOneProjectResponse);
    rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
    rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);
    rpc ListProject(ListProjectRequest) returns (ListProjectResponse);
    // Get Users Dex
    rpc GetListUserDex(GetListUserDexRequest) returns (GetListUserDexResponse);
    rpc GetOneUserDex(GetOneUserDexRequest) returns (GetOneUserDexResponse);
    rpc CheckUser(CheckUserRequest) returns (CheckUserResponse);
    // Send Verification
    rpc SendVerificationEmail(SendVerificationEmailRequest) returns (SendVerificationEmailResponse);
    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse);
    //  Countries
    rpc ListCountries(ListCountriesRequest) returns (ListCountriesResponse);
    rpc GetOneCountry(GetOneCountryRequest) returns (GetOneCountryResponse);
    // Tokens
    rpc CreateApiKey(CreateApiKeyRequest) returns (CreateApiKeyResponse);
    rpc GetOneApiKey(GetOneApiKeyRequest) returns (GetOneApiKeyResponse);
    rpc ListApiKey(ListApiKeyRequest) returns (ListApiKeyResponse);
    rpc UpdateApiKey(UpdateApiKeyRequest) returns (UpdateApiKeyResponse);
    rpc DeleteApiKey(DeleteApiKeyRequest) returns (DeleteApiKeyResponse);
    
}

/*
    Tokens Create
*/

message CreateApiKeyRequest {
    string name = 1;
    string user_id =2;
    repeated uint32 roles_ids = 3;
    repeated uint32 permissions_ids = 4;
}

message ApiKey {
    string id = 1;
    string name = 2;
    string user_id = 3;
    repeated Rol rol = 4;
    repeated Permission permissions = 5;
}

message CreateApiKeyResponse {
    string msg = 1;
    string api_key = 2;
    uint32 access_point_id = 4;
    string error = 5;
}

/*
    Tokens Get One
*/

message GetOneApiKeyRequest {
    uint32 id = 1;
}

message GetOneApiKeyResponse {
    uint32 id = 1;
    string api_key = 2;
    string name = 3;
    string user_id =4;
    repeated Rol roles = 5;
    repeated Permission permissions = 6;
}

/*
    Tokens List
*/

message ListApiKeyRequest {
    string user_id = 1;
}

message ApiKeyList {
    uint32  id = 1;
    string api_key = 2;
    string name = 3;
    string user_id = 4;
}

message ListApiKeyResponse {
    repeated ApiKeyList api_keys = 1;
}

/*
    Tokens Update
*/

message UpdateApiKeyRequest {
    uint32 id = 1;
    string name = 2;
    repeated uint32 roles_ids = 3;
    repeated uint32 permissions_ids = 4;
    bool is_active = 5;
}

message UpdateApiKeyResponse {
    string msg = 1;
    string api_key = 2;
    string error = 3;
}

/*
    Tokens Delete   
*/

message DeleteApiKeyRequest {
    uint32 id = 1;
}

message DeleteApiKeyResponse {
    string msg = 1;
    string api_key = 2;
    string error = 3;
}

/*  

    Requests Countries

*/

message City {
    uint32 id = 1;
    string name = 2;
    string latitude = 3;
    string longitude = 4;
}

message State {
    uint32 id = 1;
    string name = 2;
    repeated City cities = 3;
}

message CountryList {
    uint32 id = 1;
    string name = 2;
    string code = 3;
    string phone_code = 4;
    string emoji = 5;
}

message ListCountriesRequest {

}

message ListCountriesResponse {
    repeated CountryList countries = 1;
}

message GetOneCountryRequest {
     uint32 country_id = 1;
     string name = 2;
}

message GetOneCountryResponse {
    uint32 id = 1;
    string name = 2;
    string code = 3;
    string phone_code = 4;
    string emoji = 5;
    repeated State states = 6;
}

/*
    VERIFICATION EMAIL
*/
message SendVerificationEmailRequest {
    string email = 1;
    string name = 2;
    string url = 3;
}

message SendVerificationEmailResponse {
    string html_result=1;
    string error = 2;
}

message VerifyEmailRequest {
    string token = 1;
}

message VerifyEmailResponse {
    string msg = 1;
    string error = 2;
}


message CheckUserRequest {
    uint32 organization_id = 1;
    uint32 project_id = 2;
    uint32 get_organization_from_project = 3;
    string permission = 4;
    // users
    string user_id_dex = 5;
    string user_id_admin = 6;
    uint32 user_id = 7;
    string type_permission = 9;
    repeated uint32 roles_ids = 10;

    string api_key_value = 11;

}

message CheckUserResponse {
    bool is_exists = 1;
    string error = 2;
    bool is_admin = 3;
    string msg = 4;
}

message UsersDex {
    string user_id=1;
    string provider=2;
}

/*

USERS

*/


message CreateUserResponse {
    string msg = 1;
    string error = 2;
}

message UpdateUserResponse {
    string msg = 1;
    string error = 2;
}

message DeleteUserResponse {
    string msg = 1;
    string error = 2;
}

//ListUser
message ListUserRequest {
    uint32 organization_id = 1;
    uint32 project_id = 2;
}

//Create
message CreateUserRequest {
    string user_id = 1;
    string first_name = 2;
    string last_name = 3;
    string email = 4;
    bool is_active = 5;
    repeated uint32 roles_ids = 6;
    repeated uint32 permissions_ids = 7;
    repeated uint32 organizations_ids = 8;

    // details
    string phone_number = 9;
    string country = 10;
    string city = 11;
    string zip_code = 12;
    string address = 13;
    string state = 14;
    string emoji_country = 15;
    string invitation_code  = 16;
}

//Update
message UpdateUserRequest {
    uint32 auth_id = 1;
    CreateUserRequest auth = 2;
}

//Update
message DeleteUserRequest {
    uint32 user_id = 1;
    uint32 organization_id = 2;
}

//Authentication without group and permission
message UserList {
    uint32 id = 1;

    string first_name = 2;
    string last_name = 3;
    string email = 4;

    string user_id = 5;
    bool is_active = 6;
    bool is_super_user = 7;
}


//GetOneUserRequest
message GetOneUserRequest {
    uint32 id = 1;
}

message GetOneUserResponse {
    uint32 id = 1;
    string user_id = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    bool is_active = 6;
    string created_at = 7;
    string updated_at = 8;
    repeated Rol roles = 9;
    repeated Permission permissions = 10;
    bool is_super_user = 11;
    repeated Organization organizations = 12;
    repeated Project projects = 13;

    // details
    string phone_number = 14;
    string country = 15;
    string city = 16;
    string zip_code = 17;
    string address = 18;
    string state = 19;
    string emoji_country = 20;
}


//ListResponse
message ListUserResponse {
    repeated UserList users = 1;
}


//pagination
message ListUserPaginationRequest{
    int32 offset = 1;
    int32 limit = 2;
} 

message ListUserPaginationResponse {
    int64 count = 1;
    repeated UserList users = 2;
}

// Invitation
enum InvitationResponse {
    INVITATION_RESPONSE_ACCEPTED_UNSPECIFIED = 0;
    INVITATION_RESPONSE_REJECTED = 1;
}
/*
message ProjectDetail {
    uint32 project_id = 1;
    uint32 role_id = 2;
}
*/

message SendInvitationUserRequest {
    string name = 1;
    string email = 2;
    //repeated ProjectDetail projects = 3;
    string user_id_admin = 4;
    repeated uint32 roles_ids = 5;
    repeated uint32 permissions_ids = 6;
    uint32 organization_id = 7;
}

message SendInvitationUserResponse {
    Organization organization=1;
    repeated Project projects=2;
    string invitation_code=3;
    string result=4;
    repeated Rol roles = 5;
    repeated Permission permissions = 6;
}

message GetInvitationUserRequest {
    string invitation_code=1;
    string email=2;
}

message GetInvitationUserResponse {
    Organization organization=1;
    repeated Project projects=2;
    string result=3;

    repeated Rol roles = 4;
    repeated Permission permissions = 5;
}

message AgreeInvitationUserRequest {
    string invitation_code= 1 ;
    string email=2;
    string guest_user_id=3;
    InvitationResponse invitation_response=4;
    map<uint32, uint32> projects=5;
}

message AgreeInvitationUserResponse {
    string result=1;
}

/*
    ROLES
*/

message Rol {
    uint32 id = 1;
    string name = 2;
    uint32 project_id = 3;
    uint32 organization_id = 4;
    repeated Permission permissions = 5;
    bool is_admin = 6;
}

message CreateRoleRequest {
    string name = 1;
    string description = 2;
    uint32 project_id = 3;
    uint32 organization_id = 4;
    string type_permission = 5;
    repeated uint32 permission_ids = 6;
}


message UpdateRoleRequest {
    uint32 rol_id = 1;
    CreateRoleRequest rol = 2;
}

message GetOneRoleRequest {
    uint32 rol_id = 1;
}

message GetOneRoleResponse{
    uint32 id = 1;
    string name = 2;
    uint32 organization_id = 3;
    uint32 project_id = 4;
    repeated Permission permissions = 5;
    bool is_admin =6; 
}

message DeleteRoleRequest {
    uint32 rol_id = 1;
}

message ListRolesRequest {
    uint32 project_id = 1;
    uint32 organization_id = 2;
}   
/* 
    Responses
*/
message ListRolesResponse {
    repeated Rol roles = 1;
}

message CreateRoleResponse {
    string msg = 1;
    string error = 2;
    uint32 id = 3;
}

message UpdateRoleResponse {
    string msg = 1;
    string error = 2;
}

message DeleteRoleResponse {
    string msg = 1;
    string error = 2;
}
/*
    PROJECTS
*/
message Project {
    int32 id = 1;
    string name = 2;
    string image = 3;
    uint32 organization_id = 4;
    string description = 5;

    string created_at = 6;
    string updated_at = 7;

    repeated Rol roles = 8;
}
/*
    Requests
*/  
message CreateProjectRequest {
    string name = 1;
    string description = 2;
    string image = 3;
    uint32 organization_id = 4;
    string user_id = 5;
}

message GetOneProjectRequest {
    int32 id = 1;
}

message DeleteProjectRequest {
    int32 id = 1;
}

message ListProjectRequest{
    uint32 organization_id = 1;
}

message UpdateProjectRequest {
    int32 id = 1;
    CreateProjectRequest project = 2;
}
/*
    Responses
*/
message CreateProjectResponse {
    string msg = 1;
    string error = 2;
    uint32 id = 3;
}

message UpdateProjectResponse{
    string msg = 1;
    string error = 2;
}

message DeleteProjectResponse{
    string msg = 1;
    string error = 2;
}

message GetOneProjectResponse {
    int32 id = 1;
    string name = 2;
    string image = 3;
    uint32 organization_id = 4;
    string description = 5;
    string created_at = 6;
    string updated_at = 7;
    repeated Member members = 8;
    UserList owner = 9;

}


message ListProjectResponse {
    repeated Project projects = 1;
}

message ListProjectPaginationRequest {
    int32 offset = 1;
    int32 limit = 2;
}

message ListProjectPaginationResponse {
    repeated Project projects = 1;
    int64 count = 2;
}
/*
    PERMISSIONS
*/



message Permission {
    uint32 id = 1;
    string name = 2;
    string action =3;
    string type = 4;
    string full_name = 5;
}

message GroupPermission {
    string name = 1;
    repeated Permission permissions = 3;
}
message CategoryPermission {
    string name = 1;
    string type = 2;
    repeated GroupPermission group_permissions = 3;
}

message ListPermissionResponse {
    repeated CategoryPermission categories_permissions = 1;
}

message AssignPermissionRequest {
    uint32 user_id = 1;
    uint32 permission_id = 2;
}
/*
    Requests
*/
message ListPermissionRequest{
    //string type = 1;
}

message CreatePermissionRequest {
    string name = 1;
    string type = 2;
    string category = 3;
    string action = 4;

}

message UpdatePermissionRequest {
    uint32 permission_id = 1;
    string name = 2;
    string type = 3;
}   

message GetOnePermissionRequest {
    uint32 permission_id = 1;
}

message GetOnePermissionResponse {
    uint32 id = 1;
    string name = 2;
    string type = 3;
}

message DeletePermissionRequest {
    uint32 permission_id = 1;
}
/*
    Responses
*/
message UpdatePermissionResponse {
    string msg = 1;
    string error = 2;
}   

message DeletePermissionResponse {
    string msg = 1;
    string error = 2;
}

message CreatePermissionResponse {
    string msg = 1;
    string error = 2;
}
/*
    ORGANIZATIONS
*/
message Member {
    uint32 id = 1;
    string user_id = 2;
    string first_name = 3;
    string last_name = 4;
    bool is_active = 5;
}

//Project Organization
message ProjectOrganization {
    int32 id = 1;
    string name = 2;
    string image = 3;
    string description = 4;
}


message Organization {
    uint32 id = 1;
    string name = 2;
    string image = 3;
    string description = 4;
    UserList owner = 7;


}
/*
Requests
*/
message CreateOrganizationRequest {
    string name = 1;
    string image = 2;
    string user_id = 3;
    string description = 4;
}

message ListOrganizationRequest {
}

message GetOneOrganizationRequest {
    uint32 organization_id = 1;
}

message UpdateOrganizationRequest {
    uint32 organization_id = 1;
    string name = 2;
    string description = 3;
    string image = 4;
}


message DeleteOrganizationRequest {
    uint32 organization_id = 1;
}

/*
    Responses
*/

message GetOneOrganizationResponse{
    uint32 id = 1;
    string name = 2;
    string image = 3;
    repeated ProjectOrganization projects = 4;
    repeated Member menbers = 5;
    string description = 6;
    UserList owner = 7;
}


message ListOrganizationResponse {
    repeated Organization organizations = 1;
}

message CreateOrganizationResponse {
    string msg = 1;
    uint32 role_id_organization = 2;
    string error = 3;
    uint32 id = 4;
}

message UpdateOrganizationResponse {
    string msg = 1;
    string error = 2;
}

message DeleteOrganizationResponse {
    string msg = 1;
    string error = 2;
}

/*
    DEX
*/

message GetListUserDexRequest {}

message GetListUserDexResponse {
    repeated UsersDex users_dex = 1;
}


message GetOneUserDexRequest {
    string user_id=1;
    CreateUserRequest user = 2;
}

message GetOneUserDexResponse {
    uint32 id = 1;
    string user_id = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    bool is_active = 6;
    string created_at = 7;
    string updated_at = 8;
    repeated Rol roles = 9;
    repeated Permission permissions = 10;
    bool is_super_user = 11;
    repeated Organization organizations = 12;
    string msg = 13;
    repeated Project projects = 14;

    // details
    string phone_number = 15;
    string country = 16;
    string city = 17;
    string zip_code = 18;
    string address = 19;
    string state = 20;
    string emoji_country = 21;
	
}