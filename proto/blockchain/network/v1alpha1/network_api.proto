syntax = "proto3";
package blockchain.network.v1alpha1;

option go_package = "github.com/cuemby/ccp-sdk/gen/go/blockchain/network/v1alpha1";

import "blockchain/network/v1alpha1/network.proto";
import  "google/protobuf/empty.proto";

service BlockchainAPIService {
    rpc CreateNetwork(CreateNetworkRequest) returns (CreateNetworkResponse);
    rpc AddPeerToOrganization(AddPeerToOrganizationRequest) returns (AddPeerToOrganizationResponse);
    rpc GetBlockchains(GetBlockchainsRequest) returns (GetBlockchainsResponse);
    rpc GetBlockchainsByUserId(GetBlockchainsByUserIdRequest) returns (GetBlockchainsByUserIdResponse);
    rpc GetBlockchainById(GetBlockchainByIdRequest) returns (GetBlockchainByIdResponse);
    rpc GetOrganizationsByBlockchainId(GetOrganizationsByBlockchainIdRequest) returns (GetOrganizationsByBlockchainIdResponse);
    rpc SendInvitation(SendInvitationRequest) returns (SendInvitationResponse);
    rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
    rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse);
    rpc GetPeersByOrganizationId(GetPeersByOrganizationIdRequest) returns (GetPeersByOrganizationIdResponse);
    rpc GetOrdererByNetworkId(GetOrdererByNetworkIdRequest) returns (GetOrdererByNetworkIdResponse);
    rpc AddOrdererByNetworkId(AddOrdererByNetworkIdRequest) returns (AddOrdererByNetworkIdResponse);
}


// Requests messages
message CreateNetworkRequest {
    blockchain.network.v1alpha1.Network network = 1;
    blockchain.network.v1alpha1.Organization organization = 2;
    string ccp_organization_id  = 3;
    string ccp_project_id  = 4;
}

message AddPeerToOrganizationRequest {
    string ccp_organization_id = 1;
    string ccp_project_id = 2;
    string organization_id = 3;
}

message AddOrdererByNetworkIdRequest {
    blockchain.network.v1alpha1.Orderer orderer = 1;
    string ccp_organization_id  = 2;
    string ccp_project_id  = 3;
}

message CreateChannelRequest {
    blockchain.network.v1alpha1.Channel channel = 1;
}

message GetBlockchainsRequest {
    int64 offset = 1;
    int64 limit = 2;
}

message GetBlockchainsByUserIdRequest {
    string user_id = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message GetPeersByOrganizationIdRequest {
    string organization_id = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message GetOrdererByNetworkIdRequest {
    string network_id = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message GetBlockchainByIdRequest {
    string id = 1;
}

message GetOrganizationsByBlockchainIdRequest {
    string blockchain_id = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message CreateOrganizationRequest {
    blockchain.network.v1alpha1.Organization organization = 1;
    string ccp_organization_id  = 2;
    string ccp_project_id = 3;
}

message SendInvitationRequest {
    blockchain.network.v1alpha1.Invitation invitation = 1;
}

// Response messages
message CreateNetworkResponse {
    blockchain.network.v1alpha1.Network network = 1;
    string message = 2;
}

message AddPeerToOrganizationResponse {
    blockchain.network.v1alpha1.Organization organization = 1;
    string message = 2;
}

message AddOrdererByNetworkIdResponse {
    blockchain.network.v1alpha1.Orderer orderer = 1;
    string message = 2;
}

message CreateChannelResponse {
    blockchain.network.v1alpha1.Channel channel = 1;
    string message = 2;
}

message GetBlockchainsResponse {
    repeated blockchain.network.v1alpha1.Network networks = 1;
    int64 total = 2;
    string next_url = 3;
    string previous_url = 4; 
}

message GetBlockchainsByUserIdResponse {
    repeated blockchain.network.v1alpha1.Network networks = 1;
    int64 total = 2;
    string next_url = 3;
    string previous_url = 4; 
}

message GetOrdererByNetworkIdResponse {
    repeated blockchain.network.v1alpha1.Orderer orderer = 1;
    int64 total = 2;
    string next_url = 3;
    string previous_url = 4; 
}

message GetPeersByOrganizationIdResponse {
    repeated blockchain.network.v1alpha1.Peer peer = 1;
    int64 total = 2;
    string next_url = 3;
    string previous_url = 4; 
}

message GetBlockchainByIdResponse {
    blockchain.network.v1alpha1.Network network = 1;
}

message GetOrganizationsByBlockchainIdResponse {
    repeated blockchain.network.v1alpha1.Organization organizations = 1;
    int64 total = 2;
    string next_url = 3;
    string previous_url = 4; 
}

message CreateOrganizationResponse {
    blockchain.network.v1alpha1.Organization organization = 1;
    string message = 2;
}

message SendInvitationResponse {
    blockchain.network.v1alpha1.Invitation invitation = 1;
    string message = 2;
}